{
  "manifestVersion": "3.2",
  "proxies": [],
  "impls": {
    "a7d19488e1779609ed5cb67c44281239b6d46670c3b8cab69af0df12e783c1d5": {
      "address": "0x73948847369C70514fD9b3260b49E03C3C574315",
      "txHash": "0x0631d819539afb20f747839bdffc5a94e9e2991ed94ded2790f3b674db7fcc3f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)253_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2869_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:25"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:89"
          },
          {
            "contract": "EIP712Base",
            "label": "domainSeperator",
            "type": "t_bytes32",
            "src": "contracts/EIP712Base.sol:21"
          },
          {
            "contract": "NativeMetaTransaction",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NativeMetaTransaction.sol:19"
          },
          {
            "contract": "CompiBrain",
            "label": "_nftQuestionAnswer",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_string_storage))))",
            "src": "contracts/CompiBrain.sol:26"
          },
          {
            "contract": "CompiBrain",
            "label": "_nftFlag",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts/CompiBrain.sol:30"
          },
          {
            "contract": "CompiBrain",
            "label": "_nftName",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts/CompiBrain.sol:34"
          },
          {
            "contract": "CompiBrain",
            "label": "_nftOperator",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/CompiBrain.sol:38"
          },
          {
            "contract": "CompiBrain",
            "label": "_nftQuestions",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)))",
            "src": "contracts/CompiBrain.sol:42"
          },
          {
            "contract": "CompiBrain",
            "label": "_nftScenes",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_string_storage)dyn_storage))",
            "src": "contracts/CompiBrain.sol:46"
          },
          {
            "contract": "CompiBrain",
            "label": "_sceneAdded",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/CompiBrain.sol:50"
          },
          {
            "contract": "CompiBrain",
            "label": "_initialScene",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts/CompiBrain.sol:54"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_string_storage))))": {
            "label": "mapping(address => mapping(uint256 => mapping(string => mapping(string => string))))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_string_storage)))": {
            "label": "mapping(uint256 => mapping(string => mapping(string => string)))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_string_storage))": {
            "label": "mapping(string => mapping(string => string))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(address => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(string => string[])))"
          },
          "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(string => string[]))"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(string => string[])"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_string_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => string[]))"
          },
          "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(uint256 => string[])"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2869_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2869_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2568_storage"
              }
            ]
          },
          "t_struct(Set)2568_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)253_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)253_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
