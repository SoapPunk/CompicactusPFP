/*! "node_modules/@dcl/amd/dist/amd.js" 54adfc25d5d794c206ea8d4053e909a60032b05d7ca6356f6d71788b97968d76 */ eval("\"use strict\";\n// A naive attempt at getting the global `this`. Donâ€™t use `this`!\nconst getGlobalThis = function () {\n    // @ts-ignore\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    // @ts-ignore\n    if (typeof self !== 'undefined')\n        return self;\n    // @ts-ignore\n    if (typeof window !== 'undefined')\n        return window;\n    // Note: this might still return the wrong result!\n    // @ts-ignore\n    if (typeof this !== 'undefined')\n        return this;\n    throw new Error('Unable to locate global `this`');\n};\nconst globalObject = getGlobalThis();\nvar loader;\n(function (loader) {\n    'use strict';\n    const MODULE_LOADING = 1;\n    const MODULE_READY = 2;\n    let unnamedModules = 0;\n    let anonymousQueue = [];\n    let cycles = [];\n    const settings = {\n        baseUrl: ''\n    };\n    const registeredModules = {};\n    function config(config) {\n        if (typeof config === 'object') {\n            for (let x in config) {\n                if (config.hasOwnProperty(x)) {\n                    ;\n                    settings[x] = config[x];\n                }\n            }\n        }\n    }\n    loader.config = config;\n    function define(first, second, third) {\n        let moduleToLoad = null;\n        let factory = {};\n        let dependencies = null;\n        if (typeof first === 'function') {\n            factory = first;\n        }\n        else if (typeof first === 'string') {\n            moduleToLoad = first;\n            if (typeof second === 'function') {\n                factory = second;\n            }\n            else if (second instanceof Array) {\n                dependencies = second;\n                factory = third;\n            }\n        }\n        else if (first instanceof Array) {\n            dependencies = first;\n            if (typeof second === 'function') {\n                factory = second;\n            }\n        }\n        dependencies = dependencies || ['require', 'exports', 'module'];\n        if (moduleToLoad === null) {\n            moduleToLoad = `unnamed-module-${unnamedModules++}`;\n        }\n        moduleToLoad = normalizeModuleId(moduleToLoad);\n        function ready(deps) {\n            const module = registeredModules[moduleToLoad];\n            if (!module)\n                throw new Error('Could not access registered module ' + moduleToLoad);\n            let exports = module.exports;\n            exports = typeof factory === 'function' ? factory.apply(globalObject, deps) || exports : factory;\n            module.exports = exports;\n            moduleReady(moduleToLoad);\n        }\n        dependencies = (dependencies || []).map((dep) => resolve(moduleToLoad, dep));\n        if (!registeredModules[moduleToLoad]) {\n            registeredModules[moduleToLoad] = {\n                name: moduleToLoad,\n                parent: null,\n                dclamd: MODULE_LOADING,\n                dependencies,\n                handlers: [],\n                exports: {},\n                dependants: new Set()\n            };\n        }\n        registeredModules[moduleToLoad].dependencies = dependencies;\n        require(dependencies, ready, (err) => {\n            if (typeof onerror == 'function') {\n                onerror(err);\n            }\n            else {\n                throw err;\n            }\n        }, moduleToLoad);\n    }\n    loader.define = define;\n    (function (define) {\n        define.amd = {};\n        define.modules = registeredModules;\n    })(define = loader.define || (loader.define = {}));\n    function moduleReady(moduleName) {\n        const module = registeredModules[moduleName];\n        if (!module)\n            throw new Error('Could not access registered module ' + moduleName);\n        module.dclamd = MODULE_READY;\n        let handlers = module.handlers;\n        if (handlers && handlers.length) {\n            for (let x = 0; x < handlers.length; x++) {\n                handlers[x](registeredModules[moduleName]);\n            }\n        }\n    }\n    /**\n     * Walks (recursively) the dependencies of 'from' in search of 'to'.\n     * Returns cycle as array.\n     */\n    function getCyclePath(fromModule, toModule, depth) {\n        if (!registeredModules[fromModule]) {\n            return null;\n        }\n        if (fromModule == toModule || depth == 50)\n            return [fromModule];\n        const dependencies = registeredModules[fromModule].dependencies;\n        for (let i = 0, len = dependencies.length; i < len; i++) {\n            let path = getCyclePath(dependencies[i], toModule, depth + 1);\n            if (path !== null) {\n                path.push(fromModule);\n                return path;\n            }\n        }\n        return null;\n    }\n    /**\n     * Walks (recursively) the dependencies of 'from' in search of 'to'.\n     * Returns true if there is such a path or false otherwise.\n     * @param from Module id to start at\n     * @param to Module id to look for\n     */\n    function hasDependencyPath(fromId, toId) {\n        let from = registeredModules[fromId];\n        if (!from) {\n            return false;\n        }\n        let inQueue = {};\n        for (let i in registeredModules) {\n            inQueue[i] = false;\n        }\n        let queue = [];\n        // Insert 'from' in queue\n        queue.push(from);\n        inQueue[fromId] = true;\n        while (queue.length > 0) {\n            // Pop first inserted element of queue\n            let element = queue.shift();\n            let dependencies = element.dependencies;\n            if (dependencies) {\n                // Walk the element's dependencies\n                for (let i = 0, len = dependencies.length; i < len; i++) {\n                    let dependency = dependencies[i];\n                    if (dependency === toId) {\n                        // There is a path to 'to'\n                        return true;\n                    }\n                    let dependencyModule = registeredModules[dependency];\n                    if (dependencyModule && !inQueue[dependency]) {\n                        // Insert 'dependency' in queue\n                        inQueue[dependency] = true;\n                        queue.push(dependencyModule);\n                    }\n                }\n            }\n        }\n        // There is no path to 'to'\n        return false;\n    }\n    function require(dependencies, callback, errorCallback, parentModule) {\n        let dependenciesResults = new Array(dependencies.length).fill(null);\n        let loadedCount = 0;\n        let hasLoaded = false;\n        if (typeof dependencies === 'string') {\n            if (registeredModules[dependencies]) {\n                if (registeredModules[dependencies].dclamd === MODULE_LOADING) {\n                    throw new Error(`Trying to load ${dependencies} from ${parentModule}. The first module is still loading.`);\n                }\n                return registeredModules[dependencies];\n            }\n            throw new Error(dependencies + ' has not been defined. Please include it as a dependency in ' + parentModule + \"'s define()\");\n        }\n        const depsLength = dependencies.length;\n        for (let index = 0; index < depsLength; index++) {\n            switch (dependencies[index]) {\n                case 'require':\n                    let _require = function (new_module, callback, errorCallback) {\n                        return require(new_module, callback, errorCallback, parentModule);\n                    };\n                    _require.toUrl = function (module) {\n                        return toUrl(module, parentModule);\n                    };\n                    dependenciesResults[index] = _require;\n                    loadedCount++;\n                    break;\n                case 'exports':\n                    if (!registeredModules[parentModule]) {\n                        throw new Error('Parent module ' + parentModule + ' not registered yet');\n                    }\n                    dependenciesResults[index] = registeredModules[parentModule].exports;\n                    loadedCount++;\n                    break;\n                case 'module':\n                    dependenciesResults[index] = {\n                        id: parentModule,\n                        uri: toUrl(parentModule)\n                    };\n                    loadedCount++;\n                    break;\n                default: {\n                    // If we have a circular dependency, then we resolve the module even if it hasn't loaded yet\n                    const dependency = dependencies[index];\n                    const hasCycles = hasDependencyPath(dependency, parentModule);\n                    const handleLoadedModule = () => {\n                        dependenciesResults[index] = registeredModules[dependency].exports;\n                        loadedCount++;\n                        if (loadedCount === depsLength && callback) {\n                            hasLoaded = true;\n                            callback(dependenciesResults);\n                        }\n                    };\n                    if (hasCycles) {\n                        const cyclePath = getCyclePath(dependency, parentModule, 0);\n                        if (cyclePath) {\n                            cyclePath.reverse();\n                            cyclePath.push(dependency);\n                            cycles.push(cyclePath);\n                        }\n                        load(dependency, () => { }, errorCallback, parentModule);\n                        handleLoadedModule();\n                    }\n                    else {\n                        load(dependency, handleLoadedModule, errorCallback, parentModule);\n                    }\n                    break;\n                }\n            }\n        }\n        if (!hasLoaded && loadedCount === depsLength && callback) {\n            callback(dependenciesResults);\n        }\n    }\n    loader.require = require;\n    function createMethodHandler(rpcHandle, method) {\n        return function () {\n            return dcl.callRpc(rpcHandle, method.name, anonymousQueue.slice.call(arguments, 0));\n        };\n    }\n    // returns: resolvedModuleName\n    function resolve(fromModule, toModule) {\n        return fromModule ? toUrl(toModule, fromModule) : toModule;\n    }\n    function load(moduleName, callback, errorCallback, parentModule) {\n        if (registeredModules[moduleName]) {\n            registeredModules[moduleName].dependants.add(parentModule);\n            if (registeredModules[moduleName].dclamd === MODULE_LOADING) {\n                callback && registeredModules[moduleName].handlers.push(callback);\n            }\n            else {\n                callback && callback(registeredModules[moduleName]);\n            }\n            return;\n        }\n        else {\n            registeredModules[moduleName] = {\n                name: moduleName,\n                parent: parentModule,\n                dclamd: MODULE_LOADING,\n                handlers: [callback],\n                dependencies: [],\n                dependants: new Set([parentModule]),\n                exports: {}\n            };\n        }\n        if (moduleName.indexOf('@') === 0) {\n            let exports = registeredModules[moduleName].exports;\n            if (typeof dcl.loadModule === 'function') {\n                dcl\n                    .loadModule(moduleName, exports)\n                    .then((descriptor) => {\n                    for (let i in descriptor.methods) {\n                        const method = descriptor.methods[i];\n                        exports[method.name] = createMethodHandler(descriptor.rpcHandle, method);\n                    }\n                    moduleReady(moduleName);\n                })\n                    .catch((e) => {\n                    errorCallback(e);\n                });\n            }\n            else {\n                throw new Error('Asynchronous modules will not work because loadModule function is not present');\n            }\n        }\n    }\n    if (typeof dcl !== 'undefined') {\n        dcl.onStart(() => {\n            const unknownModules = new Set();\n            const notLoadedModules = [];\n            for (let i in registeredModules) {\n                if (registeredModules[i]) {\n                    if (registeredModules[i].dclamd === MODULE_LOADING) {\n                        notLoadedModules.push(registeredModules[i]);\n                    }\n                    registeredModules[i].dependencies.forEach(($) => {\n                        if ($ == 'require' || $ == 'exports' || $ == 'module')\n                            return;\n                        if (!registeredModules[$])\n                            unknownModules.add($);\n                    });\n                }\n            }\n            const errorParts = [];\n            if (cycles.length) {\n                errorParts.push(`\\n> Cyclic dependencies: ${cycles.map(($) => '\\n  - ' + $.join(' -> ')).join('')}`);\n            }\n            if (unknownModules.size) {\n                errorParts.push(`\\n> Undeclared/unknown modules: ${Array.from(unknownModules)\n                    .map(($) => '\\n  - ' + $)\n                    .join('')}`);\n            }\n            if (notLoadedModules.length) {\n                errorParts.push(`\\n> These modules didn't load: ${notLoadedModules.map(($) => '\\n  - ' + $.name).join('')}.\\n`);\n            }\n            if (errorParts.length) {\n                throw new Error(errorParts.join('\\n'));\n            }\n        });\n    }\n    /**\n     * Normalize 'a/../name' to 'name', etc.\n     */\n    function normalizeModuleId(moduleId) {\n        let r = moduleId, pattern;\n        // replace /./ => /\n        pattern = /\\/\\.\\//;\n        while (pattern.test(r)) {\n            r = r.replace(pattern, '/');\n        }\n        // replace ^./ => nothing\n        r = r.replace(/^\\.\\//g, '');\n        // replace /aa/../ => / (BUT IGNORE /../../)\n        pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\n        while (pattern.test(r)) {\n            r = r.replace(pattern, '/');\n        }\n        // replace ^aa/../ => nothing (BUT IGNORE ../../)\n        r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\n        // replace ^/ => nothing\n        r = r.replace(/^\\//g, '');\n        return r;\n    }\n    /**\n     * Resolve relative module ids\n     */\n    function resolveModule(moduleId, parentModule) {\n        let result = moduleId;\n        if (!result.startsWith('@')) {\n            if (result.startsWith('./') || result.startsWith('../')) {\n                const currentPath = parentModule.split('/');\n                currentPath.pop();\n                result = normalizeModuleId(currentPath.join('/') + '/' + result);\n            }\n        }\n        return result;\n    }\n    function toUrl(moduleName, parentModule) {\n        switch (moduleName) {\n            case 'require':\n            case 'exports':\n            case 'module':\n                return moduleName;\n        }\n        if (parentModule) {\n            return resolveModule(moduleName, parentModule);\n        }\n        return normalizeModuleId(moduleName);\n    }\n    require.toUrl = toUrl;\n})(loader || (loader = {}));\nglobalObject.define = loader.define;\nglobalObject.dclamd = loader;\n//# sourceMappingURL=data:application/json;base64,\n//# sourceURL=dcl://node_modules/@dcl/amd/dist/amd.js")
/*! "node_modules/decentraland-ecs/dist/src/index.js" fca3a1b88e1c5a42acea27d79c9dc7209df836e6e705e0ea3ef8e4c64eac82d9 */ eval("(function (exports) {\n  'use strict';\n\n  /**\r\n   * Entities can be attached to each other by using the `setParent` method. However, there are cases where we might want to attach entities\r\n   * to other objects that are not entities created by the same scene (for example, the player's avatar). For those cases, we have this class.\r\n   * @public\r\n   */\r\n  var Attachable = /** @class */ (function () {\r\n      function Attachable() {\r\n      }\r\n      /** Used to attach entities to the avatar. Entities will follow the avatar when it moves */\r\n      Attachable.AVATAR = { getEntityRepresentation: function (engine) { return engine.avatarEntity; } };\r\n      /** Used to attach entities to the camera. When in first person mode, the attached entities will also rotate with the camera */\r\n      Attachable.FIRST_PERSON_CAMERA = { getEntityRepresentation: function (engine) { return engine.firstPersonCameraEntity; } };\r\n      return Attachable;\r\n  }());\n\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation.\r\n\r\n  Permission to use, copy, modify, and/or distribute this software for any\r\n  purpose with or without fee is hereby granted.\r\n\r\n  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n  PERFORMANCE OF THIS SOFTWARE.\r\n  ***************************************************************************** */\r\n  /* global Reflect, Promise */\r\n\r\n  var extendStatics = function(d, b) {\r\n      extendStatics = Object.setPrototypeOf ||\r\n          ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n          function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n      return extendStatics(d, b);\r\n  };\r\n\r\n  function __extends(d, b) {\r\n      if (typeof b !== \"function\" && b !== null)\r\n          throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n      extendStatics(d, b);\r\n      function __() { this.constructor = d; }\r\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n  }\r\n\r\n  var __assign = function() {\r\n      __assign = Object.assign || function __assign(t) {\r\n          for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n              s = arguments[i];\r\n              for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n          }\r\n          return t;\r\n      };\r\n      return __assign.apply(this, arguments);\r\n  };\r\n\r\n  function __decorate(decorators, target, key, desc) {\r\n      var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n      if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n      else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n      return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n  }\r\n\r\n  function __awaiter(thisArg, _arguments, P, generator) {\r\n      function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n      return new (P || (P = Promise))(function (resolve, reject) {\r\n          function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n          function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n          function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n          step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n      });\r\n  }\r\n\r\n  function __generator(thisArg, body) {\r\n      var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n      return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n      function verb(n) { return function (v) { return step([n, v]); }; }\r\n      function step(op) {\r\n          if (f) throw new TypeError(\"Generator is already executing.\");\r\n          while (_) try {\r\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n              if (y = 0, t) op = [op[0] & 2, t.value];\r\n              switch (op[0]) {\r\n                  case 0: case 1: t = op; break;\r\n                  case 4: _.label++; return { value: op[1], done: false };\r\n                  case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                  case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                  default:\r\n                      if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                      if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                      if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                      if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                      if (t[2]) _.ops.pop();\r\n                      _.trys.pop(); continue;\r\n              }\r\n              op = body.call(thisArg, _);\r\n          } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n          if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n      }\r\n  }\r\n\r\n  function __values(o) {\r\n      var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n      if (m) return m.call(o);\r\n      if (o && typeof o.length === \"number\") return {\r\n          next: function () {\r\n              if (o && i >= o.length) o = void 0;\r\n              return { value: o && o[i++], done: !o };\r\n          }\r\n      };\r\n      throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n  }\r\n\r\n  function __read(o, n) {\r\n      var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n      if (!m) return o;\r\n      var i = m.call(o), r, ar = [], e;\r\n      try {\r\n          while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n      }\r\n      catch (error) { e = { error: error }; }\r\n      finally {\r\n          try {\r\n              if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n          }\r\n          finally { if (e) throw e.error; }\r\n      }\r\n      return ar;\r\n  }\r\n\r\n  function __spreadArray(to, from) {\r\n      for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n          to[j] = from[i];\r\n      return to;\r\n  }\n\n  var lastGeneratedId = 0;\r\n  /**\r\n   * Log function. Only works in debug mode, otherwise it does nothing.\r\n   * @param args - any loggable parameter\r\n   * @public\r\n   */\r\n  function log() {\r\n      var args = [];\r\n      for (var _i = 0; _i < arguments.length; _i++) {\r\n          args[_i] = arguments[_i];\r\n      }\r\n      if (typeof dcl !== 'undefined') {\r\n          dcl.log.apply(dcl, __spreadArray([], __read(args)));\r\n      }\r\n      else {\r\n          // tslint:disable-next-line:no-console\r\n          console.log.apply(console, __spreadArray(['DEBUG:'], __read(args)));\r\n      }\r\n  }\r\n  /**\r\n   * Error function. Prints a console error. Only works in debug mode, otherwise it does nothing.\r\n   * @param error - string or Error object.\r\n   * @param data - any debug information.\r\n   * @public\r\n   */\r\n  function error(error, data) {\r\n      if (typeof dcl !== 'undefined') {\r\n          dcl.error(error, data);\r\n      }\r\n      else {\r\n          // tslint:disable-next-line:no-console\r\n          console.error('ERROR:', error, data);\r\n      }\r\n  }\r\n  /**\r\n   * Generates a new prefixed id\r\n   * @public\r\n   */\r\n  function newId(type) {\r\n      lastGeneratedId++;\r\n      if (type.length === 0)\r\n          throw new Error('newId(type: string): type cannot be empty');\r\n      return type + lastGeneratedId.toString(36);\r\n  }\r\n  /**\r\n   * @internal\r\n   */\r\n  function uuid() {\r\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n          var r = (Math.random() * 16) | 0;\r\n          var v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n          return v.toString(16);\r\n      });\r\n  }\r\n  /**\r\n   * Returns an array of the given size filled with element built from the given constructor and the paramters\r\n   * @param size - the number of element to construct and put in the array\r\n   * @param itemBuilder - a callback responsible for creating new instance of item. Called once per array entry.\r\n   * @returns a new array filled with new objects\r\n   * @internal\r\n   */\r\n  function buildArray(size, itemBuilder) {\r\n      var a = [];\r\n      for (var i = 0; i < size; ++i) {\r\n          a.push(itemBuilder());\r\n      }\r\n      return a;\r\n  }\r\n  /**\r\n   * @public\r\n   */\r\n  function openExternalURL(url) {\r\n      if (typeof dcl !== 'undefined') {\r\n          dcl.openExternalUrl(url);\r\n      }\r\n      else {\r\n          error('ERROR: openExternalURL dcl is undefined');\r\n      }\r\n  }\r\n  /**\r\n   * Popup NFT info dialog\r\n   * @param scr - 'ethereum://contractAddress/tokenID'\r\n   * @param comment - optional. add a comment.\r\n   * @public\r\n   */\r\n  function openNFTDialog(scr, comment) {\r\n      if (comment === void 0) { comment = null; }\r\n      if (typeof dcl !== 'undefined') {\r\n          var regex = /ethereum:\\/\\/(.+)\\/(.+)/;\r\n          var matches = scr.match(regex);\r\n          if (!matches || matches.length < 3) {\r\n              return;\r\n          }\r\n          dcl.openNFTDialog(matches[1], matches[2], comment);\r\n      }\r\n      else {\r\n          error('ERROR: openNFTDialog dcl is undefined');\r\n      }\r\n  }\n\n  var eventNameSymbol = '__event_name__';\r\n  var takenEventNames = [];\r\n  function getEventNameFromConstructor(ctor) {\r\n      if (!(eventNameSymbol in ctor) || typeof ctor[eventNameSymbol] !== 'string') {\r\n          throw new Error('The EventConstructor is not registered');\r\n      }\r\n      return ctor[eventNameSymbol];\r\n  }\r\n  /**\r\n   * @public\r\n   */\r\n  var EventManager = /** @class */ (function () {\r\n      function EventManager() {\r\n          this.listeners = {};\r\n      }\r\n      EventManager.prototype.addListener = function (eventClass, listener, listenerFunction) {\r\n          if (!eventClass || typeof eventClass !== 'function') {\r\n              throw new Error('Invalid EventConstructor');\r\n          }\r\n          var eventName = getEventNameFromConstructor(eventClass);\r\n          var listeners = this.listeners[eventName];\r\n          if (!listeners) {\r\n              listeners = this.listeners[eventName] = [];\r\n          }\r\n          for (var i = 0; i < listeners.length; i++) {\r\n              var x = listeners[i];\r\n              if (x.listener === listener) {\r\n                  throw new Error('The provided listener is already registered');\r\n              }\r\n          }\r\n          listeners.push({\r\n              listener: listener,\r\n              fn: listenerFunction\r\n          });\r\n          return this;\r\n      };\r\n      EventManager.prototype.removeListener = function (listener, eventClass) {\r\n          if (!eventClass || typeof eventClass !== 'function') {\r\n              throw new Error('Invalid EventConstructor');\r\n          }\r\n          var eventName = getEventNameFromConstructor(eventClass);\r\n          var listeners = this.listeners[eventName];\r\n          if (!listeners) {\r\n              return false;\r\n          }\r\n          for (var i = 0; i < listeners.length; i++) {\r\n              var x = listeners[i];\r\n              if (x.listener === listener) {\r\n                  listeners.splice(i, 1);\r\n                  return true;\r\n              }\r\n          }\r\n          return false;\r\n      };\r\n      EventManager.prototype.fireEvent = function (event) {\r\n          var eventName = getEventNameFromConstructor(event.constructor);\r\n          var listeners = this.listeners[eventName];\r\n          if (listeners) {\r\n              for (var i = 0; i < listeners.length; i++) {\r\n                  try {\r\n                      var l = listeners[i];\r\n                      l.fn.call(l.listener, event);\r\n                  }\r\n                  catch (e) {\r\n                      error(e);\r\n                  }\r\n              }\r\n          }\r\n          return this;\r\n      };\r\n      return EventManager;\r\n  }());\r\n  /**\r\n   * @public\r\n   */\r\n  function EventConstructor() {\r\n      var eventName = newId('EV');\r\n      if (takenEventNames.indexOf(eventName) !== -1) {\r\n          throw new Error(\"The event name \" + eventName + \" is already taken\");\r\n      }\r\n      takenEventNames.push(eventName);\r\n      return function (target) {\r\n          target[eventNameSymbol] = eventName;\r\n          return target;\r\n      };\r\n  }\n\n  /**\r\n   * @public\r\n   */\r\n  var ComponentRemoved = /** @class */ (function () {\r\n      function ComponentRemoved(entity, componentName, component) {\r\n          this.entity = entity;\r\n          this.componentName = componentName;\r\n          this.component = component;\r\n          // stub\r\n      }\r\n      ComponentRemoved = __decorate([\r\n          EventConstructor()\r\n      ], ComponentRemoved);\r\n      return ComponentRemoved;\r\n  }());\r\n  /**\r\n   * @public\r\n   */\r\n  var ComponentAdded = /** @class */ (function () {\r\n      function ComponentAdded(entity, componentName, classId) {\r\n          this.entity = entity;\r\n          this.componentName = componentName;\r\n          this.classId = classId;\r\n          // stub\r\n      }\r\n      ComponentAdded = __decorate([\r\n          EventConstructor()\r\n      ], ComponentAdded);\r\n      return ComponentAdded;\r\n  }());\r\n  /**\r\n   * @public\r\n   */\r\n  var ParentChanged = /** @class */ (function () {\r\n      function ParentChanged(entity, parent) {\r\n          this.entity = entity;\r\n          this.parent = parent;\r\n          // stub\r\n      }\r\n      ParentChanged = __decorate([\r\n          EventConstructor()\r\n      ], ParentChanged);\r\n      return ParentChanged;\r\n  }());\n\n  /**\r\n   * @public\r\n   */\r\n  exports.UIValueType = void 0;\r\n  (function (UIValueType) {\r\n      UIValueType[UIValueType[\"PERCENT\"] = 0] = \"PERCENT\";\r\n      UIValueType[UIValueType[\"PIXELS\"] = 1] = \"PIXELS\";\r\n  })(exports.UIValueType || (exports.UIValueType = {}));\r\n  /**\r\n   * @public\r\n   */\r\n  var UIValue = /** @class */ (function () {\r\n      function UIValue(value) {\r\n          this.type = exports.UIValueType.PIXELS;\r\n          if (typeof value === 'string') {\r\n              var valueAsString = value;\r\n              if (valueAsString.indexOf('px') > -1) {\r\n                  this.type = exports.UIValueType.PIXELS;\r\n              }\r\n              else if (valueAsString.indexOf('%') > -1) {\r\n                  this.type = exports.UIValueType.PERCENT;\r\n              }\r\n              this.value = parseFloat(valueAsString);\r\n          }\r\n          else {\r\n              this.value = value;\r\n          }\r\n      }\r\n      UIValue.prototype.toString = function () {\r\n          var result = this.value.toString();\r\n          if (this.type === exports.UIValueType.PERCENT) {\r\n              result += '%';\r\n          }\r\n          else {\r\n              result += 'px';\r\n          }\r\n          return result;\r\n      };\r\n      return UIValue;\r\n  }());\n\n  var componentSymbol = '__name__symbol_';\r\n  var componentClassIdSymbol = '__classId__symbol_';\r\n  var componentIdSymbol = '__component__id_';\r\n  /**\r\n   * @public\r\n   */\r\n  var DisposableComponentCreated = /** @class */ (function () {\r\n      function DisposableComponentCreated(componentId, componentName, classId) {\r\n          this.componentId = componentId;\r\n          this.componentName = componentName;\r\n          this.classId = classId;\r\n          // stub\r\n      }\r\n      DisposableComponentCreated = __decorate([\r\n          EventConstructor()\r\n      ], DisposableComponentCreated);\r\n      return DisposableComponentCreated;\r\n  }());\r\n  /**\r\n   * @public\r\n   */\r\n  var DisposableComponentRemoved = /** @class */ (function () {\r\n      function DisposableComponentRemoved(componentId) {\r\n          this.componentId = componentId;\r\n          // stub\r\n      }\r\n      DisposableComponentRemoved = __decorate([\r\n          EventConstructor()\r\n      ], DisposableComponentRemoved);\r\n      return DisposableComponentRemoved;\r\n  }());\r\n  /**\r\n   * @public\r\n   */\r\n  var DisposableComponentUpdated = /** @class */ (function () {\r\n      function DisposableComponentUpdated(componentId, component) {\r\n          this.componentId = componentId;\r\n          this.component = component;\r\n          // stub\r\n      }\r\n      DisposableComponentUpdated = __decorate([\r\n          EventConstructor()\r\n      ], DisposableComponentUpdated);\r\n      return DisposableComponentUpdated;\r\n  }());\r\n  /**\r\n   * @public\r\n   */\r\n  function Component(componentName, classId) {\r\n      return function (target) {\r\n          if (target.isComponent) {\r\n              throw new TypeError(\"You cannot extend a component. Trying to extend \" + target.originalClassName + \" with: \" + componentName);\r\n          }\r\n          var extendedClass = target;\r\n          var RegisteredComponent = function RegisteredComponent() {\r\n              var args = Array.prototype.slice.call(arguments);\r\n              var ret = new (extendedClass.bind.apply(extendedClass, __spreadArray([void 0], __read(args))))();\r\n              Object.defineProperty(ret, componentSymbol, {\r\n                  enumerable: false,\r\n                  writable: false,\r\n                  configurable: false,\r\n                  value: componentName\r\n              });\r\n              if (classId !== undefined) {\r\n                  Object.defineProperty(ret, componentClassIdSymbol, {\r\n                      enumerable: false,\r\n                      writable: false,\r\n                      configurable: false,\r\n                      value: classId\r\n                  });\r\n              }\r\n              return ret;\r\n          };\r\n          if (classId !== undefined) {\r\n              RegisteredComponent[componentClassIdSymbol] = classId;\r\n          }\r\n          RegisteredComponent[componentSymbol] = componentName;\r\n          RegisteredComponent.isComponent = true;\r\n          RegisteredComponent.originalClassName = componentName;\r\n          RegisteredComponent.prototype = target.prototype;\r\n          RegisteredComponent.prototype.constructor = target;\r\n          return RegisteredComponent;\r\n      };\r\n  }\r\n  /**\r\n   * @public\r\n   */\r\n  function DisposableComponent(componentName, classId) {\r\n      return function (target) {\r\n          if (target.isComponent) {\r\n              throw new TypeError(\"You cannot extend a component. Trying to extend \" + target.originalClassName + \" with: \" + componentName);\r\n          }\r\n          if (typeof classId !== 'number' || isNaN(classId)) {\r\n              throw new Error(\"classId: \" + classId + \" is an invalid integer\");\r\n          }\r\n          var extendedClass = target;\r\n          var RegisteredComponent = function RegisteredComponent() {\r\n              if (!DisposableComponent.engine) {\r\n                  throw new Error('You need to set a DisposableComponent.engine before creating disposable components');\r\n              }\r\n              var args = Array.prototype.slice.call(arguments);\r\n              var ret = new (extendedClass.bind.apply(extendedClass, __spreadArray([void 0], __read(args))))();\r\n              var id = newId('C');\r\n              Object.defineProperty(ret, componentSymbol, {\r\n                  enumerable: false,\r\n                  writable: false,\r\n                  configurable: false,\r\n                  value: componentName\r\n              });\r\n              Object.defineProperty(ret, componentIdSymbol, {\r\n                  enumerable: false,\r\n                  writable: false,\r\n                  configurable: false,\r\n                  value: id\r\n              });\r\n              if (classId !== undefined) {\r\n                  Object.defineProperty(ret, componentClassIdSymbol, {\r\n                      enumerable: false,\r\n                      writable: false,\r\n                      configurable: false,\r\n                      value: classId\r\n                  });\r\n              }\r\n              if (DisposableComponent.engine) {\r\n                  DisposableComponent.engine.registerComponent(ret);\r\n              }\r\n              return ret;\r\n          };\r\n          if (classId !== undefined) {\r\n              RegisteredComponent[componentClassIdSymbol] = classId;\r\n          }\r\n          RegisteredComponent[componentSymbol] = componentName;\r\n          RegisteredComponent.isComponent = true;\r\n          RegisteredComponent.isDisposableComponent = true;\r\n          RegisteredComponent.originalClassName = componentName;\r\n          RegisteredComponent.prototype = target.prototype;\r\n          RegisteredComponent.prototype.constructor = target;\r\n          return RegisteredComponent;\r\n      };\r\n  }\r\n  /** @internal */\r\n  (function (DisposableComponent) {\r\n      /** @internal */\r\n      // tslint:disable-next-line:whitespace\r\n      DisposableComponent.engine = null;\r\n  })(DisposableComponent || (DisposableComponent = {}));\r\n  /**\r\n   * @public\r\n   */\r\n  function getComponentName(component) {\r\n      if (!component) {\r\n          throw new TypeError(component + ' is not a component.');\r\n      }\r\n      if (component[componentSymbol]) {\r\n          return component[componentSymbol];\r\n      }\r\n      throw new TypeError(component + ' is not a registered component.');\r\n  }\r\n  /**\r\n   * @public\r\n   */\r\n  function getComponentClassId(component) {\r\n      if (!component) {\r\n          throw new TypeError(component + ' is not a component.');\r\n      }\r\n      if (component[componentClassIdSymbol]) {\r\n          return component[componentClassIdSymbol];\r\n      }\r\n      if (!component[componentSymbol]) {\r\n          throw new TypeError(component + ' is not a registered component.');\r\n      }\r\n      return null;\r\n  }\r\n  /**\r\n   * @public\r\n   */\r\n  function getComponentId(component) {\r\n      if (!component) {\r\n          throw new TypeError(component + ' is not a component.');\r\n      }\r\n      if (component[componentIdSymbol]) {\r\n          return component[componentIdSymbol];\r\n      }\r\n      throw new TypeError(component + ' is not a registered disposable component.');\r\n  }\r\n  /**\r\n   * @public\r\n   */\r\n  var ObservableComponent = /** @class */ (function () {\r\n      function ObservableComponent() {\r\n          this.dirty = false;\r\n          this.data = {};\r\n          this.subscriptions = [];\r\n      }\r\n      ObservableComponent.component = function (target, propertyKey) {\r\n          if (delete target[propertyKey]) {\r\n              var componentSymbol_1 = propertyKey + '_' + Math.random();\r\n              target[componentSymbol_1] = undefined;\r\n              Object.defineProperty(target, componentSymbol_1, __assign(__assign({}, Object.getOwnPropertyDescriptor(target, componentSymbol_1)), { enumerable: false }));\r\n              Object.defineProperty(target, propertyKey.toString(), {\r\n                  get: function () {\r\n                      return this[componentSymbol_1];\r\n                  },\r\n                  set: function (value) {\r\n                      var oldValue = this[componentSymbol_1];\r\n                      if (value) {\r\n                          this.data[propertyKey] = getComponentId(value);\r\n                      }\r\n                      else {\r\n                          this.data[propertyKey] = null;\r\n                      }\r\n                      this[componentSymbol_1] = value;\r\n                      if (value !== oldValue) {\r\n                          this.dirty = true;\r\n                          for (var i = 0; i < this.subscriptions.length; i++) {\r\n                              this.subscriptions[i](propertyKey, value, oldValue);\r\n                          }\r\n                      }\r\n                  },\r\n                  enumerable: true\r\n              });\r\n          }\r\n      };\r\n      ObservableComponent.field = function (target, propertyKey) {\r\n          if (delete target[propertyKey]) {\r\n              Object.defineProperty(target, propertyKey.toString(), {\r\n                  get: function () {\r\n                      return this.data[propertyKey];\r\n                  },\r\n                  set: function (value) {\r\n                      var oldValue = this.data[propertyKey];\r\n                      this.data[propertyKey] = value;\r\n                      if (value !== oldValue) {\r\n                          this.dirty = true;\r\n                          for (var i = 0; i < this.subscriptions.length; i++) {\r\n                              this.subscriptions[i](propertyKey, value, oldValue);\r\n                          }\r\n                      }\r\n                  },\r\n                  enumerable: true\r\n              });\r\n          }\r\n      };\r\n      ObservableComponent.uiValue = function (target, propertyKey) {\r\n          if (delete target[propertyKey]) {\r\n              Object.defineProperty(target, propertyKey.toString(), {\r\n                  get: function () {\r\n                      return this.data[propertyKey].toString();\r\n                  },\r\n                  set: function (value) {\r\n                      var oldValue = this.data[propertyKey];\r\n                      var finalValue = new UIValue(value);\r\n                      this.data[propertyKey] = finalValue;\r\n                      if (finalValue !== oldValue) {\r\n                          this.dirty = true;\r\n                          for (var i = 0; i < this.subscriptions.length; i++) {\r\n                              this.subscriptions[i](propertyKey, finalValue, oldValue);\r\n                          }\r\n                      }\r\n                  },\r\n                  enumerable: true\r\n              });\r\n          }\r\n      };\r\n      ObservableComponent.readonly = function (target, propertyKey) {\r\n          if (delete target[propertyKey]) {\r\n              Object.defineProperty(target, propertyKey.toString(), {\r\n                  get: function () {\r\n                      if (propertyKey in this.data === false) {\r\n                          throw new Error(\"The field \" + propertyKey + \" is uninitialized\");\r\n                      }\r\n                      return this.data[propertyKey];\r\n                  },\r\n                  set: function (value) {\r\n                      if (propertyKey in this.data) {\r\n                          throw new Error(\"The field \" + propertyKey + \" is readonly\");\r\n                      }\r\n                      this.data[propertyKey] = value;\r\n                      this.dirty = true;\r\n                  },\r\n                  enumerable: true,\r\n                  configurable: false\r\n              });\r\n          }\r\n      };\r\n      ObservableComponent.prototype.onChange = function (fn) {\r\n          this.subscriptions.push(fn);\r\n          return this;\r\n      };\r\n      ObservableComponent.prototype.toJSON = function () {\r\n          return this.data;\r\n      };\r\n      return ObservableComponent;\r\n  }());\r\n  /**\r\n   * @public\r\n   */\r\n  function isDisposableComponent(component) {\r\n      return componentIdSymbol in component;\r\n  }\n\n  /**\r\n   * @public\r\n   */\r\n  var ComponentGroup = /** @class */ (function () {\r\n      function ComponentGroup() {\r\n          var requires = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              requires[_i] = arguments[_i];\r\n          }\r\n          this.entities = [];\r\n          this.active = false;\r\n          this._requiresNames = [];\r\n          // validate requires list\r\n          if (!requires) {\r\n              throw new Error('ComponentGroup: Could not load the requires list');\r\n          }\r\n          if (!(requires instanceof Array)) {\r\n              throw new Error('ComponentGroup: requires list is not an Array');\r\n          }\r\n          Object.defineProperty(this, 'requires', {\r\n              get: function () {\r\n                  return requires.slice();\r\n              }\r\n          });\r\n          Object.defineProperty(this, 'requiresNames', {\r\n              get: function () {\r\n                  return this._requiresNames.slice();\r\n              }\r\n          });\r\n          var _loop_1 = function (ix) {\r\n              var component = requires[ix];\r\n              var name_1 = null;\r\n              if (!component) {\r\n                  throw new Error(\"ComponentGroup: the required component at location \" + ix + \" is invalid\");\r\n              }\r\n              try {\r\n                  name_1 = getComponentName(component);\r\n              }\r\n              catch (e) {\r\n                  throw new Error(\"ComponentGroup: the required component at location \" + ix + \" is not registered as a @Component. Remember to provide the class of the component, not the name\");\r\n              }\r\n              if (this_1._requiresNames.some(function ($) { return $ === name_1; })) {\r\n                  throw new Error(\"ComponentGroup: the required component list has a repeated name \" + name_1);\r\n              }\r\n              this_1._requiresNames.push(name_1);\r\n          };\r\n          var this_1 = this;\r\n          for (var ix = 0; ix < requires.length; ix++) {\r\n              _loop_1(ix);\r\n          }\r\n      }\r\n      ComponentGroup.prototype.hasEntity = function (entity) {\r\n          if (!entity.isAddedToEngine())\r\n              return false;\r\n          return this.entities.indexOf(entity) !== -1;\r\n      };\r\n      // @internal\r\n      ComponentGroup.prototype.addEntity = function (entity) {\r\n          if (!entity.isAddedToEngine()) {\r\n              throw new TypeError('ComponentGroup: Cannot add a entity that is not added to the engine');\r\n          }\r\n          if (this.entities.indexOf(entity) === -1) {\r\n              this.entities.push(entity);\r\n          }\r\n      };\r\n      // @internal\r\n      ComponentGroup.prototype.removeEntity = function (entity) {\r\n          var id = this.entities.indexOf(entity);\r\n          if (id !== -1) {\r\n              this.entities.splice(id, 1);\r\n          }\r\n      };\r\n      // @internal\r\n      ComponentGroup.prototype.componentRemoved = function (entity, component) {\r\n          if (this._requiresNames.indexOf(component) !== -1) {\r\n              this.removeEntity(entity);\r\n          }\r\n      };\r\n      // @internal\r\n      ComponentGroup.prototype.meetsRequirements = function (entity) {\r\n          for (var i = 0; i < this._requiresNames.length; i++) {\r\n              var componentName = this._requiresNames[i];\r\n              if (!(componentName in entity.components)) {\r\n                  return false;\r\n              }\r\n          }\r\n          return true;\r\n      };\r\n      return ComponentGroup;\r\n  }());\n\n  // tslint:disable:no-use-before-declare\r\n  /**\r\n   * @public\r\n   */\r\n  var Entity = /** @class */ (function () {\r\n      function Entity(name) {\r\n          this.name = name;\r\n          this.children = {};\r\n          this.eventManager = null;\r\n          this.alive = false;\r\n          this.uuid = newId('E');\r\n          this.components = {};\r\n          // @internal\r\n          this.engine = null;\r\n          // @internal\r\n          this._parent = null;\r\n          // stub\r\n      }\r\n      /**\r\n       * Adds or replaces a component in the entity.\r\n       * @param component - component instance.\r\n       */\r\n      Entity.prototype.addComponentOrReplace = function (component) {\r\n          if (typeof component === 'function') {\r\n              throw new Error('You passed a function or class as a component, an instance of component is expected');\r\n          }\r\n          if (typeof component !== 'object') {\r\n              throw new Error(\"You passed a \" + typeof component + \", an instance of component is expected\");\r\n          }\r\n          var componentName = getComponentName(component);\r\n          if (this.components[componentName]) {\r\n              if (this.components[componentName] === component) {\r\n                  return component;\r\n              }\r\n              this.removeComponent(this.components[componentName], false);\r\n          }\r\n          return this.addComponent(component);\r\n      };\r\n      Entity.prototype.hasComponent = function (component) {\r\n          var typeOfComponent = typeof component;\r\n          if (typeOfComponent !== 'string' && typeOfComponent !== 'object' && typeOfComponent !== 'function') {\r\n              throw new Error('Entity#has(component): component is not a class, name or instance');\r\n          }\r\n          if (component == null)\r\n              return false;\r\n          var componentName = typeOfComponent === 'string' ? component : getComponentName(component);\r\n          var storedComponent = this.components[componentName];\r\n          if (!storedComponent) {\r\n              return false;\r\n          }\r\n          if (typeOfComponent === 'object') {\r\n              return storedComponent === component;\r\n          }\r\n          if (typeOfComponent === 'function') {\r\n              return storedComponent instanceof component;\r\n          }\r\n          return true;\r\n      };\r\n      Entity.prototype.getComponent = function (component) {\r\n          var typeOfComponent = typeof component;\r\n          if (typeOfComponent !== 'string' && typeOfComponent !== 'function') {\r\n              throw new Error('Entity#get(component): component is not a class or name');\r\n          }\r\n          var componentName = typeOfComponent === 'string' ? component : getComponentName(component);\r\n          var storedComponent = this.components[componentName];\r\n          if (!storedComponent) {\r\n              throw new Error(\"Can not get component \\\"\" + componentName + \"\\\" from entity \\\"\" + this.identifier + \"\\\"\");\r\n          }\r\n          if (typeOfComponent === 'function') {\r\n              if (storedComponent instanceof component) {\r\n                  return storedComponent;\r\n              }\r\n              else {\r\n                  throw new Error(\"Can not get component \\\"\" + componentName + \"\\\" from entity \\\"\" + this.identifier + \"\\\" (by instance)\");\r\n              }\r\n          }\r\n          return storedComponent;\r\n      };\r\n      Entity.prototype.getComponentOrNull = function (component) {\r\n          var typeOfComponent = typeof component;\r\n          if (typeOfComponent !== 'string' && typeOfComponent !== 'function') {\r\n              throw new Error('Entity#getOrNull(component): component is not a class or name');\r\n          }\r\n          var componentName = typeOfComponent === 'string' ? component : getComponentName(component);\r\n          var storedComponent = this.components[componentName];\r\n          if (!storedComponent) {\r\n              return null;\r\n          }\r\n          if (typeOfComponent === 'function') {\r\n              if (storedComponent instanceof component) {\r\n                  return storedComponent;\r\n              }\r\n              else {\r\n                  return null;\r\n              }\r\n          }\r\n          return storedComponent;\r\n      };\r\n      /**\r\n       * Gets a component, if it doesn't exist, it creates the component and returns it.\r\n       * @param component - component class\r\n       */\r\n      Entity.prototype.getComponentOrCreate = function (component) {\r\n          if (typeof component !== 'function') {\r\n              throw new Error('Entity#getOrCreate(component): component is not a class');\r\n          }\r\n          var ret = this.getComponentOrNull(component);\r\n          if (!ret) {\r\n              ret = new component();\r\n              // Safe-guard to only add registered components to entities\r\n              getComponentName(ret);\r\n              this.addComponentOrReplace(ret);\r\n          }\r\n          return ret;\r\n      };\r\n      /**\r\n       * Adds a component. If the component already exist, it throws an Error.\r\n       * @param component - component instance.\r\n       */\r\n      Entity.prototype.addComponent = function (component) {\r\n          if (typeof component !== 'object') {\r\n              throw new Error('Entity#add(component): You passed a function or class as a component, an instance of component is expected');\r\n          }\r\n          var componentName = getComponentName(component);\r\n          var classId = getComponentClassId(component);\r\n          if (this.components[componentName]) {\r\n              throw new Error(\"A component of type \\\"\" + componentName + \"\\\" is already present in entity \\\"\" + this.identifier + \"\\\"\");\r\n          }\r\n          this.components[componentName] = component;\r\n          if (this.eventManager) {\r\n              this.eventManager.fireEvent(new ComponentAdded(this, componentName, classId));\r\n          }\r\n          var storedComponent = component;\r\n          if (typeof storedComponent.addedToEntity === 'function') {\r\n              storedComponent.addedToEntity(this);\r\n          }\r\n          return component;\r\n      };\r\n      Entity.prototype.removeComponent = function (component, triggerRemovedEvent) {\r\n          if (triggerRemovedEvent === void 0) { triggerRemovedEvent = true; }\r\n          var typeOfComponent = typeof component;\r\n          if (typeOfComponent !== 'string' && typeOfComponent !== 'function' && typeOfComponent !== 'object') {\r\n              throw new Error('Entity#remove(component): component is not a class, class or name');\r\n          }\r\n          var componentName = typeOfComponent === 'string' ? component : getComponentName(component);\r\n          var storedComponent = this.components[componentName];\r\n          if (!storedComponent) {\r\n              log(\"Entity Warning: Trying to remove inexisting component \\\"\" + componentName + \"\\\" from entity \\\"\" + this.identifier + \"\\\"\");\r\n              return;\r\n          }\r\n          if (typeOfComponent === 'function') {\r\n              if (storedComponent instanceof component) {\r\n                  delete this.components[componentName];\r\n                  if (storedComponent) {\r\n                      if (triggerRemovedEvent && this.eventManager) {\r\n                          this.eventManager.fireEvent(new ComponentRemoved(this, componentName, storedComponent));\r\n                      }\r\n                      if (typeof storedComponent.removedFromEntity === 'function') {\r\n                          storedComponent.removedFromEntity(this);\r\n                      }\r\n                  }\r\n                  return;\r\n              }\r\n              else {\r\n                  log(\"Entity Warning: Trying to remove wrong (by constructor) component \\\"\" + componentName + \"\\\" from entity \\\"\" + this.identifier + \"\\\"\");\r\n                  return;\r\n              }\r\n          }\r\n          delete this.components[componentName];\r\n          if (storedComponent) {\r\n              if (triggerRemovedEvent && this.eventManager) {\r\n                  this.eventManager.fireEvent(new ComponentRemoved(this, componentName, storedComponent));\r\n              }\r\n              if (typeof storedComponent.removedFromEntity === 'function') {\r\n                  storedComponent.removedFromEntity(this);\r\n              }\r\n          }\r\n          return;\r\n      };\r\n      /**\r\n       * Returns true if the entity is already added to the engine.\r\n       * Returns false if no engine was defined.\r\n       */\r\n      Entity.prototype.isAddedToEngine = function () {\r\n          if (this.engine && (this.uuid in this.engine.entities || this.engine.rootEntity === this)) {\r\n              return true;\r\n          }\r\n          return false;\r\n      };\r\n      /**\r\n       * Sets the parent entity\r\n       */\r\n      Entity.prototype.setParent = function (_parent) {\r\n          var newParent;\r\n          // Check if parent is of type Attachable\r\n          if (_parent && 'getEntityRepresentation' in _parent) {\r\n              if (!this.engine) {\r\n                  throw new Error(\"In order to set an attachable as parent, you first need to add the entity to the engine.\");\r\n              }\r\n              newParent = _parent.getEntityRepresentation(this.engine);\r\n          }\r\n          else {\r\n              // @ts-ignore\r\n              newParent = !_parent && this.engine ? this.engine.rootEntity : _parent;\r\n          }\r\n          var currentParent = this.getParent();\r\n          if (newParent === this) {\r\n              throw new Error(\"Failed to set parent for entity \\\"\" + this.identifier + \"\\\": An entity can't set itself as a its own parent\");\r\n          }\r\n          if (newParent === currentParent) {\r\n              return this;\r\n          }\r\n          var circularAncestor = this.getCircularAncestor(newParent);\r\n          if (circularAncestor) {\r\n              throw new Error(\"Failed to set parent for entity \\\"\" + this.identifier + \"\\\": Circular parent references are not allowed (See entity \\\"\" + circularAncestor + \"\\\")\");\r\n          }\r\n          if (currentParent) {\r\n              delete currentParent.children[this.uuid];\r\n          }\r\n          // Make sure that the parent and child are both on the engine, or off the engine, together\r\n          if (newParent !== null && newParent.uuid !== '0') {\r\n              if (!newParent.isAddedToEngine() && this.isAddedToEngine()) {\r\n                  // tslint:disable-next-line:semicolon\r\n                  this.engine.removeEntity(this);\r\n              }\r\n              if (newParent.isAddedToEngine() && !this.isAddedToEngine()) {\r\n                  // tslint:disable-next-line:semicolon\r\n                  newParent.engine.addEntity(this);\r\n              }\r\n          }\r\n          this._parent = newParent || null;\r\n          this.registerAsChild();\r\n          if (this.eventManager && this.engine) {\r\n              this.eventManager.fireEvent(new ParentChanged(this, newParent));\r\n          }\r\n          return this;\r\n      };\r\n      /**\r\n       * Gets the parent entity\r\n       */\r\n      Entity.prototype.getParent = function () {\r\n          return this._parent;\r\n      };\r\n      Object.defineProperty(Entity.prototype, \"identifier\", {\r\n          get: function () {\r\n              return this.name || this.uuid;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      Entity.prototype.getCircularAncestor = function (ent) {\r\n          var root = this.engine ? this.engine.rootEntity : null;\r\n          var e = ent;\r\n          while (e && e !== root) {\r\n              var parent_1 = e.getParent();\r\n              if (parent_1 === this) {\r\n                  return e.uuid;\r\n              }\r\n              e = parent_1;\r\n          }\r\n          return null;\r\n      };\r\n      Entity.prototype.registerAsChild = function () {\r\n          var parent = this.getParent();\r\n          if (this.uuid && parent) {\r\n              parent.children[this.uuid] = this;\r\n          }\r\n      };\r\n      return Entity;\r\n  }());\n\n  /**\r\n   * @public\r\n   */\r\n  var Engine = /** @class */ (function () {\r\n      function Engine(rootEntity) {\r\n          this.eventManager = new EventManager();\r\n          // @internal\r\n          this.systems = [];\r\n          // @internal\r\n          this.entityLists = {};\r\n          // @internal\r\n          this.addedSystems = [];\r\n          this._entities = {};\r\n          this._disposableComponents = {};\r\n          this._componentGroups = {};\r\n          // systems that doesn't require any component or handle their own logic\r\n          this.simpleSystems = [];\r\n          this.eventManager.addListener(ComponentAdded, this, this.componentAddedHandler);\r\n          this.eventManager.addListener(ComponentRemoved, this, this.componentRemovedHandler);\r\n          this.rootEntity = rootEntity;\r\n          this.firstPersonCameraEntity = new Entity();\r\n          this.firstPersonCameraEntity.uuid = 'FirstPersonCameraEntityReference';\r\n          this.addEntity(this.firstPersonCameraEntity);\r\n          this.avatarEntity = new Entity();\r\n          this.avatarEntity.uuid = 'AvatarEntityReference';\r\n          this.addEntity(this.avatarEntity);\r\n      }\r\n      Object.defineProperty(Engine.prototype, \"entities\", {\r\n          get: function () {\r\n              return this._entities;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(Engine.prototype, \"disposableComponents\", {\r\n          get: function () {\r\n              return this._disposableComponents;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      Engine.prototype.addEntity = function (entity) {\r\n          var parent = entity.getParent();\r\n          if (entity.isAddedToEngine()) {\r\n              return entity;\r\n          }\r\n          entity.eventManager = this.eventManager;\r\n          entity.engine = this;\r\n          this._entities[entity.uuid] = entity;\r\n          this.checkRequirementsAndAdd(entity);\r\n          if (!parent) {\r\n              entity.setParent(this.rootEntity);\r\n          }\r\n          else {\r\n              if (!parent.isAddedToEngine() && parent !== this.rootEntity) {\r\n                  log('Engine: warning, added an entity with a parent not present in the engine. Parent id: ' + parent.uuid);\r\n              }\r\n          }\r\n          entity.alive = true;\r\n          for (var i in entity.children) {\r\n              var child = entity.children[i];\r\n              if (child) {\r\n                  if (!child.isAddedToEngine()) {\r\n                      this.addEntity(child);\r\n                  }\r\n              }\r\n          }\r\n          return entity;\r\n      };\r\n      Engine.prototype.removeEntity = function (entity) {\r\n          var id = entity.uuid;\r\n          if (entity.isAddedToEngine()) {\r\n              for (var componentName in entity.components) {\r\n                  var componentGroups = this._componentGroups[componentName];\r\n                  if (componentGroups) {\r\n                      for (var groupIndex in componentGroups) {\r\n                          componentGroups[groupIndex].removeEntity(entity);\r\n                      }\r\n                  }\r\n                  delete this.entityLists[componentName][id];\r\n              }\r\n              for (var i = 0; i < this.simpleSystems.length; i++) {\r\n                  var system = this.simpleSystems[i];\r\n                  if (system.onRemoveEntity) {\r\n                      system.onRemoveEntity(entity);\r\n                  }\r\n              }\r\n              for (var i in entity.children) {\r\n                  var child = entity.children[i];\r\n                  if (child) {\r\n                      this.removeEntity(child);\r\n                  }\r\n              }\r\n              entity.alive = false;\r\n              entity.eventManager = null;\r\n              delete this._entities[id];\r\n              return true;\r\n          }\r\n          else {\r\n              log('Engine: Trying to remove non existent entity from engine.');\r\n              if (!entity.isAddedToEngine()) {\r\n                  log(\"Engine: Entity \\\"\" + entity.uuid + \"\\\" has not been added to any engine yet.\");\r\n              }\r\n              else {\r\n                  log('Engine: Entity id: ' + id);\r\n              }\r\n              log(\"Engine: Entity's components:\");\r\n              for (var componentName in entity.components) {\r\n                  log(componentName);\r\n              }\r\n              return false;\r\n          }\r\n      };\r\n      Engine.prototype.addSystem = function (system, priority) {\r\n          if (priority === void 0) { priority = 0; }\r\n          if (this.addedSystems.indexOf(system) !== -1) {\r\n              log('Engine: Trying to add a system that is already added. Aborting');\r\n              return system;\r\n          }\r\n          if (this.systems.length > 0) {\r\n              for (var i = 0; i < this.systems.length; i++) {\r\n                  var entry = this.systems[i];\r\n                  var isLast = i === this.systems.length - 1;\r\n                  if (entry.priority > priority) {\r\n                      this.addedSystems.push(system);\r\n                      this.systems.splice(i, 0, { system: system, priority: priority });\r\n                      break;\r\n                  }\r\n                  else if (isLast) {\r\n                      this.addedSystems.push(system);\r\n                      this.systems.splice(i + 1, 0, { system: system, priority: priority });\r\n                      break;\r\n                  }\r\n              }\r\n          }\r\n          else {\r\n              this.addedSystems.push(system);\r\n              this.systems.splice(1, 0, { system: system, priority: priority });\r\n          }\r\n          this.registerSystem(system);\r\n          return system;\r\n      };\r\n      Engine.prototype.removeSystem = function (system) {\r\n          var idx = this.addedSystems.indexOf(system);\r\n          if (idx !== -1) {\r\n              system.active = false;\r\n              if (system.deactivate) {\r\n                  system.deactivate();\r\n              }\r\n              this.addedSystems.splice(idx, 1);\r\n              for (var i = 0; i < this.systems.length; i++) {\r\n                  var sys = this.systems[i].system;\r\n                  if (sys === system) {\r\n                      this.systems.splice(i, 1);\r\n                  }\r\n              }\r\n              return true;\r\n          }\r\n          return false;\r\n      };\r\n      Engine.prototype.update = function (dt) {\r\n          for (var i in this.systems) {\r\n              var system = this.systems[i].system;\r\n              if (system.active && system.update) {\r\n                  try {\r\n                      system.update(dt);\r\n                  }\r\n                  catch (e) {\r\n                      error(e);\r\n                  }\r\n              }\r\n          }\r\n          return this;\r\n      };\r\n      Engine.prototype.getEntitiesWithComponent = function (component) {\r\n          var componentName = typeof component === 'string' ? component : getComponentName(component);\r\n          if (componentName in this.entityLists) {\r\n              return this.entityLists[componentName];\r\n          }\r\n          else {\r\n              return (this.entityLists[componentName] = {});\r\n          }\r\n      };\r\n      Engine.prototype.registerComponent = function (component) {\r\n          var id = getComponentId(component);\r\n          var name = getComponentName(component);\r\n          var classId = getComponentClassId(component);\r\n          this._disposableComponents[id] = component;\r\n          if (classId !== null) {\r\n              this.eventManager.fireEvent(new DisposableComponentCreated(id, name, classId));\r\n              this.eventManager.fireEvent(new DisposableComponentUpdated(id, component));\r\n          }\r\n      };\r\n      Engine.prototype.disposeComponent = function (component) {\r\n          var id = getComponentId(component);\r\n          if (delete this._disposableComponents[id]) {\r\n              this.eventManager.fireEvent(new DisposableComponentRemoved(id));\r\n              if (component.onDispose) {\r\n                  component.onDispose();\r\n              }\r\n              return true;\r\n          }\r\n          return false;\r\n      };\r\n      Engine.prototype.updateComponent = function (component) {\r\n          this.eventManager.fireEvent(new DisposableComponentUpdated(getComponentId(component), component));\r\n      };\r\n      Engine.prototype.getComponentGroup = function () {\r\n          var requires = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              requires[_i] = arguments[_i];\r\n          }\r\n          var componentGroup = undefined;\r\n          // Return an already created component-group if it already exists\r\n          if (requires.length > 0) {\r\n              // 1. get component groups for first require\r\n              var componentGroups = this._componentGroups[getComponentName(requires[0])];\r\n              if (componentGroups) {\r\n                  var components = requires.slice();\r\n                  // 2. search for a component group that has all the same requirements\r\n                  for (var i = 0; i < componentGroups.length; i++) {\r\n                      var traversedComponentGroup = componentGroups[i];\r\n                      if (components.length === traversedComponentGroup.requires.length) {\r\n                          for (var j = 0; j < components.length; j++) {\r\n                              if (traversedComponentGroup.requires.indexOf(components[j]) === -1)\r\n                                  break;\r\n                              if (j === (components.length - 1)) {\r\n                                  componentGroup = traversedComponentGroup;\r\n                              }\r\n                          }\r\n                          if (componentGroup)\r\n                              break;\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          if (componentGroup) {\r\n              // 3. Found an existent component group with the exact same requirements\r\n              return componentGroup;\r\n          }\r\n          // Otherwise create and store it\r\n          componentGroup = new (ComponentGroup.bind.apply(ComponentGroup, __spreadArray([void 0], __read(requires))))();\r\n          componentGroup.active = true;\r\n          var requiresNames = componentGroup.requiresNames;\r\n          for (var i = 0; i < requiresNames.length; i++) {\r\n              var componentName = requiresNames[i];\r\n              var componentGroups = this._componentGroups[componentName];\r\n              if (!componentGroups) {\r\n                  this._componentGroups[componentName] = componentGroups = [];\r\n              }\r\n              if (componentGroups.indexOf(componentGroup) === -1) {\r\n                  componentGroups.push(componentGroup);\r\n              }\r\n          }\r\n          for (var entityId in this._entities) {\r\n              this.checkRequirements(this._entities[entityId], componentGroup);\r\n          }\r\n          return componentGroup;\r\n      };\r\n      Engine.prototype.removeComponentGroup = function (componentGroup) {\r\n          if (componentGroup.active) {\r\n              componentGroup.active = false;\r\n              var requiresNames = componentGroup.requiresNames;\r\n              for (var i = 0; i < requiresNames.length; i++) {\r\n                  var componentName = requiresNames[i];\r\n                  var componentGroups = this._componentGroups[componentName];\r\n                  if (componentGroups) {\r\n                      var idx = componentGroups.indexOf(componentGroup);\r\n                      if (idx !== -1) {\r\n                          componentGroups.splice(idx, 1);\r\n                      }\r\n                  }\r\n              }\r\n              return true;\r\n          }\r\n          return false;\r\n      };\r\n      Engine.prototype.registerSystem = function (system) {\r\n          system.active = true;\r\n          if (system.activate) {\r\n              system.activate(this);\r\n          }\r\n          this.simpleSystems.push(system);\r\n      };\r\n      Engine.prototype.checkRequirementsAndAdd = function (entity) {\r\n          if (!entity.isAddedToEngine())\r\n              return;\r\n          for (var componentName in entity.components) {\r\n              if (!(componentName in this.entityLists)) {\r\n                  this.entityLists[componentName] = {};\r\n              }\r\n              this.entityLists[componentName][entity.uuid] = entity;\r\n              var componentGroups = this._componentGroups[componentName];\r\n              if (componentGroups) {\r\n                  for (var systemIndex in componentGroups) {\r\n                      this.checkRequirements(entity, componentGroups[systemIndex]);\r\n                  }\r\n              }\r\n          }\r\n          for (var i = 0; i < this.simpleSystems.length; i++) {\r\n              var system = this.simpleSystems[i];\r\n              if (system.onAddEntity) {\r\n                  system.onAddEntity(entity);\r\n              }\r\n          }\r\n      };\r\n      Engine.prototype.checkRequirements = function (entity, system) {\r\n          if (system.meetsRequirements(entity)) {\r\n              if (!system.hasEntity(entity)) {\r\n                  system.addEntity(entity);\r\n              }\r\n          }\r\n          else {\r\n              if (system.hasEntity(entity)) {\r\n                  system.removeEntity(entity);\r\n              }\r\n          }\r\n      };\r\n      Engine.prototype.componentAddedHandler = function (event) {\r\n          var _a;\r\n          var entity = event.entity, componentName = event.componentName;\r\n          if (!entity.isAddedToEngine())\r\n              return;\r\n          if (!this.entityLists[componentName]) {\r\n              this.entityLists[componentName] = (_a = {}, _a[entity.uuid] = entity, _a);\r\n          }\r\n          else {\r\n              this.entityLists[componentName][entity.uuid] = entity;\r\n          }\r\n          var componentGroups = this._componentGroups[componentName];\r\n          if (componentGroups) {\r\n              for (var i in componentGroups) {\r\n                  this.checkRequirements(entity, componentGroups[i]);\r\n              }\r\n          }\r\n      };\r\n      Engine.prototype.componentRemovedHandler = function (event) {\r\n          // In case a single component gets removed from an entity, we inform\r\n          // all systems that this entity lost this specific component.\r\n          var entity = event.entity, componentName = event.componentName;\r\n          if (!entity.isAddedToEngine())\r\n              return;\r\n          delete this.entityLists[componentName][entity.uuid];\r\n          var componentGroups = this._componentGroups[componentName];\r\n          if (componentGroups) {\r\n              for (var i in componentGroups) {\r\n                  this.checkRequirements(entity, componentGroups[i]);\r\n              }\r\n          }\r\n      };\r\n      return Engine;\r\n  }());\n\n  var _defer = Promise.resolve().then.bind(Promise.resolve());\r\n  /**\r\n   * Executes an asynchronous task\r\n   * @param task - the task to execute\r\n   * @public\r\n   */\r\n  function executeTask(task) {\r\n      var result = _defer(task);\r\n      result.isComplete = false;\r\n      result\r\n          .then(function ($) {\r\n          result.isComplete = true;\r\n          result.result = $;\r\n          result.didFail = false;\r\n      })\r\n          .catch(function ($) {\r\n          result.isComplete = true;\r\n          result.error = $;\r\n          result.didFail = true;\r\n          error('executeTask: FAILED ' + $.toString(), $);\r\n      });\r\n      return result;\r\n  }\n\n  /**\r\n   * A class serves as a medium between the observable and its observers\r\n   * @public\r\n   */\r\n  var ObserverEventState = /** @class */ (function () {\r\n      /**\r\n       * Create a new EventState\r\n       * @param mask - defines the mask associated with this state\r\n       * @param skipNextObservers - defines a flag which will instruct the observable to skip following observers when set to true\r\n       * @param target - defines the original target of the state\r\n       * @param currentTarget - defines the current target of the state\r\n       */\r\n      function ObserverEventState(mask, skipNextObservers, target, currentTarget) {\r\n          if (skipNextObservers === void 0) { skipNextObservers = false; }\r\n          this.initalize(mask, skipNextObservers, target, currentTarget);\r\n      }\r\n      /**\r\n       * Initialize the current event state\r\n       * @param mask - defines the mask associated with this state\r\n       * @param skipNextObservers - defines a flag which will instruct the observable to skip following observers when set to true\r\n       * @param target - defines the original target of the state\r\n       * @param currentTarget - defines the current target of the state\r\n       * @returns the current event state\r\n       */\r\n      ObserverEventState.prototype.initalize = function (mask, skipNextObservers, target, currentTarget) {\r\n          if (skipNextObservers === void 0) { skipNextObservers = false; }\r\n          this.mask = mask;\r\n          this.skipNextObservers = skipNextObservers;\r\n          this.target = target;\r\n          this.currentTarget = currentTarget;\r\n          return this;\r\n      };\r\n      return ObserverEventState;\r\n  }());\r\n  /**\r\n   * Represent an Observer registered to a given Observable object.\r\n   * @public\r\n   */\r\n  var Observer = /** @class */ (function () {\r\n      /**\r\n       * Creates a new observer\r\n       * @param callback - defines the callback to call when the observer is notified\r\n       * @param mask - defines the mask of the observer (used to filter notifications)\r\n       * @param scope - defines the current scope used to restore the JS context\r\n       */\r\n      function Observer(\r\n      /**\r\n       * Defines the callback to call when the observer is notified\r\n       */\r\n      callback, \r\n      /**\r\n       * Defines the mask of the observer (used to filter notifications)\r\n       */\r\n      mask, \r\n      /**\r\n       * Defines the current scope used to restore the JS context\r\n       */\r\n      scope) {\r\n          if (scope === void 0) { scope = null; }\r\n          this.callback = callback;\r\n          this.mask = mask;\r\n          this.scope = scope;\r\n          /**\r\n           * Gets or sets a property defining that the observer as to be unregistered after the next notification\r\n           */\r\n          this.unregisterOnNextCall = false;\r\n          /** For internal usage */\r\n          this._willBeUnregistered = false;\r\n      }\r\n      return Observer;\r\n  }());\r\n  /**\r\n   * Represent a list of observers registered to multiple Observables object.\r\n   * @public\r\n   */\r\n  var MultiObserver = /** @class */ (function () {\r\n      function MultiObserver() {\r\n          this._observers = null;\r\n          this._observables = null;\r\n      }\r\n      /**\r\n       * Raise a callback when one of the observable will notify\r\n       * @param observables - defines a list of observables to watch\r\n       * @param callback - defines the callback to call on notification\r\n       * @param mask - defines the mask used to filter notifications\r\n       * @param scope - defines the current scope used to restore the JS context\r\n       * @returns the new MultiObserver\r\n       */\r\n      MultiObserver.Watch = function (observables, callback, mask, scope) {\r\n          var e_1, _a;\r\n          if (mask === void 0) { mask = -1; }\r\n          if (scope === void 0) { scope = null; }\r\n          var result = new MultiObserver();\r\n          result._observers = new Array();\r\n          result._observables = observables;\r\n          try {\r\n              for (var observables_1 = __values(observables), observables_1_1 = observables_1.next(); !observables_1_1.done; observables_1_1 = observables_1.next()) {\r\n                  var observable = observables_1_1.value;\r\n                  var observer = observable.add(callback, mask, false, scope);\r\n                  if (observer) {\r\n                      result._observers.push(observer);\r\n                  }\r\n              }\r\n          }\r\n          catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n          finally {\r\n              try {\r\n                  if (observables_1_1 && !observables_1_1.done && (_a = observables_1.return)) _a.call(observables_1);\r\n              }\r\n              finally { if (e_1) throw e_1.error; }\r\n          }\r\n          return result;\r\n      };\r\n      /**\r\n       * Release associated resources\r\n       */\r\n      MultiObserver.prototype.dispose = function () {\r\n          if (this._observers && this._observables) {\r\n              for (var index = 0; index < this._observers.length; index++) {\r\n                  this._observables[index].remove(this._observers[index]);\r\n              }\r\n          }\r\n          this._observers = null;\r\n          this._observables = null;\r\n      };\r\n      return MultiObserver;\r\n  }());\r\n  /**\r\n   * The Observable class is a simple implementation of the Observable pattern.\r\n   *\r\n   * There's one slight particularity though: a given Observable can notify its observer using a particular mask value, only the Observers registered with this mask value will be notified.\r\n   * This enable a more fine grained execution without having to rely on multiple different Observable objects.\r\n   * For instance you may have a given Observable that have four different types of notifications: Move (mask = 0x01), Stop (mask = 0x02), Turn Right (mask = 0X04), Turn Left (mask = 0X08).\r\n   * A given observer can register itself with only Move and Stop (mask = 0x03), then it will only be notified when one of these two occurs and will never be for Turn Left/Right.\r\n   *\r\n   * @public\r\n   */\r\n  var Observable = /** @class */ (function () {\r\n      /**\r\n       * Creates a new observable\r\n       * @param onObserverAdded - defines a callback to call when a new observer is added\r\n       */\r\n      function Observable(onObserverAdded) {\r\n          this._observers = new Array();\r\n          this._onObserverAdded = null;\r\n          this._eventState = new ObserverEventState(0);\r\n          if (onObserverAdded) {\r\n              this._onObserverAdded = onObserverAdded;\r\n          }\r\n      }\r\n      /**\r\n       * Create a new Observer with the specified callback\r\n       * @param callback - the callback that will be executed for that Observer\r\n       * @param mask - the mask used to filter observers\r\n       * @param insertFirst - if true the callback will be inserted at the first position, hence executed before the others ones. If false (default behavior) the callback will be inserted at the last position, executed after all the others already present.\r\n       * @param scope - optional scope for the callback to be called from\r\n       * @param unregisterOnFirstCall - defines if the observer as to be unregistered after the next notification\r\n       * @returns the new observer created for the callback\r\n       */\r\n      Observable.prototype.add = function (callback, mask, insertFirst, scope, unregisterOnFirstCall) {\r\n          if (mask === void 0) { mask = -1; }\r\n          if (insertFirst === void 0) { insertFirst = false; }\r\n          if (scope === void 0) { scope = null; }\r\n          if (unregisterOnFirstCall === void 0) { unregisterOnFirstCall = false; }\r\n          if (!callback) {\r\n              return null;\r\n          }\r\n          var observer = new Observer(callback, mask, scope);\r\n          observer.unregisterOnNextCall = unregisterOnFirstCall;\r\n          if (insertFirst) {\r\n              this._observers.unshift(observer);\r\n          }\r\n          else {\r\n              this._observers.push(observer);\r\n          }\r\n          if (this._onObserverAdded) {\r\n              this._onObserverAdded(observer);\r\n          }\r\n          return observer;\r\n      };\r\n      /**\r\n       * Create a new Observer with the specified callback and unregisters after the next notification\r\n       * @param callback - the callback that will be executed for that Observer\r\n       * @returns the new observer created for the callback\r\n       */\r\n      Observable.prototype.addOnce = function (callback) {\r\n          return this.add(callback, undefined, undefined, undefined, true);\r\n      };\r\n      /**\r\n       * Remove an Observer from the Observable object\r\n       * @param observer - the instance of the Observer to remove\r\n       * @returns false if it doesn't belong to this Observable\r\n       */\r\n      Observable.prototype.remove = function (observer) {\r\n          if (!observer) {\r\n              return false;\r\n          }\r\n          var index = this._observers.indexOf(observer);\r\n          if (index !== -1) {\r\n              this._deferUnregister(observer);\r\n              return true;\r\n          }\r\n          return false;\r\n      };\r\n      /**\r\n       * Remove a callback from the Observable object\r\n       * @param callback - the callback to remove\r\n       * @param scope - optional scope. If used only the callbacks with this scope will be removed\r\n       * @returns false if it doesn't belong to this Observable\r\n       */\r\n      Observable.prototype.removeCallback = function (callback, scope) {\r\n          for (var index = 0; index < this._observers.length; index++) {\r\n              if (this._observers[index].callback === callback && (!scope || scope === this._observers[index].scope)) {\r\n                  this._deferUnregister(this._observers[index]);\r\n                  return true;\r\n              }\r\n          }\r\n          return false;\r\n      };\r\n      /**\r\n       * Notify all Observers by calling their respective callback with the given data\r\n       * Will return true if all observers were executed, false if an observer set skipNextObservers to true, then prevent the subsequent ones to execute\r\n       * @param eventData - defines the data to send to all observers\r\n       * @param mask - defines the mask of the current notification (observers with incompatible mask (ie mask & observer.mask === 0) will not be notified)\r\n       * @param target - defines the original target of the state\r\n       * @param currentTarget - defines the current target of the state\r\n       * @returns false if the complete observer chain was not processed (because one observer set the skipNextObservers to true)\r\n       */\r\n      Observable.prototype.notifyObservers = function (eventData, mask, target, currentTarget) {\r\n          var e_2, _a;\r\n          if (mask === void 0) { mask = -1; }\r\n          if (!this._observers.length) {\r\n              return true;\r\n          }\r\n          var state = this._eventState;\r\n          state.mask = mask;\r\n          state.target = target;\r\n          state.currentTarget = currentTarget;\r\n          state.skipNextObservers = false;\r\n          state.lastReturnValue = eventData;\r\n          try {\r\n              for (var _b = __values(this._observers), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                  var obs = _c.value;\r\n                  if (obs._willBeUnregistered) {\r\n                      continue;\r\n                  }\r\n                  if (obs.mask & mask) {\r\n                      if (obs.scope) {\r\n                          state.lastReturnValue = obs.callback.apply(obs.scope, [eventData, state]);\r\n                      }\r\n                      else {\r\n                          state.lastReturnValue = obs.callback(eventData, state);\r\n                      }\r\n                      if (obs.unregisterOnNextCall) {\r\n                          this._deferUnregister(obs);\r\n                      }\r\n                  }\r\n                  if (state.skipNextObservers) {\r\n                      return false;\r\n                  }\r\n              }\r\n          }\r\n          catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n          finally {\r\n              try {\r\n                  if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n              }\r\n              finally { if (e_2) throw e_2.error; }\r\n          }\r\n          return true;\r\n      };\r\n      /**\r\n       * Calling this will execute each callback, expecting it to be a promise or return a value.\r\n       * If at any point in the chain one function fails, the promise will fail and the execution will not continue.\r\n       * This is useful when a chain of events (sometimes async events) is needed to initialize a certain object\r\n       * and it is crucial that all callbacks will be executed.\r\n       * The order of the callbacks is kept, callbacks are not executed parallel.\r\n       *\r\n       * @param eventData - The data to be sent to each callback\r\n       * @param mask - is used to filter observers defaults to -1\r\n       * @param target - defines the callback target (see EventState)\r\n       * @param currentTarget - defines he current object in the bubbling phase\r\n       * @returns will return a Promise than resolves when all callbacks executed successfully.\r\n       */\r\n      Observable.prototype.notifyObserversWithPromise = function (eventData, mask, target, currentTarget) {\r\n          var _this = this;\r\n          if (mask === void 0) { mask = -1; }\r\n          // create an empty promise\r\n          var p = Promise.resolve(eventData);\r\n          // no observers? return this promise.\r\n          if (!this._observers.length) {\r\n              return p;\r\n          }\r\n          var state = this._eventState;\r\n          state.mask = mask;\r\n          state.target = target;\r\n          state.currentTarget = currentTarget;\r\n          state.skipNextObservers = false;\r\n          // execute one callback after another (not using Promise.all, the order is important)\r\n          this._observers.forEach(function (obs) {\r\n              if (state.skipNextObservers) {\r\n                  return;\r\n              }\r\n              if (obs._willBeUnregistered) {\r\n                  return;\r\n              }\r\n              if (obs.mask & mask) {\r\n                  if (obs.scope) {\r\n                      p = p.then(function (lastReturnedValue) {\r\n                          state.lastReturnValue = lastReturnedValue;\r\n                          return obs.callback.apply(obs.scope, [eventData, state]);\r\n                      });\r\n                  }\r\n                  else {\r\n                      p = p.then(function (lastReturnedValue) {\r\n                          state.lastReturnValue = lastReturnedValue;\r\n                          return obs.callback(eventData, state);\r\n                      });\r\n                  }\r\n                  if (obs.unregisterOnNextCall) {\r\n                      _this._deferUnregister(obs);\r\n                  }\r\n              }\r\n          });\r\n          // return the eventData\r\n          return p.then(function () {\r\n              return eventData;\r\n          });\r\n      };\r\n      /**\r\n       * Notify a specific observer\r\n       * @param observer - defines the observer to notify\r\n       * @param eventData - defines the data to be sent to each callback\r\n       * @param mask - is used to filter observers defaults to -1\r\n       */\r\n      Observable.prototype.notifyObserver = function (observer, eventData, mask) {\r\n          if (mask === void 0) { mask = -1; }\r\n          var state = this._eventState;\r\n          state.mask = mask;\r\n          state.skipNextObservers = false;\r\n          observer.callback(eventData, state);\r\n      };\r\n      /**\r\n       * Gets a boolean indicating if the observable has at least one observer\r\n       * @returns true is the Observable has at least one Observer registered\r\n       */\r\n      Observable.prototype.hasObservers = function () {\r\n          return this._observers.length > 0;\r\n      };\r\n      /**\r\n       * Clear the list of observers\r\n       */\r\n      Observable.prototype.clear = function () {\r\n          this._observers = new Array();\r\n          this._onObserverAdded = null;\r\n      };\r\n      /**\r\n       * Clone the current observable\r\n       * @returns a new observable\r\n       */\r\n      Observable.prototype.clone = function () {\r\n          var result = new Observable();\r\n          result._observers = this._observers.slice(0);\r\n          return result;\r\n      };\r\n      /**\r\n       * Does this observable handles observer registered with a given mask\r\n       * @param mask - defines the mask to be tested\r\n       * @returns whether or not one observer registered with the given mask is handeled\r\n       */\r\n      Observable.prototype.hasSpecificMask = function (mask) {\r\n          var e_3, _a;\r\n          if (mask === void 0) { mask = -1; }\r\n          try {\r\n              for (var _b = __values(this._observers), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                  var obs = _c.value;\r\n                  if (obs.mask & mask || obs.mask === mask) {\r\n                      return true;\r\n                  }\r\n              }\r\n          }\r\n          catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n          finally {\r\n              try {\r\n                  if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n              }\r\n              finally { if (e_3) throw e_3.error; }\r\n          }\r\n          return false;\r\n      };\r\n      Observable.prototype._deferUnregister = function (observer) {\r\n          var _this = this;\r\n          observer.unregisterOnNextCall = false;\r\n          observer._willBeUnregistered = true;\r\n          executeTask(function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n              return [2 /*return*/, this._remove(observer)];\r\n          }); }); });\r\n      };\r\n      // This should only be called when not iterating over _observers to avoid callback skipping.\r\n      // Removes an observer from the _observer Array.\r\n      Observable.prototype._remove = function (observer) {\r\n          if (!observer) {\r\n              return false;\r\n          }\r\n          var index = this._observers.indexOf(observer);\r\n          if (index !== -1) {\r\n              this._observers.splice(index, 1);\r\n              return true;\r\n          }\r\n          return false;\r\n      };\r\n      return Observable;\r\n  }());\n\n  var modulePromise;\r\n  /**\r\n   * teleport player to a destination\r\n   * @param destination - \"coordX,coordY\", \"magic\", \"crowd\"\r\n   * @public\r\n   */\r\n  function teleportTo(destination) {\r\n      // error(`teleportTo(destination) was deprecated. Please use:\r\n      // import {requestTeleport} from '@decentraland/UserActionModule'\r\n      // executeTask(async () => {\r\n      //   await requestTeleport(destination)\r\n      // })`)\r\n      callModuleRpc('requestTeleport', [destination]);\r\n  }\r\n  function ensureModule() {\r\n      if (typeof modulePromise === 'undefined' && typeof dcl !== 'undefined') {\r\n          modulePromise = dcl.loadModule('@decentraland/UserActionModule', {});\r\n      }\r\n      return typeof modulePromise !== 'undefined' && typeof dcl !== 'undefined';\r\n  }\r\n  function callModuleRpc(methodName, args) {\r\n      if (ensureModule()) {\r\n          modulePromise.then(function ($) {\r\n              dcl.callRpc($.rpcHandle, methodName, args);\r\n          });\r\n      }\r\n  }\n\n  /** @public */\r\n  exports.InputEventType = void 0;\r\n  (function (InputEventType) {\r\n      InputEventType[InputEventType[\"DOWN\"] = 0] = \"DOWN\";\r\n      InputEventType[InputEventType[\"UP\"] = 1] = \"UP\";\r\n  })(exports.InputEventType || (exports.InputEventType = {}));\r\n  /** @public */\r\n  exports.CameraMode = void 0;\r\n  (function (CameraMode) {\r\n      CameraMode[CameraMode[\"FirstPerson\"] = 0] = \"FirstPerson\";\r\n      CameraMode[CameraMode[\"ThirdPerson\"] = 1] = \"ThirdPerson\";\r\n      CameraMode[CameraMode[\"BuildingToolGodMode\"] = 2] = \"BuildingToolGodMode\";\r\n  })(exports.CameraMode || (exports.CameraMode = {}));\r\n  // @internal\r\n  var AVATAR_OBSERVABLE = 'AVATAR_OBSERVABLE';\r\n  /** @public */\r\n  exports.LandRole = void 0;\r\n  (function (LandRole) {\r\n      LandRole[\"OWNER\"] = \"owner\";\r\n      LandRole[\"OPERATOR\"] = \"operator\";\r\n  })(exports.LandRole || (exports.LandRole = {}));\n\n  /**\r\n   * @public\r\n   */\r\n  var UUIDEvent = /** @class */ (function () {\r\n      function UUIDEvent(uuid, payload) {\r\n          this.uuid = uuid;\r\n          this.payload = payload;\r\n      }\r\n      UUIDEvent = __decorate([\r\n          EventConstructor()\r\n      ], UUIDEvent);\r\n      return UUIDEvent;\r\n  }());\r\n  /**\r\n   * @public\r\n   */\r\n  var RaycastResponse = /** @class */ (function () {\r\n      function RaycastResponse(payload) {\r\n          this.payload = payload;\r\n      }\r\n      RaycastResponse = __decorate([\r\n          EventConstructor()\r\n      ], RaycastResponse);\r\n      return RaycastResponse;\r\n  }());\r\n  /**\r\n   * @public\r\n   */\r\n  var PointerEvent = /** @class */ (function () {\r\n      function PointerEvent(payload) {\r\n          this.payload = payload;\r\n      }\r\n      PointerEvent = __decorate([\r\n          EventConstructor()\r\n      ], PointerEvent);\r\n      return PointerEvent;\r\n  }());\r\n  var internalDcl;\r\n  /**\r\n   * @internal\r\n   * This function generates a callback that is passed to the Observable\r\n   * constructor to subscribe to the events of the DecentralandInterface\r\n   */\r\n  function createSubscriber(eventName) {\r\n      return function () {\r\n          if (internalDcl) {\r\n              internalDcl.subscribe(eventName);\r\n          }\r\n      };\r\n  }\r\n  /**\r\n   * This event is triggered when you change your camera between 1st and 3rd person\r\n   * @public\r\n   */\r\n  var onCameraModeChangedObservable = new Observable(createSubscriber('cameraModeChanged'));\r\n  /**\r\n   * This event is triggered when you change your camera between 1st and 3rd person\r\n   * @public\r\n   */\r\n  var onIdleStateChangedObservable = new Observable(createSubscriber('idleStateChanged'));\r\n  /**\r\n   * These events are triggered after your character enters the scene.\r\n   * @public\r\n   */\r\n  var onEnterSceneObservable = new Observable(createSubscriber('onEnterScene'));\r\n  /** @public @deprecated Use onEnterSceneObservable instead. */\r\n  var onEnterScene = onEnterSceneObservable;\r\n  /**\r\n   * These events are triggered after your character leaves the scene.\r\n   * @public\r\n   */\r\n  var onLeaveSceneObservable = new Observable(createSubscriber('onLeaveScene'));\r\n  /** @public @deprecated Use onLeaveSceneObservable instead. */\r\n  var onLeaveScene = onLeaveSceneObservable;\r\n  /**\r\n   * This event is triggered after all the resources of the scene were loaded (models, textures, etc...)\r\n   * @public\r\n   */\r\n  var onSceneReadyObservable = new Observable(createSubscriber('sceneStart'));\r\n  /**\r\n   * @public\r\n   */\r\n  var onPlayerExpressionObservable = new Observable(createSubscriber('playerExpression'));\r\n  /**\r\n   * @internal\r\n   * This function adds _one_ listener to the onEvent event of dcl interface.\r\n   * Leveraging a switch to route events to the Observable handlers.\r\n   */\r\n  function _initEventObservables(dcl) {\r\n      // store internal reference to dcl, it is going to be used to subscribe to the events\r\n      internalDcl = dcl;\r\n      if (internalDcl) {\r\n          internalDcl.onEvent(function (event) {\r\n              switch (event.type) {\r\n                  case 'onEnterScene': {\r\n                      onEnterSceneObservable.notifyObservers(event.data);\r\n                      return;\r\n                  }\r\n                  case 'onLeaveScene': {\r\n                      onLeaveSceneObservable.notifyObservers(event.data);\r\n                      return;\r\n                  }\r\n                  case 'cameraModeChanged': {\r\n                      onCameraModeChangedObservable.notifyObservers(event.data);\r\n                      return;\r\n                  }\r\n                  case 'idleStateChanged': {\r\n                      onIdleStateChangedObservable.notifyObservers(event.data);\r\n                      return;\r\n                  }\r\n                  case 'sceneStart': {\r\n                      onSceneReadyObservable.notifyObservers(event.data);\r\n                      return;\r\n                  }\r\n                  case 'playerExpression': {\r\n                      onPlayerExpressionObservable.notifyObservers(event.data);\r\n                      return;\r\n                  }\r\n              }\r\n          });\r\n      }\r\n  }\n\n  // This number is defined in the protocol ECS.SetEntityParent.3\r\n  var ROOT_ENTITY_ID = '0';\r\n  var DecentralandSynchronizationSystem = /** @class */ (function () {\r\n      function DecentralandSynchronizationSystem(dcl) {\r\n          this.dcl = dcl;\r\n          this.cachedComponents = {};\r\n      }\r\n      DecentralandSynchronizationSystem.prototype.activate = function (engine) {\r\n          var _this = this;\r\n          this.engine = engine;\r\n          engine.eventManager.addListener(ComponentAdded, this, this.componentAdded);\r\n          engine.eventManager.addListener(ComponentRemoved, this, this.componentRemoved);\r\n          engine.eventManager.addListener(DisposableComponentCreated, this, this.disposableComponentCreated);\r\n          engine.eventManager.addListener(DisposableComponentRemoved, this, this.disposableComponentRemoved);\r\n          engine.eventManager.addListener(DisposableComponentUpdated, this, this.disposableComponentUpdated);\r\n          engine.eventManager.addListener(ParentChanged, this, this.parentChanged);\r\n          var rootId = engine.rootEntity.uuid;\r\n          this.dcl.addEntity(rootId);\r\n          // TODO(agus): send disposableComponents if exist\r\n          this.dcl.onUpdate(function (dt) {\r\n              engine.update(dt);\r\n              _this.presentEntities();\r\n          });\r\n          this.dcl.onEvent(function (event) {\r\n              var data = event.data;\r\n              switch (event.type) {\r\n                  case 'uuidEvent':\r\n                      engine.eventManager.fireEvent(new UUIDEvent(data.uuid, data.payload));\r\n                      break;\r\n                  case 'raycastResponse':\r\n                      if (data.queryType === 'HitFirst') {\r\n                          engine.eventManager.fireEvent(new RaycastResponse(data));\r\n                      }\r\n                      else if (data.queryType === 'HitAll') {\r\n                          engine.eventManager.fireEvent(new RaycastResponse(data));\r\n                      }\r\n                      break;\r\n                  case 'pointerEvent':\r\n                      engine.eventManager.fireEvent(new PointerEvent(data.payload));\r\n                      break;\r\n              }\r\n          });\r\n      };\r\n      /**\r\n       * system.onAddEntity is called by the engine when a entity is added to the\r\n       * engine.\r\n       */\r\n      DecentralandSynchronizationSystem.prototype.onAddEntity = function (entity) {\r\n          if (entity && entity.isAddedToEngine()) {\r\n              var entityId = entity.uuid;\r\n              var parent_1 = entity.getParent();\r\n              this.dcl.addEntity(entityId);\r\n              if (parent_1) {\r\n                  // If the entity has a parent, we send the the enparenting signal\r\n                  // otherwise the engine will know the entity is set as a child of\r\n                  // engine.rootEntity by default\r\n                  this.dcl.setParent(entityId, parent_1.uuid);\r\n              }\r\n              // This creates a cache dictionary to avoid send redundant information to\r\n              // the engine in order to avoid unnecessary work in the main thread.\r\n              this.cachedComponents[entityId] = {};\r\n              // this iterator sends the current components of te engine at the moment\r\n              // of addition\r\n              for (var componentName in entity.components) {\r\n                  var component = entity.components[componentName];\r\n                  var classId = getComponentClassId(component);\r\n                  if (classId !== null) {\r\n                      if (isDisposableComponent(component)) {\r\n                          // Send the attach component signal\r\n                          this.dcl.attachEntityComponent(entity.uuid, componentName, getComponentId(component));\r\n                      }\r\n                      else {\r\n                          var componentJson = JSON.stringify(component);\r\n                          // Send the updated component\r\n                          this.dcl.updateEntityComponent(entityId, componentName, classId, componentJson);\r\n                          // Update the cached copy of the sent component\r\n                          this.cachedComponents[entityId][componentName] = componentJson;\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      /**\r\n       * system.onRemoveEntity is called by the engine when a entity gets removed\r\n       * from the engine.\r\n       */\r\n      DecentralandSynchronizationSystem.prototype.onRemoveEntity = function (entity) {\r\n          if (entity.isAddedToEngine()) {\r\n              var entityId = entity.uuid;\r\n              // Send the removeEntity signal\r\n              this.dcl.removeEntity(entityId);\r\n              // Remove the caches from local memory\r\n              delete this.cachedComponents[entityId];\r\n          }\r\n      };\r\n      /**\r\n       * This method is called at the end of every update cycle.\r\n       * It finds and sends updates in components of the engine entities.\r\n       */\r\n      DecentralandSynchronizationSystem.prototype.presentEntities = function () {\r\n          for (var i in this.engine.entities) {\r\n              var entity = this.engine.entities[i];\r\n              for (var componentName in entity.components) {\r\n                  var component = entity.components[componentName];\r\n                  var classId = getComponentClassId(component);\r\n                  if (classId !== null && !isDisposableComponent(component)) {\r\n                      var jsonRepresentation = this.getJsonIfDirty(entity.uuid, componentName, component);\r\n                      if (jsonRepresentation) {\r\n                          // Send the updated component\r\n                          this.dcl.updateEntityComponent(entity.uuid, componentName, classId, jsonRepresentation);\r\n                          this.clearDirty(entity.uuid, componentName, component, jsonRepresentation);\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          for (var id in this.engine.disposableComponents) {\r\n              var component = this.engine.disposableComponents[id];\r\n              if (component instanceof ObservableComponent && component.dirty) {\r\n                  this.dcl.componentUpdated(id, JSON.stringify(component));\r\n                  component.dirty = false;\r\n              }\r\n          }\r\n      };\r\n      /**\r\n       * This method is called after a component is added to an entity. The event\r\n       * (param 1) contains the necessary information to notify the engine about the\r\n       * component that was added and the entity.\r\n       */\r\n      DecentralandSynchronizationSystem.prototype.componentAdded = function (event) {\r\n          if (event.entity.isAddedToEngine()) {\r\n              var component = event.entity.components[event.componentName];\r\n              if (isDisposableComponent(component)) {\r\n                  this.dcl.attachEntityComponent(event.entity.uuid, event.componentName, getComponentId(component));\r\n              }\r\n              else if (event.classId !== null) {\r\n                  var componentJson = JSON.stringify(component);\r\n                  // Send the updated component\r\n                  this.dcl.updateEntityComponent(event.entity.uuid, event.componentName, event.classId, componentJson);\r\n                  // Update the cached copy of the sent component\r\n                  this.cachedComponents[event.entity.uuid][event.componentName] = componentJson;\r\n              }\r\n          }\r\n      };\r\n      /**\r\n       * This method is called when a component is removed from an entity.\r\n       */\r\n      DecentralandSynchronizationSystem.prototype.componentRemoved = function (event) {\r\n          if (event.entity.isAddedToEngine()) {\r\n              this.dcl.removeEntityComponent(event.entity.uuid, event.componentName);\r\n              // Remove the cached component so we can send it again when re-adding\r\n              delete this.cachedComponents[event.entity.uuid][event.componentName];\r\n          }\r\n      };\r\n      /**\r\n       * This method is called after a disposableComponent is created.\r\n       * It instantiates the component in the engine, the event that updates the\r\n       * created component is fired immediatly after.\r\n       */\r\n      DecentralandSynchronizationSystem.prototype.disposableComponentCreated = function (event) {\r\n          this.dcl.componentCreated(event.componentId, event.componentName, event.classId);\r\n      };\r\n      /**\r\n       * This method is called after a disposableComponent is updated, once per\r\n       * update cycle and once after creation.\r\n       */\r\n      DecentralandSynchronizationSystem.prototype.disposableComponentRemoved = function (event) {\r\n          this.dcl.componentDisposed(event.componentId);\r\n      };\r\n      /**\r\n       * This method is called right after a diposableComponent gets disposed. That\r\n       * process is manual.\r\n       *\r\n       * TODO(menduz,dani): What happens if a disposableComponent gets disposed and\r\n       * it remains attached to some entities?\r\n       */\r\n      DecentralandSynchronizationSystem.prototype.disposableComponentUpdated = function (event) {\r\n          this.dcl.componentUpdated(event.componentId, JSON.stringify(event.component));\r\n      };\r\n      /**\r\n       * This method is called when a parent changes in an entity.\r\n       */\r\n      DecentralandSynchronizationSystem.prototype.parentChanged = function (event) {\r\n          this.dcl.setParent(event.entity.uuid, event.parent ? event.parent.uuid : ROOT_ENTITY_ID);\r\n      };\r\n      DecentralandSynchronizationSystem.prototype.getJsonIfDirty = function (entityId, componentName, component) {\r\n          var jsonRepresentation = JSON.stringify(component);\r\n          return jsonRepresentation !== this.cachedComponents[entityId][componentName] && jsonRepresentation;\r\n      };\r\n      DecentralandSynchronizationSystem.prototype.clearDirty = function (entityId, componentName, component, jsonRepresentation) {\r\n          this.cachedComponents[entityId][componentName] = jsonRepresentation;\r\n      };\r\n      return DecentralandSynchronizationSystem;\r\n  }());\n\n  /**\r\n   * Defines potential orientation for back face culling\r\n   * @public\r\n   */\r\n  exports.Orientation = void 0;\r\n  (function (Orientation) {\r\n      /**\r\n       * Clockwise\r\n       */\r\n      Orientation[Orientation[\"CW\"] = 0] = \"CW\";\r\n      /** Counter clockwise */\r\n      Orientation[Orientation[\"CCW\"] = 1] = \"CCW\";\r\n  })(exports.Orientation || (exports.Orientation = {}));\r\n  /**\r\n   * Defines supported spaces\r\n   * @public\r\n   */\r\n  exports.Space = void 0;\r\n  (function (Space) {\r\n      /** Local (object) space */\r\n      Space[Space[\"LOCAL\"] = 0] = \"LOCAL\";\r\n      /** World space */\r\n      Space[Space[\"WORLD\"] = 1] = \"WORLD\";\r\n      /** Bone space */\r\n      Space[Space[\"BONE\"] = 2] = \"BONE\";\r\n  })(exports.Space || (exports.Space = {}));\r\n  /**\r\n   * Constant used to convert a value to gamma space\r\n   * @public\r\n   */\r\n  var ToGammaSpace = 1 / 2.2;\r\n  /**\r\n   * Constant used to convert a value to linear space\r\n   * @public\r\n   */\r\n  var ToLinearSpace = 2.2;\r\n  /**\r\n   * Constant used to define the minimal number value in Babylon.js\r\n   * @public\r\n   */\r\n  var Epsilon = 0.000001;\r\n  /**\r\n   * Constant used to convert from Euler degrees to radians\r\n   * @public\r\n   */\r\n  var DEG2RAD = Math.PI / 180;\r\n  /**\r\n   * Constant used to convert from radians to Euler degrees\r\n   * @public\r\n   */\r\n  var RAD2DEG = 360 / (Math.PI * 2);\n\n  /**\r\n   * Scalar computation library\r\n   * @public\r\n   */\r\n  var Scalar = /** @class */ (function () {\r\n      function Scalar() {\r\n      }\r\n      /**\r\n       * Boolean : true if the absolute difference between a and b is lower than epsilon (default = 1.401298E-45)\r\n       * @param a - number\r\n       * @param b - number\r\n       * @param epsilon - (default = 1.401298E-45)\r\n       * @returns true if the absolute difference between a and b is lower than epsilon (default = 1.401298E-45)\r\n       */\r\n      Scalar.WithinEpsilon = function (a, b, epsilon) {\r\n          if (epsilon === void 0) { epsilon = 1.401298e-45; }\r\n          var num = a - b;\r\n          return -epsilon <= num && num <= epsilon;\r\n      };\r\n      /**\r\n       * Returns a string : the upper case translation of the number i to hexadecimal.\r\n       * @param i - number\r\n       * @returns the upper case translation of the number i to hexadecimal.\r\n       */\r\n      Scalar.ToHex = function (i) {\r\n          var str = i.toString(16);\r\n          if (i <= 15) {\r\n              return ('0' + str).toUpperCase();\r\n          }\r\n          return str.toUpperCase();\r\n      };\r\n      /**\r\n       * Returns -1 if value is negative and +1 is value is positive.\r\n       * @param _value - the value\r\n       * @returns the value itself if it's equal to zero.\r\n       */\r\n      Scalar.Sign = function (value) {\r\n          var _value = +value; // convert to a number\r\n          if (_value === 0 || isNaN(_value)) {\r\n              return _value;\r\n          }\r\n          return _value > 0 ? 1 : -1;\r\n      };\r\n      /**\r\n       * Returns the value itself if it's between min and max.\r\n       * Returns min if the value is lower than min.\r\n       * Returns max if the value is greater than max.\r\n       * @param value - the value to clmap\r\n       * @param min - the min value to clamp to (default: 0)\r\n       * @param max - the max value to clamp to (default: 1)\r\n       * @returns the clamped value\r\n       */\r\n      Scalar.Clamp = function (value, min, max) {\r\n          if (min === void 0) { min = 0; }\r\n          if (max === void 0) { max = 1; }\r\n          return Math.min(max, Math.max(min, value));\r\n      };\r\n      /**\r\n       * the log2 of value.\r\n       * @param value - the value to compute log2 of\r\n       * @returns the log2 of value.\r\n       */\r\n      Scalar.Log2 = function (value) {\r\n          return Math.log(value) * Math.LOG2E;\r\n      };\r\n      /**\r\n       * Loops the value, so that it is never larger than length and never smaller than 0.\r\n       *\r\n       * This is similar to the modulo operator but it works with floating point numbers.\r\n       * For example, using 3.0 for t and 2.5 for length, the result would be 0.5.\r\n       * With t = 5 and length = 2.5, the result would be 0.0.\r\n       * Note, however, that the behaviour is not defined for negative numbers as it is for the modulo operator\r\n       * @param value - the value\r\n       * @param length - the length\r\n       * @returns the looped value\r\n       */\r\n      Scalar.Repeat = function (value, length) {\r\n          return value - Math.floor(value / length) * length;\r\n      };\r\n      /**\r\n       * Normalize the value between 0.0 and 1.0 using min and max values\r\n       * @param value - value to normalize\r\n       * @param min - max to normalize between\r\n       * @param max - min to normalize between\r\n       * @returns the normalized value\r\n       */\r\n      Scalar.Normalize = function (value, min, max) {\r\n          return (value - min) / (max - min);\r\n      };\r\n      /**\r\n       * Denormalize the value from 0.0 and 1.0 using min and max values\r\n       * @param normalized - value to denormalize\r\n       * @param min - max to denormalize between\r\n       * @param max - min to denormalize between\r\n       * @returns the denormalized value\r\n       */\r\n      Scalar.Denormalize = function (normalized, min, max) {\r\n          return normalized * (max - min) + min;\r\n      };\r\n      /**\r\n       * Calculates the shortest difference between two given angles given in degrees.\r\n       * @param current - current angle in degrees\r\n       * @param target - target angle in degrees\r\n       * @returns the delta\r\n       */\r\n      Scalar.DeltaAngle = function (current, target) {\r\n          var num = Scalar.Repeat(target - current, 360.0);\r\n          if (num > 180.0) {\r\n              num -= 360.0;\r\n          }\r\n          return num;\r\n      };\r\n      /**\r\n       * PingPongs the value t, so that it is never larger than length and never smaller than 0.\r\n       * @param tx - value\r\n       * @param length - length\r\n       * @returns The returned value will move back and forth between 0 and length\r\n       */\r\n      Scalar.PingPong = function (tx, length) {\r\n          var t = Scalar.Repeat(tx, length * 2.0);\r\n          return length - Math.abs(t - length);\r\n      };\r\n      /**\r\n       * Interpolates between min and max with smoothing at the limits.\r\n       *\r\n       * This function interpolates between min and max in a similar way to Lerp. However, the interpolation will gradually speed up\r\n       * from the start and slow down toward the end. This is useful for creating natural-looking animation, fading and other transitions.\r\n       * @param from - from\r\n       * @param to - to\r\n       * @param tx - value\r\n       * @returns the smooth stepped value\r\n       */\r\n      Scalar.SmoothStep = function (from, to, tx) {\r\n          var t = Scalar.Clamp(tx);\r\n          t = -2.0 * t * t * t + 3.0 * t * t;\r\n          return to * t + from * (1.0 - t);\r\n      };\r\n      /**\r\n       * Moves a value current towards target.\r\n       *\r\n       * This is essentially the same as Mathf.Lerp but instead the function will ensure that the speed never exceeds maxDelta.\r\n       * Negative values of maxDelta pushes the value away from target.\r\n       * @param current - current value\r\n       * @param target - target value\r\n       * @param maxDelta - max distance to move\r\n       * @returns resulting value\r\n       */\r\n      Scalar.MoveTowards = function (current, target, maxDelta) {\r\n          var result = 0;\r\n          if (Math.abs(target - current) <= maxDelta) {\r\n              result = target;\r\n          }\r\n          else {\r\n              result = current + Scalar.Sign(target - current) * maxDelta;\r\n          }\r\n          return result;\r\n      };\r\n      /**\r\n       * Same as MoveTowards but makes sure the values interpolate correctly when they wrap around 360 degrees.\r\n       *\r\n       * Variables current and target are assumed to be in degrees. For optimization reasons, negative values of maxDelta\r\n       *  are not supported and may cause oscillation. To push current away from a target angle, add 180 to that angle instead.\r\n       * @param current - current value\r\n       * @param target - target value\r\n       * @param maxDelta - max distance to move\r\n       * @returns resulting angle\r\n       */\r\n      Scalar.MoveTowardsAngle = function (current, target, maxDelta) {\r\n          var num = Scalar.DeltaAngle(current, target);\r\n          var result = 0;\r\n          if (-maxDelta < num && num < maxDelta) {\r\n              result = target;\r\n          }\r\n          else {\r\n              result = Scalar.MoveTowards(current, current + num, maxDelta);\r\n          }\r\n          return result;\r\n      };\r\n      /**\r\n       * Creates a new scalar with values linearly interpolated of \"amount\" between the start scalar and the end scalar.\r\n       * @param start - start value\r\n       * @param end - target value\r\n       * @param amount - amount to lerp between\r\n       * @returns the lerped value\r\n       */\r\n      Scalar.Lerp = function (start, end, amount) {\r\n          return start + (end - start) * amount;\r\n      };\r\n      /**\r\n       * Same as Lerp but makes sure the values interpolate correctly when they wrap around 360 degrees.\r\n       * The parameter t is clamped to the range [0, 1]. Variables a and b are assumed to be in degrees.\r\n       * @param start - start value\r\n       * @param end - target value\r\n       * @param amount - amount to lerp between\r\n       * @returns the lerped value\r\n       */\r\n      Scalar.LerpAngle = function (start, end, amount) {\r\n          var num = Scalar.Repeat(end - start, 360.0);\r\n          if (num > 180.0) {\r\n              num -= 360.0;\r\n          }\r\n          return start + num * Scalar.Clamp(amount);\r\n      };\r\n      /**\r\n       * Calculates the linear parameter t that produces the interpolant value within the range [a, b].\r\n       * @param a - start value\r\n       * @param b - target value\r\n       * @param value - value between a and b\r\n       * @returns the inverseLerp value\r\n       */\r\n      Scalar.InverseLerp = function (a, b, value) {\r\n          var result = 0;\r\n          if (a !== b) {\r\n              result = Scalar.Clamp((value - a) / (b - a));\r\n          }\r\n          else {\r\n              result = 0.0;\r\n          }\r\n          return result;\r\n      };\r\n      /**\r\n       * Returns a new scalar located for \"amount\" (float) on the Hermite spline defined by the scalars \"value1\", \"value3\", \"tangent1\", \"tangent2\".\r\n       * {@link http://mathworld.wolfram.com/HermitePolynomial.html}\r\n       * @param value1 - spline value\r\n       * @param tangent1 - spline value\r\n       * @param value2 - spline value\r\n       * @param tangent2 - spline value\r\n       * @param amount - input value\r\n       * @returns hermite result\r\n       */\r\n      Scalar.Hermite = function (value1, tangent1, value2, tangent2, amount) {\r\n          var squared = amount * amount;\r\n          var cubed = amount * squared;\r\n          var part1 = 2.0 * cubed - 3.0 * squared + 1.0;\r\n          var part2 = -2.0 * cubed + 3.0 * squared;\r\n          var part3 = cubed - 2.0 * squared + amount;\r\n          var part4 = cubed - squared;\r\n          return value1 * part1 + value2 * part2 + tangent1 * part3 + tangent2 * part4;\r\n      };\r\n      /**\r\n       * Returns a random float number between and min and max values\r\n       * @param min - min value of random\r\n       * @param max - max value of random\r\n       * @returns random value\r\n       */\r\n      Scalar.RandomRange = function (min, max) {\r\n          if (min === max) {\r\n              return min;\r\n          }\r\n          return Math.random() * (max - min) + min;\r\n      };\r\n      /**\r\n       * This function returns percentage of a number in a given range.\r\n       *\r\n       * RangeToPercent(40,20,60) will return 0.5 (50%)\r\n       * RangeToPercent(34,0,100) will return 0.34 (34%)\r\n       * @param num - to convert to percentage\r\n       * @param min - min range\r\n       * @param max - max range\r\n       * @returns the percentage\r\n       */\r\n      Scalar.RangeToPercent = function (num, min, max) {\r\n          return (num - min) / (max - min);\r\n      };\r\n      /**\r\n       * This function returns number that corresponds to the percentage in a given range.\r\n       *\r\n       * PercentToRange(0.34,0,100) will return 34.\r\n       * @param percent - to convert to number\r\n       * @param min - min range\r\n       * @param max - max range\r\n       * @returns the number\r\n       */\r\n      Scalar.PercentToRange = function (percent, min, max) {\r\n          return (max - min) * percent + min;\r\n      };\r\n      /**\r\n       * Returns the angle converted to equivalent value between -Math.PI and Math.PI radians.\r\n       * @param angle - The angle to normalize in radian.\r\n       * @returns The converted angle.\r\n       */\r\n      Scalar.NormalizeRadians = function (angle) {\r\n          // More precise but slower version kept for reference.\r\n          // tslint:disable:no-commented-out-code\r\n          /*\r\n            // angle = angle % Tools.TwoPi;\r\n            // angle = (angle + Tools.TwoPi) % Tools.TwoPi;\r\n      \n            //if (angle > Math.PI) {\r\n            //\tangle -= Tools.TwoPi;\r\n            //}\r\n             */\r\n          return angle - Scalar.TwoPi * Math.floor((angle + Math.PI) / Scalar.TwoPi);\r\n      };\r\n      /**\r\n       * Two pi constants convenient for computation.\r\n       */\r\n      Scalar.TwoPi = Math.PI * 2;\r\n      return Scalar;\r\n  }());\n\n  /**\r\n   * Vector4 class created for EulerAngle class conversion to Quaternion\r\n   * @public\r\n   */\r\n  var Vector4 = /** @class */ (function () {\r\n      /**\r\n       * Creates a Vector4 object from the given floats.\r\n       * @param x - x value of the vector\r\n       * @param y - y value of the vector\r\n       * @param z - z value of the vector\r\n       * @param w - w value of the vector\r\n       */\r\n      function Vector4(\r\n      /** x value of the vector */\r\n      x, \r\n      /** y value of the vector */\r\n      y, \r\n      /** z value of the vector */\r\n      z, \r\n      /** w value of the vector */\r\n      w) {\r\n          this.x = x;\r\n          this.y = y;\r\n          this.z = z;\r\n          this.w = w;\r\n      }\r\n      // Statics\r\n      /**\r\n       * Returns a new Vector4 as the result of the addition of the two given vectors.\r\n       * @param vector1 - the first vector\r\n       * @param vector2 - the second vector\r\n       * @returns the resulting vector\r\n       */\r\n      Vector4.Add = function (vector1, vector2) {\r\n          return new Vector4(vector1.x, vector1.y, vector1.z, vector1.w).addInPlace(vector2);\r\n      };\r\n      /**\r\n       * Returns a new Vector4 set from the starting index of the given array.\r\n       * @param array - the array to pull values from\r\n       * @param offset - the offset into the array to start at\r\n       * @returns the new vector\r\n       */\r\n      Vector4.FromArray = function (array, offset) {\r\n          if (offset === void 0) { offset = 0; }\r\n          return new Vector4(array[offset], array[offset + 1], array[offset + 2], array[offset + 3]);\r\n      };\r\n      /**\r\n       * Updates the given vector \"result\" from the starting index of the given array.\r\n       * @param array - the array to pull values from\r\n       * @param offset - the offset into the array to start at\r\n       * @param result - the vector to store the result in\r\n       */\r\n      Vector4.FromArrayToRef = function (array, offset, result) {\r\n          result.x = array[offset];\r\n          result.y = array[offset + 1];\r\n          result.z = array[offset + 2];\r\n          result.w = array[offset + 3];\r\n      };\r\n      /**\r\n       * Updates the given vector \"result\" from the starting index of the given FloatArray.\r\n       * @param array - the array to pull values from\r\n       * @param offset - the offset into the array to start at\r\n       * @param result - the vector to store the result in\r\n       */\r\n      Vector4.FromFloatArrayToRef = function (array, offset, result) {\r\n          Vector4.FromArrayToRef(array, offset, result);\r\n      };\r\n      /**\r\n       * Updates the given vector \"result\" coordinates from the given floats.\r\n       * @param x - float to set from\r\n       * @param y - float to set from\r\n       * @param z - float to set from\r\n       * @param w - float to set from\r\n       * @param result - the vector to the floats in\r\n       */\r\n      Vector4.FromFloatsToRef = function (x, y, z, w, result) {\r\n          result.x = x;\r\n          result.y = y;\r\n          result.z = z;\r\n          result.w = w;\r\n      };\r\n      /**\r\n       * Returns a new Vector4 set to (0.0, 0.0, 0.0, 0.0)\r\n       * @returns the new vector\r\n       */\r\n      Vector4.Zero = function () {\r\n          return new Vector4(0.0, 0.0, 0.0, 0.0);\r\n      };\r\n      /**\r\n       * Returns a new Vector4 set to (1.0, 1.0, 1.0, 1.0)\r\n       * @returns the new vector\r\n       */\r\n      Vector4.One = function () {\r\n          return new Vector4(1.0, 1.0, 1.0, 1.0);\r\n      };\r\n      /**\r\n       * Returns a new normalized Vector4 from the given one.\r\n       * @param vector - the vector to normalize\r\n       * @returns the vector\r\n       */\r\n      Vector4.Normalize = function (vector) {\r\n          var result = Vector4.Zero();\r\n          Vector4.NormalizeToRef(vector, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Updates the given vector \"result\" from the normalization of the given one.\r\n       * @param vector - the vector to normalize\r\n       * @param result - the vector to store the result in\r\n       */\r\n      Vector4.NormalizeToRef = function (vector, result) {\r\n          result.copyFrom(vector);\r\n          result.normalize();\r\n      };\r\n      /**\r\n       * Returns a vector with the minimum values from the left and right vectors\r\n       * @param left - left vector to minimize\r\n       * @param right - right vector to minimize\r\n       * @returns a new vector with the minimum of the left and right vector values\r\n       */\r\n      Vector4.Minimize = function (left, right) {\r\n          var min = new Vector4(left.x, left.y, left.z, left.w);\r\n          min.minimizeInPlace(right);\r\n          return min;\r\n      };\r\n      /**\r\n       * Returns a vector with the maximum values from the left and right vectors\r\n       * @param left - left vector to maximize\r\n       * @param right - right vector to maximize\r\n       * @returns a new vector with the maximum of the left and right vector values\r\n       */\r\n      Vector4.Maximize = function (left, right) {\r\n          var max = new Vector4(left.x, left.y, left.z, left.w);\r\n          max.maximizeInPlace(right);\r\n          return max;\r\n      };\r\n      /**\r\n       * Returns the distance (float) between the vectors \"value1\" and \"value2\".\r\n       * @param value1 - value to calulate the distance between\r\n       * @param value2 - value to calulate the distance between\r\n       * @returns the distance between the two vectors\r\n       */\r\n      Vector4.Distance = function (value1, value2) {\r\n          return Math.sqrt(Vector4.DistanceSquared(value1, value2));\r\n      };\r\n      /**\r\n       * Returns the squared distance (float) between the vectors \"value1\" and \"value2\".\r\n       * @param value1 - value to calulate the distance between\r\n       * @param value2 - value to calulate the distance between\r\n       * @returns the distance between the two vectors squared\r\n       */\r\n      Vector4.DistanceSquared = function (value1, value2) {\r\n          var x = value1.x - value2.x;\r\n          var y = value1.y - value2.y;\r\n          var z = value1.z - value2.z;\r\n          var w = value1.w - value2.w;\r\n          return x * x + y * y + z * z + w * w;\r\n      };\r\n      /**\r\n       * Returns a new Vector4 located at the center between the vectors \"value1\" and \"value2\".\r\n       * @param value1 - value to calulate the center between\r\n       * @param value2 - value to calulate the center between\r\n       * @returns the center between the two vectors\r\n       */\r\n      Vector4.Center = function (value1, value2) {\r\n          var center = Vector4.Add(value1, value2);\r\n          center.scaleInPlace(0.5);\r\n          return center;\r\n      };\r\n      /**\r\n       * Returns a new Vector4 set with the result of the normal transformation by the given matrix of the given vector.\r\n       * This methods computes transformed normalized direction vectors only.\r\n       * @param vector - the vector to transform\r\n       * @param transformation - the transformation matrix to apply\r\n       * @returns the new vector\r\n       */\r\n      Vector4.TransformNormal = function (vector, transformation) {\r\n          var result = Vector4.Zero();\r\n          Vector4.TransformNormalToRef(vector, transformation, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" with the result of the normal transformation by the given matrix of the given vector.\r\n       * This methods computes transformed normalized direction vectors only.\r\n       * @param vector - the vector to transform\r\n       * @param transformation - the transformation matrix to apply\r\n       * @param result - the vector to store the result in\r\n       */\r\n      Vector4.TransformNormalToRef = function (vector, transformation, result) {\r\n          var m = transformation.m;\r\n          var x = vector.x * m[0] + vector.y * m[4] + vector.z * m[8];\r\n          var y = vector.x * m[1] + vector.y * m[5] + vector.z * m[9];\r\n          var z = vector.x * m[2] + vector.y * m[6] + vector.z * m[10];\r\n          result.x = x;\r\n          result.y = y;\r\n          result.z = z;\r\n          result.w = vector.w;\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" with the result of the normal transformation by the given matrix of the given floats (x, y, z, w).\r\n       * This methods computes transformed normalized direction vectors only.\r\n       * @param x - value to transform\r\n       * @param y - value to transform\r\n       * @param z - value to transform\r\n       * @param w - value to transform\r\n       * @param transformation - the transformation matrix to apply\r\n       * @param result - the vector to store the results in\r\n       */\r\n      Vector4.TransformNormalFromFloatsToRef = function (x, y, z, w, transformation, result) {\r\n          var m = transformation.m;\r\n          result.x = x * m[0] + y * m[4] + z * m[8];\r\n          result.y = x * m[1] + y * m[5] + z * m[9];\r\n          result.z = x * m[2] + y * m[6] + z * m[10];\r\n          result.w = w;\r\n      };\r\n      /**\r\n       * Returns the string with the Vector4 coordinates.\r\n       * @returns a string containing all the vector values\r\n       */\r\n      Vector4.prototype.toString = function () {\r\n          return '{X: ' + this.x + ' Y:' + this.y + ' Z:' + this.z + ' W:' + this.w + '}';\r\n      };\r\n      /**\r\n       * Returns the string \"Vector4\".\r\n       * @returns \"Vector4\"\r\n       */\r\n      Vector4.prototype.getClassName = function () {\r\n          return 'Vector4';\r\n      };\r\n      /**\r\n       * Returns the Vector4 hash code.\r\n       * @returns a unique hash code\r\n       */\r\n      Vector4.prototype.getHashCode = function () {\r\n          var hash = this.x || 0;\r\n          hash = (hash * 397) ^ (this.y || 0);\r\n          hash = (hash * 397) ^ (this.z || 0);\r\n          hash = (hash * 397) ^ (this.w || 0);\r\n          return hash;\r\n      };\r\n      // Operators\r\n      /**\r\n       * Returns a new array populated with 4 elements : the Vector4 coordinates.\r\n       * @returns the resulting array\r\n       */\r\n      Vector4.prototype.asArray = function () {\r\n          var result = new Array();\r\n          this.toArray(result, 0);\r\n          return result;\r\n      };\r\n      /**\r\n       * Populates the given array from the given index with the Vector4 coordinates.\r\n       * @param array - array to populate\r\n       * @param index - index of the array to start at (default: 0)\r\n       * @returns the Vector4.\r\n       */\r\n      Vector4.prototype.toArray = function (array, index) {\r\n          if (index === void 0) { index = 0; }\r\n          array[index] = this.x;\r\n          array[index + 1] = this.y;\r\n          array[index + 2] = this.z;\r\n          array[index + 3] = this.w;\r\n          return this;\r\n      };\r\n      /**\r\n       * Adds the given vector to the current Vector4.\r\n       * @param otherVector - the vector to add\r\n       * @returns the updated Vector4.\r\n       */\r\n      Vector4.prototype.addInPlace = function (otherVector) {\r\n          this.x += otherVector.x;\r\n          this.y += otherVector.y;\r\n          this.z += otherVector.z;\r\n          this.w += otherVector.w;\r\n          return this;\r\n      };\r\n      /**\r\n       * Returns a new Vector4 as the result of the addition of the current Vector4 and the given one.\r\n       * @param otherVector - the vector to add\r\n       * @returns the resulting vector\r\n       */\r\n      Vector4.prototype.add = function (otherVector) {\r\n          return new Vector4(this.x + otherVector.x, this.y + otherVector.y, this.z + otherVector.z, this.w + otherVector.w);\r\n      };\r\n      /**\r\n       * Updates the given vector \"result\" with the result of the addition of the current Vector4 and the given one.\r\n       * @param otherVector - the vector to add\r\n       * @param result - the vector to store the result\r\n       * @returns the current Vector4.\r\n       */\r\n      Vector4.prototype.addToRef = function (otherVector, result) {\r\n          result.x = this.x + otherVector.x;\r\n          result.y = this.y + otherVector.y;\r\n          result.z = this.z + otherVector.z;\r\n          result.w = this.w + otherVector.w;\r\n          return this;\r\n      };\r\n      /**\r\n       * Subtract in place the given vector from the current Vector4.\r\n       * @param otherVector - the vector to subtract\r\n       * @returns the updated Vector4.\r\n       */\r\n      Vector4.prototype.subtractInPlace = function (otherVector) {\r\n          this.x -= otherVector.x;\r\n          this.y -= otherVector.y;\r\n          this.z -= otherVector.z;\r\n          this.w -= otherVector.w;\r\n          return this;\r\n      };\r\n      /**\r\n       * Returns a new Vector4 with the result of the subtraction of the given vector from the current Vector4.\r\n       * @param otherVector - the vector to add\r\n       * @returns the new vector with the result\r\n       */\r\n      Vector4.prototype.subtract = function (otherVector) {\r\n          return new Vector4(this.x - otherVector.x, this.y - otherVector.y, this.z - otherVector.z, this.w - otherVector.w);\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" with the result of the subtraction of the given vector from the current Vector4.\r\n       * @param otherVector - the vector to subtract\r\n       * @param result - the vector to store the result\r\n       * @returns the current Vector4.\r\n       */\r\n      Vector4.prototype.subtractToRef = function (otherVector, result) {\r\n          result.x = this.x - otherVector.x;\r\n          result.y = this.y - otherVector.y;\r\n          result.z = this.z - otherVector.z;\r\n          result.w = this.w - otherVector.w;\r\n          return this;\r\n      };\r\n      /**\r\n       * Returns a new Vector4 set with the result of the subtraction of the given floats from the current Vector4 coordinates.\r\n       */\r\n      /**\r\n       * Returns a new Vector4 set with the result of the subtraction of the given floats from the current Vector4 coordinates.\r\n       * @param x - value to subtract\r\n       * @param y - value to subtract\r\n       * @param z - value to subtract\r\n       * @param w - value to subtract\r\n       * @returns new vector containing the result\r\n       */\r\n      Vector4.prototype.subtractFromFloats = function (x, y, z, w) {\r\n          return new Vector4(this.x - x, this.y - y, this.z - z, this.w - w);\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" set with the result of the subtraction of the given floats from the current Vector4 coordinates.\r\n       * @param x - value to subtract\r\n       * @param y - value to subtract\r\n       * @param z - value to subtract\r\n       * @param w - value to subtract\r\n       * @param result - the vector to store the result in\r\n       * @returns the current Vector4.\r\n       */\r\n      Vector4.prototype.subtractFromFloatsToRef = function (x, y, z, w, result) {\r\n          result.x = this.x - x;\r\n          result.y = this.y - y;\r\n          result.z = this.z - z;\r\n          result.w = this.w - w;\r\n          return this;\r\n      };\r\n      /**\r\n       * Returns a new Vector4 set with the current Vector4 negated coordinates.\r\n       * @returns a new vector with the negated values\r\n       */\r\n      Vector4.prototype.negate = function () {\r\n          return new Vector4(-this.x, -this.y, -this.z, -this.w);\r\n      };\r\n      /**\r\n       * Multiplies the current Vector4 coordinates by scale (float).\r\n       * @param scale - the number to scale with\r\n       * @returns the updated Vector4.\r\n       */\r\n      Vector4.prototype.scaleInPlace = function (scale) {\r\n          this.x *= scale;\r\n          this.y *= scale;\r\n          this.z *= scale;\r\n          this.w *= scale;\r\n          return this;\r\n      };\r\n      /**\r\n       * Returns a new Vector4 set with the current Vector4 coordinates multiplied by scale (float).\r\n       * @param scale - the number to scale with\r\n       * @returns a new vector with the result\r\n       */\r\n      Vector4.prototype.scale = function (scale) {\r\n          return new Vector4(this.x * scale, this.y * scale, this.z * scale, this.w * scale);\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" with the current Vector4 coordinates multiplied by scale (float).\r\n       * @param scale - the number to scale with\r\n       * @param result - a vector to store the result in\r\n       * @returns the current Vector4.\r\n       */\r\n      Vector4.prototype.scaleToRef = function (scale, result) {\r\n          result.x = this.x * scale;\r\n          result.y = this.y * scale;\r\n          result.z = this.z * scale;\r\n          result.w = this.w * scale;\r\n          return this;\r\n      };\r\n      /**\r\n       * Scale the current Vector4 values by a factor and add the result to a given Vector4\r\n       * @param scale - defines the scale factor\r\n       * @param result - defines the Vector4 object where to store the result\r\n       * @returns the unmodified current Vector4\r\n       */\r\n      Vector4.prototype.scaleAndAddToRef = function (scale, result) {\r\n          result.x += this.x * scale;\r\n          result.y += this.y * scale;\r\n          result.z += this.z * scale;\r\n          result.w += this.w * scale;\r\n          return this;\r\n      };\r\n      /**\r\n       * Boolean : True if the current Vector4 coordinates are stricly equal to the given ones.\r\n       * @param otherVector - the vector to compare against\r\n       * @returns true if they are equal\r\n       */\r\n      Vector4.prototype.equals = function (otherVector) {\r\n          return (otherVector &&\r\n              this.x === otherVector.x &&\r\n              this.y === otherVector.y &&\r\n              this.z === otherVector.z &&\r\n              this.w === otherVector.w);\r\n      };\r\n      /**\r\n       * Boolean : True if the current Vector4 coordinates are each beneath the distance \"epsilon\" from the given vector ones.\r\n       * @param otherVector - vector to compare against\r\n       * @param epsilon - (Default: very small number)\r\n       * @returns true if they are equal\r\n       */\r\n      Vector4.prototype.equalsWithEpsilon = function (otherVector, epsilon) {\r\n          if (epsilon === void 0) { epsilon = Epsilon; }\r\n          return (otherVector &&\r\n              Scalar.WithinEpsilon(this.x, otherVector.x, epsilon) &&\r\n              Scalar.WithinEpsilon(this.y, otherVector.y, epsilon) &&\r\n              Scalar.WithinEpsilon(this.z, otherVector.z, epsilon) &&\r\n              Scalar.WithinEpsilon(this.w, otherVector.w, epsilon));\r\n      };\r\n      /**\r\n       * Boolean : True if the given floats are strictly equal to the current Vector4 coordinates.\r\n       * @param x - x value to compare against\r\n       * @param y - y value to compare against\r\n       * @param z - z value to compare against\r\n       * @param w - w value to compare against\r\n       * @returns true if equal\r\n       */\r\n      Vector4.prototype.equalsToFloats = function (x, y, z, w) {\r\n          return this.x === x && this.y === y && this.z === z && this.w === w;\r\n      };\r\n      /**\r\n       * Multiplies in place the current Vector4 by the given one.\r\n       * @param otherVector - vector to multiple with\r\n       * @returns the updated Vector4.\r\n       */\r\n      Vector4.prototype.multiplyInPlace = function (otherVector) {\r\n          this.x *= otherVector.x;\r\n          this.y *= otherVector.y;\r\n          this.z *= otherVector.z;\r\n          this.w *= otherVector.w;\r\n          return this;\r\n      };\r\n      /**\r\n       * Returns a new Vector4 set with the multiplication result of the current Vector4 and the given one.\r\n       * @param otherVector - vector to multiple with\r\n       * @returns resulting new vector\r\n       */\r\n      Vector4.prototype.multiply = function (otherVector) {\r\n          return new Vector4(this.x * otherVector.x, this.y * otherVector.y, this.z * otherVector.z, this.w * otherVector.w);\r\n      };\r\n      /**\r\n       * Updates the given vector \"result\" with the multiplication result of the current Vector4 and the given one.\r\n       * @param otherVector - vector to multiple with\r\n       * @param result - vector to store the result\r\n       * @returns the current Vector4.\r\n       */\r\n      Vector4.prototype.multiplyToRef = function (otherVector, result) {\r\n          result.x = this.x * otherVector.x;\r\n          result.y = this.y * otherVector.y;\r\n          result.z = this.z * otherVector.z;\r\n          result.w = this.w * otherVector.w;\r\n          return this;\r\n      };\r\n      /**\r\n       * Returns a new Vector4 set with the multiplication result of the given floats and the current Vector4 coordinates.\r\n       * @param x - x value multiply with\r\n       * @param y - y value multiply with\r\n       * @param z - z value multiply with\r\n       * @param w - w value multiply with\r\n       * @returns resulting new vector\r\n       */\r\n      Vector4.prototype.multiplyByFloats = function (x, y, z, w) {\r\n          return new Vector4(this.x * x, this.y * y, this.z * z, this.w * w);\r\n      };\r\n      /**\r\n       * Returns a new Vector4 set with the division result of the current Vector4 by the given one.\r\n       * @param otherVector - vector to devide with\r\n       * @returns resulting new vector\r\n       */\r\n      Vector4.prototype.divide = function (otherVector) {\r\n          return new Vector4(this.x / otherVector.x, this.y / otherVector.y, this.z / otherVector.z, this.w / otherVector.w);\r\n      };\r\n      /**\r\n       * Updates the given vector \"result\" with the division result of the current Vector4 by the given one.\r\n       * @param otherVector - vector to devide with\r\n       * @param result - vector to store the result\r\n       * @returns the current Vector4.\r\n       */\r\n      Vector4.prototype.divideToRef = function (otherVector, result) {\r\n          result.x = this.x / otherVector.x;\r\n          result.y = this.y / otherVector.y;\r\n          result.z = this.z / otherVector.z;\r\n          result.w = this.w / otherVector.w;\r\n          return this;\r\n      };\r\n      /**\r\n       * Divides the current Vector3 coordinates by the given ones.\r\n       * @param otherVector - vector to devide with\r\n       * @returns the updated Vector3.\r\n       */\r\n      Vector4.prototype.divideInPlace = function (otherVector) {\r\n          return this.divideToRef(otherVector, this);\r\n      };\r\n      /**\r\n       * Updates the Vector4 coordinates with the minimum values between its own and the given vector ones\r\n       * @param other - defines the second operand\r\n       * @returns the current updated Vector4\r\n       */\r\n      Vector4.prototype.minimizeInPlace = function (other) {\r\n          if (other.x < this.x) {\r\n              this.x = other.x;\r\n          }\r\n          if (other.y < this.y) {\r\n              this.y = other.y;\r\n          }\r\n          if (other.z < this.z) {\r\n              this.z = other.z;\r\n          }\r\n          if (other.w < this.w) {\r\n              this.w = other.w;\r\n          }\r\n          return this;\r\n      };\r\n      /**\r\n       * Updates the Vector4 coordinates with the maximum values between its own and the given vector ones\r\n       * @param other - defines the second operand\r\n       * @returns the current updated Vector4\r\n       */\r\n      Vector4.prototype.maximizeInPlace = function (other) {\r\n          if (other.x > this.x) {\r\n              this.x = other.x;\r\n          }\r\n          if (other.y > this.y) {\r\n              this.y = other.y;\r\n          }\r\n          if (other.z > this.z) {\r\n              this.z = other.z;\r\n          }\r\n          if (other.w > this.w) {\r\n              this.w = other.w;\r\n          }\r\n          return this;\r\n      };\r\n      /**\r\n       * Gets a new Vector4 from current Vector4 floored values\r\n       * @returns a new Vector4\r\n       */\r\n      Vector4.prototype.floor = function () {\r\n          return new Vector4(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z), Math.floor(this.w));\r\n      };\r\n      /**\r\n       * Gets a new Vector4 from current Vector3 floored values\r\n       * @returns a new Vector4\r\n       */\r\n      Vector4.prototype.fract = function () {\r\n          return new Vector4(this.x - Math.floor(this.x), this.y - Math.floor(this.y), this.z - Math.floor(this.z), this.w - Math.floor(this.w));\r\n      };\r\n      // Properties\r\n      /**\r\n       * Returns the Vector4 length (float).\r\n       * @returns the length\r\n       */\r\n      Vector4.prototype.length = function () {\r\n          return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n      };\r\n      /**\r\n       * Returns the Vector4 squared length (float).\r\n       * @returns the length squared\r\n       */\r\n      Vector4.prototype.lengthSquared = function () {\r\n          return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n      };\r\n      // Methods\r\n      /**\r\n       * Normalizes in place the Vector4.\r\n       * @returns the updated Vector4.\r\n       */\r\n      Vector4.prototype.normalize = function () {\r\n          var len = this.length();\r\n          if (len === 0) {\r\n              return this;\r\n          }\r\n          return this.scaleInPlace(1.0 / len);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 from the Vector4 (x, y, z) coordinates.\r\n       * @returns this converted to a new vector3\r\n       */\r\n      Vector4.prototype.toVector3 = function () {\r\n          return new Vector3(this.x, this.y, this.z);\r\n      };\r\n      /**\r\n       * Returns a new Vector4 copied from the current one.\r\n       * @returns the new cloned vector\r\n       */\r\n      Vector4.prototype.clone = function () {\r\n          return new Vector4(this.x, this.y, this.z, this.w);\r\n      };\r\n      /**\r\n       * Updates the current Vector4 with the given one coordinates.\r\n       * @param source - the source vector to copy from\r\n       * @returns the updated Vector4.\r\n       */\r\n      Vector4.prototype.copyFrom = function (source) {\r\n          this.x = source.x;\r\n          this.y = source.y;\r\n          this.z = source.z;\r\n          this.w = source.w;\r\n          return this;\r\n      };\r\n      /**\r\n       * Updates the current Vector4 coordinates with the given floats.\r\n       * @param x - float to copy from\r\n       * @param y - float to copy from\r\n       * @param z - float to copy from\r\n       * @param w - float to copy from\r\n       * @returns the updated Vector4.\r\n       */\r\n      Vector4.prototype.copyFromFloats = function (x, y, z, w) {\r\n          this.x = x;\r\n          this.y = y;\r\n          this.z = z;\r\n          this.w = w;\r\n          return this;\r\n      };\r\n      /**\r\n       * Updates the current Vector4 coordinates with the given floats.\r\n       * @param x - float to set from\r\n       * @param y - float to set from\r\n       * @param z - float to set from\r\n       * @param w - float to set from\r\n       * @returns the updated Vector4.\r\n       */\r\n      Vector4.prototype.set = function (x, y, z, w) {\r\n          return this.copyFromFloats(x, y, z, w);\r\n      };\r\n      /**\r\n       * Copies the given float to the current Vector3 coordinates\r\n       * @param v - defines the x, y, z and w coordinates of the operand\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector4.prototype.setAll = function (v) {\r\n          this.x = this.y = this.z = this.w = v;\r\n          return this;\r\n      };\r\n      return Vector4;\r\n  }());\n\n  /**\r\n   * Class used to store matrix data (4x4)\r\n   * @public\r\n   */\r\n  var Matrix = /** @class */ (function () {\r\n      /**\r\n       * Creates an empty matrix (filled with zeros)\r\n       */\r\n      function Matrix() {\r\n          this._isIdentity = false;\r\n          this._isIdentityDirty = true;\r\n          this._isIdentity3x2 = true;\r\n          this._isIdentity3x2Dirty = true;\r\n          this._m = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n          this._updateIdentityStatus(false);\r\n      }\r\n      Object.defineProperty(Matrix.prototype, \"m\", {\r\n          /**\r\n           * Gets the internal data of the matrix\r\n           */\r\n          get: function () {\r\n              return this._m;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(Matrix, \"IdentityReadOnly\", {\r\n          /**\r\n           * Gets an identity matrix that must not be updated\r\n           */\r\n          get: function () {\r\n              return Matrix._identityReadOnly;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      // Statics\r\n      /**\r\n       * Creates a matrix from an array\r\n       * @param array - defines the source array\r\n       * @param offset - defines an offset in the source array\r\n       * @returns a new Matrix set from the starting index of the given array\r\n       */\r\n      Matrix.FromArray = function (array, offset) {\r\n          if (offset === void 0) { offset = 0; }\r\n          var result = new Matrix();\r\n          Matrix.FromArrayToRef(array, offset, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Copy the content of an array into a given matrix\r\n       * @param array - defines the source array\r\n       * @param offset - defines an offset in the source array\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.FromArrayToRef = function (array, offset, result) {\r\n          for (var index = 0; index < 16; index++) {\r\n              result._m[index] = array[index + offset];\r\n          }\r\n          result._markAsUpdated();\r\n      };\r\n      /**\r\n       * Stores an array into a matrix after having multiplied each component by a given factor\r\n       * @param array - defines the source array\r\n       * @param offset - defines the offset in the source array\r\n       * @param scale - defines the scaling factor\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.FromFloatArrayToRefScaled = function (array, offset, scale, result) {\r\n          for (var index = 0; index < 16; index++) {\r\n              result._m[index] = array[index + offset] * scale;\r\n          }\r\n          result._markAsUpdated();\r\n      };\r\n      /**\r\n       * Stores a list of values (16) inside a given matrix\r\n       * @param initialM11 - defines 1st value of 1st row\r\n       * @param initialM12 - defines 2nd value of 1st row\r\n       * @param initialM13 - defines 3rd value of 1st row\r\n       * @param initialM14 - defines 4th value of 1st row\r\n       * @param initialM21 - defines 1st value of 2nd row\r\n       * @param initialM22 - defines 2nd value of 2nd row\r\n       * @param initialM23 - defines 3rd value of 2nd row\r\n       * @param initialM24 - defines 4th value of 2nd row\r\n       * @param initialM31 - defines 1st value of 3rd row\r\n       * @param initialM32 - defines 2nd value of 3rd row\r\n       * @param initialM33 - defines 3rd value of 3rd row\r\n       * @param initialM34 - defines 4th value of 3rd row\r\n       * @param initialM41 - defines 1st value of 4th row\r\n       * @param initialM42 - defines 2nd value of 4th row\r\n       * @param initialM43 - defines 3rd value of 4th row\r\n       * @param initialM44 - defines 4th value of 4th row\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.FromValuesToRef = function (initialM11, initialM12, initialM13, initialM14, initialM21, initialM22, initialM23, initialM24, initialM31, initialM32, initialM33, initialM34, initialM41, initialM42, initialM43, initialM44, result) {\r\n          var m = result._m;\r\n          m[0] = initialM11;\r\n          m[1] = initialM12;\r\n          m[2] = initialM13;\r\n          m[3] = initialM14;\r\n          m[4] = initialM21;\r\n          m[5] = initialM22;\r\n          m[6] = initialM23;\r\n          m[7] = initialM24;\r\n          m[8] = initialM31;\r\n          m[9] = initialM32;\r\n          m[10] = initialM33;\r\n          m[11] = initialM34;\r\n          m[12] = initialM41;\r\n          m[13] = initialM42;\r\n          m[14] = initialM43;\r\n          m[15] = initialM44;\r\n          result._markAsUpdated();\r\n      };\r\n      /**\r\n       * Creates new matrix from a list of values (16)\r\n       * @param initialM11 - defines 1st value of 1st row\r\n       * @param initialM12 - defines 2nd value of 1st row\r\n       * @param initialM13 - defines 3rd value of 1st row\r\n       * @param initialM14 - defines 4th value of 1st row\r\n       * @param initialM21 - defines 1st value of 2nd row\r\n       * @param initialM22 - defines 2nd value of 2nd row\r\n       * @param initialM23 - defines 3rd value of 2nd row\r\n       * @param initialM24 - defines 4th value of 2nd row\r\n       * @param initialM31 - defines 1st value of 3rd row\r\n       * @param initialM32 - defines 2nd value of 3rd row\r\n       * @param initialM33 - defines 3rd value of 3rd row\r\n       * @param initialM34 - defines 4th value of 3rd row\r\n       * @param initialM41 - defines 1st value of 4th row\r\n       * @param initialM42 - defines 2nd value of 4th row\r\n       * @param initialM43 - defines 3rd value of 4th row\r\n       * @param initialM44 - defines 4th value of 4th row\r\n       * @returns the new matrix\r\n       */\r\n      Matrix.FromValues = function (initialM11, initialM12, initialM13, initialM14, initialM21, initialM22, initialM23, initialM24, initialM31, initialM32, initialM33, initialM34, initialM41, initialM42, initialM43, initialM44) {\r\n          var result = new Matrix();\r\n          var m = result._m;\r\n          m[0] = initialM11;\r\n          m[1] = initialM12;\r\n          m[2] = initialM13;\r\n          m[3] = initialM14;\r\n          m[4] = initialM21;\r\n          m[5] = initialM22;\r\n          m[6] = initialM23;\r\n          m[7] = initialM24;\r\n          m[8] = initialM31;\r\n          m[9] = initialM32;\r\n          m[10] = initialM33;\r\n          m[11] = initialM34;\r\n          m[12] = initialM41;\r\n          m[13] = initialM42;\r\n          m[14] = initialM43;\r\n          m[15] = initialM44;\r\n          result._markAsUpdated();\r\n          return result;\r\n      };\r\n      /**\r\n       * Creates a new matrix composed by merging scale (vector3), rotation (quaternion) and translation (vector3)\r\n       * @param scale - defines the scale vector3\r\n       * @param rotation - defines the rotation quaternion\r\n       * @param translation - defines the translation vector3\r\n       * @returns a new matrix\r\n       */\r\n      Matrix.Compose = function (scale, rotation, translation) {\r\n          var result = new Matrix();\r\n          Matrix.ComposeToRef(scale, rotation, translation, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Sets a matrix to a value composed by merging scale (vector3), rotation (quaternion) and translation (vector3)\r\n       * @param scale - defines the scale vector3\r\n       * @param rotation - defines the rotation quaternion\r\n       * @param translation - defines the translation vector3\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.ComposeToRef = function (scale, rotation, translation, result) {\r\n          Matrix.ScalingToRef(scale.x, scale.y, scale.z, MathTmp.Matrix[1]);\r\n          rotation.toRotationMatrix(MathTmp.Matrix[0]);\r\n          MathTmp.Matrix[1].multiplyToRef(MathTmp.Matrix[0], result);\r\n          result.setTranslation(translation);\r\n      };\r\n      /**\r\n       * Creates a new identity matrix\r\n       * @returns a new identity matrix\r\n       */\r\n      Matrix.Identity = function () {\r\n          var identity = Matrix.FromValues(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);\r\n          identity._updateIdentityStatus(true);\r\n          return identity;\r\n      };\r\n      /**\r\n       * Creates a new identity matrix and stores the result in a given matrix\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.IdentityToRef = function (result) {\r\n          Matrix.FromValuesToRef(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, result);\r\n          result._updateIdentityStatus(true);\r\n      };\r\n      /**\r\n       * Creates a new zero matrix\r\n       * @returns a new zero matrix\r\n       */\r\n      Matrix.Zero = function () {\r\n          var zero = Matrix.FromValues(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);\r\n          zero._updateIdentityStatus(false);\r\n          return zero;\r\n      };\r\n      /**\r\n       * Creates a new rotation matrix for \"angle\" radians around the X axis\r\n       * @param angle - defines the angle (in radians) to use\r\n       * @returns the new matrix\r\n       */\r\n      Matrix.RotationX = function (angle) {\r\n          var result = new Matrix();\r\n          Matrix.RotationXToRef(angle, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Creates a new matrix as the invert of a given matrix\r\n       * @param source - defines the source matrix\r\n       * @returns the new matrix\r\n       */\r\n      Matrix.Invert = function (source) {\r\n          var result = new Matrix();\r\n          source.invertToRef(result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Creates a new rotation matrix for \"angle\" radians around the X axis and stores it in a given matrix\r\n       * @param angle - defines the angle (in radians) to use\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.RotationXToRef = function (angle, result) {\r\n          var s = Math.sin(angle);\r\n          var c = Math.cos(angle);\r\n          Matrix.FromValuesToRef(1.0, 0.0, 0.0, 0.0, 0.0, c, s, 0.0, 0.0, -s, c, 0.0, 0.0, 0.0, 0.0, 1.0, result);\r\n          result._updateIdentityStatus(c === 1 && s === 0);\r\n      };\r\n      /**\r\n       * Creates a new rotation matrix for \"angle\" radians around the Y axis\r\n       * @param angle - defines the angle (in radians) to use\r\n       * @returns the new matrix\r\n       */\r\n      Matrix.RotationY = function (angle) {\r\n          var result = new Matrix();\r\n          Matrix.RotationYToRef(angle, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Creates a new rotation matrix for \"angle\" radians around the Y axis and stores it in a given matrix\r\n       * @param angle - defines the angle (in radians) to use\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.RotationYToRef = function (angle, result) {\r\n          var s = Math.sin(angle);\r\n          var c = Math.cos(angle);\r\n          Matrix.FromValuesToRef(c, 0.0, -s, 0.0, 0.0, 1.0, 0.0, 0.0, s, 0.0, c, 0.0, 0.0, 0.0, 0.0, 1.0, result);\r\n          result._updateIdentityStatus(c === 1 && s === 0);\r\n      };\r\n      /**\r\n       * Creates a new rotation matrix for \"angle\" radians around the Z axis\r\n       * @param angle - defines the angle (in radians) to use\r\n       * @returns the new matrix\r\n       */\r\n      Matrix.RotationZ = function (angle) {\r\n          var result = new Matrix();\r\n          Matrix.RotationZToRef(angle, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Creates a new rotation matrix for \"angle\" radians around the Z axis and stores it in a given matrix\r\n       * @param angle - defines the angle (in radians) to use\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.RotationZToRef = function (angle, result) {\r\n          var s = Math.sin(angle);\r\n          var c = Math.cos(angle);\r\n          Matrix.FromValuesToRef(c, s, 0.0, 0.0, -s, c, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, result);\r\n          result._updateIdentityStatus(c === 1 && s === 0);\r\n      };\r\n      /**\r\n       * Creates a new rotation matrix for \"angle\" radians around the given axis\r\n       * @param axis - defines the axis to use\r\n       * @param angle - defines the angle (in radians) to use\r\n       * @returns the new matrix\r\n       */\r\n      Matrix.RotationAxis = function (axis, angle) {\r\n          var result = new Matrix();\r\n          Matrix.RotationAxisToRef(axis, angle, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Creates a new rotation matrix for \"angle\" radians around the given axis and stores it in a given matrix\r\n       * @param axis - defines the axis to use\r\n       * @param angle - defines the angle (in radians) to use\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.RotationAxisToRef = function (axis, angle, result) {\r\n          var s = Math.sin(-angle);\r\n          var c = Math.cos(-angle);\r\n          var c1 = 1 - c;\r\n          axis.normalize();\r\n          var m = result._m;\r\n          m[0] = axis.x * axis.x * c1 + c;\r\n          m[1] = axis.x * axis.y * c1 - axis.z * s;\r\n          m[2] = axis.x * axis.z * c1 + axis.y * s;\r\n          m[3] = 0.0;\r\n          m[4] = axis.y * axis.x * c1 + axis.z * s;\r\n          m[5] = axis.y * axis.y * c1 + c;\r\n          m[6] = axis.y * axis.z * c1 - axis.x * s;\r\n          m[7] = 0.0;\r\n          m[8] = axis.z * axis.x * c1 - axis.y * s;\r\n          m[9] = axis.z * axis.y * c1 + axis.x * s;\r\n          m[10] = axis.z * axis.z * c1 + c;\r\n          m[11] = 0.0;\r\n          m[12] = 0.0;\r\n          m[13] = 0.0;\r\n          m[14] = 0.0;\r\n          m[15] = 1.0;\r\n          result._markAsUpdated();\r\n      };\r\n      /**\r\n       * Creates a rotation matrix\r\n       * @param yaw - defines the yaw angle in radians (Y axis)\r\n       * @param pitch - defines the pitch angle in radians (X axis)\r\n       * @param roll - defines the roll angle in radians (X axis)\r\n       * @returns the new rotation matrix\r\n       */\r\n      Matrix.RotationYawPitchRoll = function (yaw, pitch, roll) {\r\n          var result = new Matrix();\r\n          Matrix.RotationYawPitchRollToRef(yaw, pitch, roll, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Creates a rotation matrix and stores it in a given matrix\r\n       * @param yaw - defines the yaw angle in radians (Y axis)\r\n       * @param pitch - defines the pitch angle in radians (X axis)\r\n       * @param roll - defines the roll angle in radians (X axis)\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.RotationYawPitchRollToRef = function (yaw, pitch, roll, result) {\r\n          Quaternion.RotationYawPitchRollToRef(yaw, pitch, roll, MathTmp.Quaternion[0]);\r\n          MathTmp.Quaternion[0].toRotationMatrix(result);\r\n      };\r\n      /**\r\n       * Creates a scaling matrix\r\n       * @param x - defines the scale factor on X axis\r\n       * @param y - defines the scale factor on Y axis\r\n       * @param z - defines the scale factor on Z axis\r\n       * @returns the new matrix\r\n       */\r\n      Matrix.Scaling = function (x, y, z) {\r\n          var result = new Matrix();\r\n          Matrix.ScalingToRef(x, y, z, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Creates a scaling matrix and stores it in a given matrix\r\n       * @param x - defines the scale factor on X axis\r\n       * @param y - defines the scale factor on Y axis\r\n       * @param z - defines the scale factor on Z axis\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.ScalingToRef = function (x, y, z, result) {\r\n          Matrix.FromValuesToRef(x, 0.0, 0.0, 0.0, 0.0, y, 0.0, 0.0, 0.0, 0.0, z, 0.0, 0.0, 0.0, 0.0, 1.0, result);\r\n          result._updateIdentityStatus(x === 1 && y === 1 && z === 1);\r\n      };\r\n      /**\r\n       * Creates a translation matrix\r\n       * @param x - defines the translation on X axis\r\n       * @param y - defines the translation on Y axis\r\n       * @param z - defines the translationon Z axis\r\n       * @returns the new matrix\r\n       */\r\n      Matrix.Translation = function (x, y, z) {\r\n          var result = new Matrix();\r\n          Matrix.TranslationToRef(x, y, z, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Creates a translation matrix and stores it in a given matrix\r\n       * @param x - defines the translation on X axis\r\n       * @param y - defines the translation on Y axis\r\n       * @param z - defines the translationon Z axis\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.TranslationToRef = function (x, y, z, result) {\r\n          Matrix.FromValuesToRef(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, x, y, z, 1.0, result);\r\n          result._updateIdentityStatus(x === 0 && y === 0 && z === 0);\r\n      };\r\n      /**\r\n       * Returns a new Matrix whose values are the interpolated values for \"gradient\" (float) between the ones of the matrices \"startValue\" and \"endValue\".\r\n       * @param startValue - defines the start value\r\n       * @param endValue - defines the end value\r\n       * @param gradient - defines the gradient factor\r\n       * @returns the new matrix\r\n       */\r\n      Matrix.Lerp = function (startValue, endValue, gradient) {\r\n          var result = new Matrix();\r\n          Matrix.LerpToRef(startValue, endValue, gradient, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Set the given matrix \"result\" as the interpolated values for \"gradient\" (float) between the ones of the matrices \"startValue\" and \"endValue\".\r\n       * @param startValue - defines the start value\r\n       * @param endValue - defines the end value\r\n       * @param gradient - defines the gradient factor\r\n       * @param result - defines the Matrix object where to store data\r\n       */\r\n      Matrix.LerpToRef = function (startValue, endValue, gradient, result) {\r\n          for (var index = 0; index < 16; index++) {\r\n              result._m[index] = startValue._m[index] * (1.0 - gradient) + endValue._m[index] * gradient;\r\n          }\r\n          result._markAsUpdated();\r\n      };\r\n      /**\r\n       * Builds a new matrix whose values are computed by:\r\n       * * decomposing the the \"startValue\" and \"endValue\" matrices into their respective scale, rotation and translation matrices\r\n       * * interpolating for \"gradient\" (float) the values between each of these decomposed matrices between the start and the end\r\n       * * recomposing a new matrix from these 3 interpolated scale, rotation and translation matrices\r\n       * @param startValue - defines the first matrix\r\n       * @param endValue - defines the second matrix\r\n       * @param gradient - defines the gradient between the two matrices\r\n       * @returns the new matrix\r\n       */\r\n      Matrix.DecomposeLerp = function (startValue, endValue, gradient) {\r\n          var result = new Matrix();\r\n          Matrix.DecomposeLerpToRef(startValue, endValue, gradient, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Update a matrix to values which are computed by:\r\n       * * decomposing the the \"startValue\" and \"endValue\" matrices into their respective scale, rotation and translation matrices\r\n       * * interpolating for \"gradient\" (float) the values between each of these decomposed matrices between the start and the end\r\n       * * recomposing a new matrix from these 3 interpolated scale, rotation and translation matrices\r\n       * @param startValue - defines the first matrix\r\n       * @param endValue - defines the second matrix\r\n       * @param gradient - defines the gradient between the two matrices\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.DecomposeLerpToRef = function (startValue, endValue, gradient, result) {\r\n          var startScale = MathTmp.Vector3[0];\r\n          var startRotation = MathTmp.Quaternion[0];\r\n          var startTranslation = MathTmp.Vector3[1];\r\n          startValue.decompose(startScale, startRotation, startTranslation);\r\n          var endScale = MathTmp.Vector3[2];\r\n          var endRotation = MathTmp.Quaternion[1];\r\n          var endTranslation = MathTmp.Vector3[3];\r\n          endValue.decompose(endScale, endRotation, endTranslation);\r\n          var resultScale = MathTmp.Vector3[4];\r\n          Vector3.LerpToRef(startScale, endScale, gradient, resultScale);\r\n          var resultRotation = MathTmp.Quaternion[2];\r\n          Quaternion.SlerpToRef(startRotation, endRotation, gradient, resultRotation);\r\n          var resultTranslation = MathTmp.Vector3[5];\r\n          Vector3.LerpToRef(startTranslation, endTranslation, gradient, resultTranslation);\r\n          Matrix.ComposeToRef(resultScale, resultRotation, resultTranslation, result);\r\n      };\r\n      /**\r\n       * Gets a new rotation matrix used to rotate an entity so as it looks at the target vector3, from the eye vector3 position, the up vector3 being oriented like \"up\"\r\n       * This function works in left handed mode\r\n       * @param eye - defines the final position of the entity\r\n       * @param target - defines where the entity should look at\r\n       * @param up - defines the up vector for the entity\r\n       * @returns the new matrix\r\n       */\r\n      Matrix.LookAtLH = function (eye, target, up) {\r\n          var result = new Matrix();\r\n          Matrix.LookAtLHToRef(eye, target, up, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Sets the given \"result\" Matrix to a rotation matrix used to rotate an entity so that it looks at the target vector3, from the eye vector3 position, the up vector3 being oriented like \"up\".\r\n       * This function works in left handed mode\r\n       * @param eye - defines the final position of the entity\r\n       * @param target - defines where the entity should look at\r\n       * @param up - defines the up vector for the entity\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.LookAtLHToRef = function (eye, target, up, result) {\r\n          var xAxis = MathTmp.Vector3[0];\r\n          var yAxis = MathTmp.Vector3[1];\r\n          var zAxis = MathTmp.Vector3[2];\r\n          // Z axis\r\n          target.subtractToRef(eye, zAxis);\r\n          zAxis.normalize();\r\n          // X axis\r\n          Vector3.CrossToRef(up, zAxis, xAxis);\r\n          var xSquareLength = xAxis.lengthSquared();\r\n          if (xSquareLength === 0) {\r\n              xAxis.x = 1.0;\r\n          }\r\n          else {\r\n              xAxis.normalizeFromLength(Math.sqrt(xSquareLength));\r\n          }\r\n          // Y axis\r\n          Vector3.CrossToRef(zAxis, xAxis, yAxis);\r\n          yAxis.normalize();\r\n          // Eye angles\r\n          var ex = -Vector3.Dot(xAxis, eye);\r\n          var ey = -Vector3.Dot(yAxis, eye);\r\n          var ez = -Vector3.Dot(zAxis, eye);\r\n          Matrix.FromValuesToRef(xAxis.x, yAxis.x, zAxis.x, 0.0, xAxis.y, yAxis.y, zAxis.y, 0.0, xAxis.z, yAxis.z, zAxis.z, 0.0, ex, ey, ez, 1.0, result);\r\n      };\r\n      /**\r\n       * Gets a new rotation matrix used to rotate an entity so as it looks at the target vector3, from the eye vector3 position, the up vector3 being oriented like \"up\"\r\n       * This function works in right handed mode\r\n       * @param eye - defines the final position of the entity\r\n       * @param target - defines where the entity should look at\r\n       * @param up - defines the up vector for the entity\r\n       * @returns the new matrix\r\n       */\r\n      Matrix.LookAtRH = function (eye, target, up) {\r\n          var result = new Matrix();\r\n          Matrix.LookAtRHToRef(eye, target, up, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Sets the given \"result\" Matrix to a rotation matrix used to rotate an entity so that it looks at the target vector3, from the eye vector3 position, the up vector3 being oriented like \"up\".\r\n       * This function works in right handed mode\r\n       * @param eye - defines the final position of the entity\r\n       * @param target - defines where the entity should look at\r\n       * @param up - defines the up vector for the entity\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.LookAtRHToRef = function (eye, target, up, result) {\r\n          var xAxis = MathTmp.Vector3[0];\r\n          var yAxis = MathTmp.Vector3[1];\r\n          var zAxis = MathTmp.Vector3[2];\r\n          // Z axis\r\n          eye.subtractToRef(target, zAxis);\r\n          zAxis.normalize();\r\n          // X axis\r\n          Vector3.CrossToRef(up, zAxis, xAxis);\r\n          var xSquareLength = xAxis.lengthSquared();\r\n          if (xSquareLength === 0) {\r\n              xAxis.x = 1.0;\r\n          }\r\n          else {\r\n              xAxis.normalizeFromLength(Math.sqrt(xSquareLength));\r\n          }\r\n          // Y axis\r\n          Vector3.CrossToRef(zAxis, xAxis, yAxis);\r\n          yAxis.normalize();\r\n          // Eye angles\r\n          var ex = -Vector3.Dot(xAxis, eye);\r\n          var ey = -Vector3.Dot(yAxis, eye);\r\n          var ez = -Vector3.Dot(zAxis, eye);\r\n          Matrix.FromValuesToRef(xAxis.x, yAxis.x, zAxis.x, 0.0, xAxis.y, yAxis.y, zAxis.y, 0.0, xAxis.z, yAxis.z, zAxis.z, 0.0, ex, ey, ez, 1.0, result);\r\n      };\r\n      /**\r\n       * Create a left-handed orthographic projection matrix\r\n       * @param width - defines the viewport width\r\n       * @param height - defines the viewport height\r\n       * @param znear - defines the near clip plane\r\n       * @param zfar - defines the far clip plane\r\n       * @returns a new matrix as a left-handed orthographic projection matrix\r\n       */\r\n      Matrix.OrthoLH = function (width, height, znear, zfar) {\r\n          var matrix = new Matrix();\r\n          Matrix.OrthoLHToRef(width, height, znear, zfar, matrix);\r\n          return matrix;\r\n      };\r\n      /**\r\n       * Store a left-handed orthographic projection to a given matrix\r\n       * @param width - defines the viewport width\r\n       * @param height - defines the viewport height\r\n       * @param znear - defines the near clip plane\r\n       * @param zfar - defines the far clip plane\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.OrthoLHToRef = function (width, height, znear, zfar, result) {\r\n          var n = znear;\r\n          var f = zfar;\r\n          var a = 2.0 / width;\r\n          var b = 2.0 / height;\r\n          var c = 2.0 / (f - n);\r\n          var d = -(f + n) / (f - n);\r\n          Matrix.FromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, c, 0.0, 0.0, 0.0, d, 1.0, result);\r\n          result._updateIdentityStatus(a === 1 && b === 1 && c === 1 && d === 0);\r\n      };\r\n      /**\r\n       * Create a left-handed orthographic projection matrix\r\n       * @param left - defines the viewport left coordinate\r\n       * @param right - defines the viewport right coordinate\r\n       * @param bottom - defines the viewport bottom coordinate\r\n       * @param top - defines the viewport top coordinate\r\n       * @param znear - defines the near clip plane\r\n       * @param zfar - defines the far clip plane\r\n       * @returns a new matrix as a left-handed orthographic projection matrix\r\n       */\r\n      Matrix.OrthoOffCenterLH = function (left, right, bottom, top, znear, zfar) {\r\n          var matrix = new Matrix();\r\n          Matrix.OrthoOffCenterLHToRef(left, right, bottom, top, znear, zfar, matrix);\r\n          return matrix;\r\n      };\r\n      /**\r\n       * Stores a left-handed orthographic projection into a given matrix\r\n       * @param left - defines the viewport left coordinate\r\n       * @param right - defines the viewport right coordinate\r\n       * @param bottom - defines the viewport bottom coordinate\r\n       * @param top - defines the viewport top coordinate\r\n       * @param znear - defines the near clip plane\r\n       * @param zfar - defines the far clip plane\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.OrthoOffCenterLHToRef = function (left, right, bottom, top, znear, zfar, result) {\r\n          var n = znear;\r\n          var f = zfar;\r\n          var a = 2.0 / (right - left);\r\n          var b = 2.0 / (top - bottom);\r\n          var c = 2.0 / (f - n);\r\n          var d = -(f + n) / (f - n);\r\n          var i0 = (left + right) / (left - right);\r\n          var i1 = (top + bottom) / (bottom - top);\r\n          Matrix.FromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, c, 0.0, i0, i1, d, 1.0, result);\r\n          result._markAsUpdated();\r\n      };\r\n      /**\r\n       * Creates a right-handed orthographic projection matrix\r\n       * @param left - defines the viewport left coordinate\r\n       * @param right - defines the viewport right coordinate\r\n       * @param bottom - defines the viewport bottom coordinate\r\n       * @param top - defines the viewport top coordinate\r\n       * @param znear - defines the near clip plane\r\n       * @param zfar - defines the far clip plane\r\n       * @returns a new matrix as a right-handed orthographic projection matrix\r\n       */\r\n      Matrix.OrthoOffCenterRH = function (left, right, bottom, top, znear, zfar) {\r\n          var matrix = new Matrix();\r\n          Matrix.OrthoOffCenterRHToRef(left, right, bottom, top, znear, zfar, matrix);\r\n          return matrix;\r\n      };\r\n      /**\r\n       * Stores a right-handed orthographic projection into a given matrix\r\n       * @param left - defines the viewport left coordinate\r\n       * @param right - defines the viewport right coordinate\r\n       * @param bottom - defines the viewport bottom coordinate\r\n       * @param top - defines the viewport top coordinate\r\n       * @param znear - defines the near clip plane\r\n       * @param zfar - defines the far clip plane\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.OrthoOffCenterRHToRef = function (left, right, bottom, top, znear, zfar, result) {\r\n          Matrix.OrthoOffCenterLHToRef(left, right, bottom, top, znear, zfar, result);\r\n          result._m[10] *= -1; // No need to call _markAsUpdated as previous function already called it and let _isIdentityDirty to true\r\n      };\r\n      /**\r\n       * Creates a left-handed perspective projection matrix\r\n       * @param width - defines the viewport width\r\n       * @param height - defines the viewport height\r\n       * @param znear - defines the near clip plane\r\n       * @param zfar - defines the far clip plane\r\n       * @returns a new matrix as a left-handed perspective projection matrix\r\n       */\r\n      Matrix.PerspectiveLH = function (width, height, znear, zfar) {\r\n          var matrix = new Matrix();\r\n          var n = znear;\r\n          var f = zfar;\r\n          var a = (2.0 * n) / width;\r\n          var b = (2.0 * n) / height;\r\n          var c = (f + n) / (f - n);\r\n          var d = (-2.0 * f * n) / (f - n);\r\n          Matrix.FromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, c, 1.0, 0.0, 0.0, d, 0.0, matrix);\r\n          matrix._updateIdentityStatus(false);\r\n          return matrix;\r\n      };\r\n      /**\r\n       * Creates a left-handed perspective projection matrix\r\n       * @param fov - defines the horizontal field of view\r\n       * @param aspect - defines the aspect ratio\r\n       * @param znear - defines the near clip plane\r\n       * @param zfar - defines the far clip plane\r\n       * @returns a new matrix as a left-handed perspective projection matrix\r\n       */\r\n      Matrix.PerspectiveFovLH = function (fov, aspect, znear, zfar) {\r\n          var matrix = new Matrix();\r\n          Matrix.PerspectiveFovLHToRef(fov, aspect, znear, zfar, matrix);\r\n          return matrix;\r\n      };\r\n      /**\r\n       * Stores a left-handed perspective projection into a given matrix\r\n       * @param fov - defines the horizontal field of view\r\n       * @param aspect - defines the aspect ratio\r\n       * @param znear - defines the near clip plane\r\n       * @param zfar - defines the far clip plane\r\n       * @param result - defines the target matrix\r\n       * @param isVerticalFovFixed - defines it the fov is vertically fixed (default) or horizontally\r\n       */\r\n      Matrix.PerspectiveFovLHToRef = function (fov, aspect, znear, zfar, result, isVerticalFovFixed) {\r\n          if (isVerticalFovFixed === void 0) { isVerticalFovFixed = true; }\r\n          var n = znear;\r\n          var f = zfar;\r\n          var t = 1.0 / Math.tan(fov * 0.5);\r\n          var a = isVerticalFovFixed ? t / aspect : t;\r\n          var b = isVerticalFovFixed ? t : t * aspect;\r\n          var c = (f + n) / (f - n);\r\n          var d = (-2.0 * f * n) / (f - n);\r\n          Matrix.FromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, c, 1.0, 0.0, 0.0, d, 0.0, result);\r\n          result._updateIdentityStatus(false);\r\n      };\r\n      /**\r\n       * Creates a right-handed perspective projection matrix\r\n       * @param fov - defines the horizontal field of view\r\n       * @param aspect - defines the aspect ratio\r\n       * @param znear - defines the near clip plane\r\n       * @param zfar - defines the far clip plane\r\n       * @returns a new matrix as a right-handed perspective projection matrix\r\n       */\r\n      Matrix.PerspectiveFovRH = function (fov, aspect, znear, zfar) {\r\n          var matrix = new Matrix();\r\n          Matrix.PerspectiveFovRHToRef(fov, aspect, znear, zfar, matrix);\r\n          return matrix;\r\n      };\r\n      /**\r\n       * Stores a right-handed perspective projection into a given matrix\r\n       * @param fov - defines the horizontal field of view\r\n       * @param aspect - defines the aspect ratio\r\n       * @param znear - defines the near clip plane\r\n       * @param zfar - defines the far clip plane\r\n       * @param result - defines the target matrix\r\n       * @param isVerticalFovFixed - defines it the fov is vertically fixed (default) or horizontally\r\n       */\r\n      Matrix.PerspectiveFovRHToRef = function (fov, aspect, znear, zfar, result, isVerticalFovFixed) {\r\n          /* alternatively this could be expressed as:\r\n          //    m = PerspectiveFovLHToRef\r\n          //    m[10] *= -1.0;\r\n          //    m[11] *= -1.0;\r\n          */\r\n          if (isVerticalFovFixed === void 0) { isVerticalFovFixed = true; }\r\n          var n = znear;\r\n          var f = zfar;\r\n          var t = 1.0 / Math.tan(fov * 0.5);\r\n          var a = isVerticalFovFixed ? t / aspect : t;\r\n          var b = isVerticalFovFixed ? t : t * aspect;\r\n          var c = -(f + n) / (f - n);\r\n          var d = (-2 * f * n) / (f - n);\r\n          Matrix.FromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, c, -1.0, 0.0, 0.0, d, 0.0, result);\r\n          result._updateIdentityStatus(false);\r\n      };\r\n      /**\r\n       * Stores a perspective projection for WebVR info a given matrix\r\n       * @param fov - defines the field of view\r\n       * @param znear - defines the near clip plane\r\n       * @param zfar - defines the far clip plane\r\n       * @param result - defines the target matrix\r\n       * @param rightHanded - defines if the matrix must be in right-handed mode (false by default)\r\n       */\r\n      Matrix.PerspectiveFovWebVRToRef = function (fov, znear, zfar, result, rightHanded) {\r\n          if (rightHanded === void 0) { rightHanded = false; }\r\n          var rightHandedFactor = rightHanded ? -1 : 1;\r\n          var upTan = Math.tan((fov.upDegrees * Math.PI) / 180.0);\r\n          var downTan = Math.tan((fov.downDegrees * Math.PI) / 180.0);\r\n          var leftTan = Math.tan((fov.leftDegrees * Math.PI) / 180.0);\r\n          var rightTan = Math.tan((fov.rightDegrees * Math.PI) / 180.0);\r\n          var xScale = 2.0 / (leftTan + rightTan);\r\n          var yScale = 2.0 / (upTan + downTan);\r\n          var m = result._m;\r\n          m[0] = xScale;\r\n          m[1] = m[2] = m[3] = m[4] = 0.0;\r\n          m[5] = yScale;\r\n          m[6] = m[7] = 0.0;\r\n          m[8] = (leftTan - rightTan) * xScale * 0.5;\r\n          m[9] = -((upTan - downTan) * yScale * 0.5);\r\n          m[10] = -zfar / (znear - zfar);\r\n          m[11] = 1.0 * rightHandedFactor;\r\n          m[12] = m[13] = m[15] = 0.0;\r\n          m[14] = -(2.0 * zfar * znear) / (zfar - znear);\r\n          result._markAsUpdated();\r\n      };\r\n      /**\r\n       * Extracts a 2x2 matrix from a given matrix and store the result in a FloatArray\r\n       * @param matrix - defines the matrix to use\r\n       * @returns a new FloatArray array with 4 elements : the 2x2 matrix extracted from the given matrix\r\n       */\r\n      Matrix.GetAsMatrix2x2 = function (matrix) {\r\n          return [matrix._m[0], matrix._m[1], matrix._m[4], matrix._m[5]];\r\n      };\r\n      /**\r\n       * Extracts a 3x3 matrix from a given matrix and store the result in a FloatArray\r\n       * @param matrix - defines the matrix to use\r\n       * @returns a new FloatArray array with 9 elements : the 3x3 matrix extracted from the given matrix\r\n       */\r\n      Matrix.GetAsMatrix3x3 = function (matrix) {\r\n          return [\r\n              matrix._m[0],\r\n              matrix._m[1],\r\n              matrix._m[2],\r\n              matrix._m[4],\r\n              matrix._m[5],\r\n              matrix._m[6],\r\n              matrix._m[8],\r\n              matrix._m[9],\r\n              matrix._m[10]\r\n          ];\r\n      };\r\n      /**\r\n       * Compute the transpose of a given matrix\r\n       * @param matrix - defines the matrix to transpose\r\n       * @returns the new matrix\r\n       */\r\n      Matrix.Transpose = function (matrix) {\r\n          var result = new Matrix();\r\n          Matrix.TransposeToRef(matrix, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Compute the transpose of a matrix and store it in a target matrix\r\n       * @param matrix - defines the matrix to transpose\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.TransposeToRef = function (matrix, result) {\r\n          var rm = result._m;\r\n          var mm = matrix._m;\r\n          rm[0] = mm[0];\r\n          rm[1] = mm[4];\r\n          rm[2] = mm[8];\r\n          rm[3] = mm[12];\r\n          rm[4] = mm[1];\r\n          rm[5] = mm[5];\r\n          rm[6] = mm[9];\r\n          rm[7] = mm[13];\r\n          rm[8] = mm[2];\r\n          rm[9] = mm[6];\r\n          rm[10] = mm[10];\r\n          rm[11] = mm[14];\r\n          rm[12] = mm[3];\r\n          rm[13] = mm[7];\r\n          rm[14] = mm[11];\r\n          rm[15] = mm[15];\r\n          // identity-ness does not change when transposing\r\n          result._updateIdentityStatus(matrix._isIdentity, matrix._isIdentityDirty);\r\n      };\r\n      /**\r\n       * Computes a reflection matrix from a plane\r\n       * @param plane - defines the reflection plane\r\n       * @returns a new matrix\r\n       */\r\n      Matrix.Reflection = function (plane) {\r\n          var matrix = new Matrix();\r\n          Matrix.ReflectionToRef(plane, matrix);\r\n          return matrix;\r\n      };\r\n      /**\r\n       * Computes a reflection matrix from a plane\r\n       * @param plane - defines the reflection plane\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.ReflectionToRef = function (plane, result) {\r\n          plane.normalize();\r\n          var x = plane.normal.x;\r\n          var y = plane.normal.y;\r\n          var z = plane.normal.z;\r\n          var temp = -2 * x;\r\n          var temp2 = -2 * y;\r\n          var temp3 = -2 * z;\r\n          Matrix.FromValuesToRef(temp * x + 1, temp2 * x, temp3 * x, 0.0, temp * y, temp2 * y + 1, temp3 * y, 0.0, temp * z, temp2 * z, temp3 * z + 1, 0.0, temp * plane.d, temp2 * plane.d, temp3 * plane.d, 1.0, result);\r\n      };\r\n      /**\r\n       * Sets the given matrix as a rotation matrix composed from the 3 left handed axes\r\n       * @param xaxis - defines the value of the 1st axis\r\n       * @param yaxis - defines the value of the 2nd axis\r\n       * @param zaxis - defines the value of the 3rd axis\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.FromXYZAxesToRef = function (xaxis, yaxis, zaxis, result) {\r\n          Matrix.FromValuesToRef(xaxis.x, xaxis.y, xaxis.z, 0.0, yaxis.x, yaxis.y, yaxis.z, 0.0, zaxis.x, zaxis.y, zaxis.z, 0.0, 0.0, 0.0, 0.0, 1.0, result);\r\n      };\r\n      /**\r\n       * Creates a rotation matrix from a quaternion and stores it in a target matrix\r\n       * @param quat - defines the quaternion to use\r\n       * @param result - defines the target matrix\r\n       */\r\n      Matrix.FromQuaternionToRef = function (quat, result) {\r\n          var xx = quat.x * quat.x;\r\n          var yy = quat.y * quat.y;\r\n          var zz = quat.z * quat.z;\r\n          var xy = quat.x * quat.y;\r\n          var zw = quat.z * quat.w;\r\n          var zx = quat.z * quat.x;\r\n          var yw = quat.y * quat.w;\r\n          var yz = quat.y * quat.z;\r\n          var xw = quat.x * quat.w;\r\n          result._m[0] = 1.0 - 2.0 * (yy + zz);\r\n          result._m[1] = 2.0 * (xy + zw);\r\n          result._m[2] = 2.0 * (zx - yw);\r\n          result._m[3] = 0.0;\r\n          result._m[4] = 2.0 * (xy - zw);\r\n          result._m[5] = 1.0 - 2.0 * (zz + xx);\r\n          result._m[6] = 2.0 * (yz + xw);\r\n          result._m[7] = 0.0;\r\n          result._m[8] = 2.0 * (zx + yw);\r\n          result._m[9] = 2.0 * (yz - xw);\r\n          result._m[10] = 1.0 - 2.0 * (yy + xx);\r\n          result._m[11] = 0.0;\r\n          result._m[12] = 0.0;\r\n          result._m[13] = 0.0;\r\n          result._m[14] = 0.0;\r\n          result._m[15] = 1.0;\r\n          result._markAsUpdated();\r\n      };\r\n      /** @internal */\r\n      Matrix.prototype._markAsUpdated = function () {\r\n          this.updateFlag = Matrix._updateFlagSeed++;\r\n          this._isIdentity = false;\r\n          this._isIdentity3x2 = false;\r\n          this._isIdentityDirty = true;\r\n          this._isIdentity3x2Dirty = true;\r\n      };\r\n      // Properties\r\n      /**\r\n       * Check if the current matrix is identity\r\n       * @returns true is the matrix is the identity matrix\r\n       */\r\n      Matrix.prototype.isIdentity = function () {\r\n          if (this._isIdentityDirty) {\r\n              this._isIdentityDirty = false;\r\n              var m = this._m;\r\n              this._isIdentity =\r\n                  m[0] === 1.0 &&\r\n                      m[1] === 0.0 &&\r\n                      m[2] === 0.0 &&\r\n                      m[3] === 0.0 &&\r\n                      m[4] === 0.0 &&\r\n                      m[5] === 1.0 &&\r\n                      m[6] === 0.0 &&\r\n                      m[7] === 0.0 &&\r\n                      m[8] === 0.0 &&\r\n                      m[9] === 0.0 &&\r\n                      m[10] === 1.0 &&\r\n                      m[11] === 0.0 &&\r\n                      m[12] === 0.0 &&\r\n                      m[13] === 0.0 &&\r\n                      m[14] === 0.0 &&\r\n                      m[15] === 1.0;\r\n          }\r\n          return this._isIdentity;\r\n      };\r\n      /**\r\n       * Check if the current matrix is identity as a texture matrix (3x2 store in 4x4)\r\n       * @returns true is the matrix is the identity matrix\r\n       */\r\n      Matrix.prototype.isIdentityAs3x2 = function () {\r\n          if (this._isIdentity3x2Dirty) {\r\n              this._isIdentity3x2Dirty = false;\r\n              if (this._m[0] !== 1.0 || this._m[5] !== 1.0 || this._m[15] !== 1.0) {\r\n                  this._isIdentity3x2 = false;\r\n              }\r\n              else if (this._m[1] !== 0.0 ||\r\n                  this._m[2] !== 0.0 ||\r\n                  this._m[3] !== 0.0 ||\r\n                  this._m[4] !== 0.0 ||\r\n                  this._m[6] !== 0.0 ||\r\n                  this._m[7] !== 0.0 ||\r\n                  this._m[8] !== 0.0 ||\r\n                  this._m[9] !== 0.0 ||\r\n                  this._m[10] !== 0.0 ||\r\n                  this._m[11] !== 0.0 ||\r\n                  this._m[12] !== 0.0 ||\r\n                  this._m[13] !== 0.0 ||\r\n                  this._m[14] !== 0.0) {\r\n                  this._isIdentity3x2 = false;\r\n              }\r\n              else {\r\n                  this._isIdentity3x2 = true;\r\n              }\r\n          }\r\n          return this._isIdentity3x2;\r\n      };\r\n      /**\r\n       * Gets the determinant of the matrix\r\n       * @returns the matrix determinant\r\n       */\r\n      Matrix.prototype.determinant = function () {\r\n          if (this._isIdentity === true) {\r\n              return 1;\r\n          }\r\n          var m = this._m;\r\n          // tslint:disable-next-line:one-variable-per-declaration\r\n          var m00 = m[0], m01 = m[1], m02 = m[2], m03 = m[3];\r\n          // tslint:disable-next-line:one-variable-per-declaration\r\n          var m10 = m[4], m11 = m[5], m12 = m[6], m13 = m[7];\r\n          // tslint:disable-next-line:one-variable-per-declaration\r\n          var m20 = m[8], m21 = m[9], m22 = m[10], m23 = m[11];\r\n          // tslint:disable-next-line:one-variable-per-declaration\r\n          var m30 = m[12], m31 = m[13], m32 = m[14], m33 = m[15];\r\n          /*\r\n          // https://en.wikipedia.org/wiki/Laplace_expansion\r\n          // to compute the deterrminant of a 4x4 Matrix we compute the cofactors of any row or column,\r\n          // then we multiply each Cofactor by its corresponding matrix value and sum them all to get the determinant\r\n          // Cofactor(i, j) = sign(i,j) * det(Minor(i, j))\r\n          // where\r\n          //  - sign(i,j) = (i+j) % 2 === 0 ? 1 : -1\r\n          //  - Minor(i, j) is the 3x3 matrix we get by removing row i and column j from current Matrix\r\n          //\r\n          // Here we do that for the 1st row.\r\n          */\r\n          // tslint:disable:variable-name\r\n          var det_22_33 = m22 * m33 - m32 * m23;\r\n          var det_21_33 = m21 * m33 - m31 * m23;\r\n          var det_21_32 = m21 * m32 - m31 * m22;\r\n          var det_20_33 = m20 * m33 - m30 * m23;\r\n          var det_20_32 = m20 * m32 - m22 * m30;\r\n          var det_20_31 = m20 * m31 - m30 * m21;\r\n          var cofact_00 = +(m11 * det_22_33 - m12 * det_21_33 + m13 * det_21_32);\r\n          var cofact_01 = -(m10 * det_22_33 - m12 * det_20_33 + m13 * det_20_32);\r\n          var cofact_02 = +(m10 * det_21_33 - m11 * det_20_33 + m13 * det_20_31);\r\n          var cofact_03 = -(m10 * det_21_32 - m11 * det_20_32 + m12 * det_20_31);\r\n          // tslint:enable:variable-name\r\n          return m00 * cofact_00 + m01 * cofact_01 + m02 * cofact_02 + m03 * cofact_03;\r\n      };\r\n      // Methods\r\n      /**\r\n       * Returns the matrix as a FloatArray\r\n       * @returns the matrix underlying array\r\n       */\r\n      Matrix.prototype.toArray = function () {\r\n          return this._m;\r\n      };\r\n      /**\r\n       * Returns the matrix as a FloatArray\r\n       * @returns the matrix underlying array.\r\n       */\r\n      Matrix.prototype.asArray = function () {\r\n          return this._m;\r\n      };\r\n      /**\r\n       * Inverts the current matrix in place\r\n       * @returns the current inverted matrix\r\n       */\r\n      Matrix.prototype.invert = function () {\r\n          this.invertToRef(this);\r\n          return this;\r\n      };\r\n      /**\r\n       * Sets all the matrix elements to zero\r\n       * @returns the current matrix\r\n       */\r\n      Matrix.prototype.reset = function () {\r\n          Matrix.FromValuesToRef(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, this);\r\n          this._updateIdentityStatus(false);\r\n          return this;\r\n      };\r\n      /**\r\n       * Adds the current matrix with a second one\r\n       * @param other - defines the matrix to add\r\n       * @returns a new matrix as the addition of the current matrix and the given one\r\n       */\r\n      Matrix.prototype.add = function (other) {\r\n          var result = new Matrix();\r\n          this.addToRef(other, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Sets the given matrix \"result\" to the addition of the current matrix and the given one\r\n       * @param other - defines the matrix to add\r\n       * @param result - defines the target matrix\r\n       * @returns the current matrix\r\n       */\r\n      Matrix.prototype.addToRef = function (other, result) {\r\n          for (var index = 0; index < 16; index++) {\r\n              result._m[index] = this._m[index] + other._m[index];\r\n          }\r\n          result._markAsUpdated();\r\n          return this;\r\n      };\r\n      /**\r\n       * Adds in place the given matrix to the current matrix\r\n       * @param other - defines the second operand\r\n       * @returns the current updated matrix\r\n       */\r\n      Matrix.prototype.addToSelf = function (other) {\r\n          for (var index = 0; index < 16; index++) {\r\n              this._m[index] += other._m[index];\r\n          }\r\n          this._markAsUpdated();\r\n          return this;\r\n      };\r\n      /**\r\n       * Sets the given matrix to the current inverted Matrix\r\n       * @param other - defines the target matrix\r\n       * @returns the unmodified current matrix\r\n       */\r\n      Matrix.prototype.invertToRef = function (other) {\r\n          if (this._isIdentity === true) {\r\n              Matrix.IdentityToRef(other);\r\n              return this;\r\n          }\r\n          // the inverse of a Matrix is the transpose of cofactor matrix divided by the determinant\r\n          var m = this._m;\r\n          // tslint:disable:one-variable-per-declaration\r\n          var m00 = m[0], m01 = m[1], m02 = m[2], m03 = m[3];\r\n          var m10 = m[4], m11 = m[5], m12 = m[6], m13 = m[7];\r\n          var m20 = m[8], m21 = m[9], m22 = m[10], m23 = m[11];\r\n          var m30 = m[12], m31 = m[13], m32 = m[14], m33 = m[15];\r\n          // tslint:enable:one-variable-per-declaration\r\n          // tslint:disable:variable-name\r\n          var det_22_33 = m22 * m33 - m32 * m23;\r\n          var det_21_33 = m21 * m33 - m31 * m23;\r\n          var det_21_32 = m21 * m32 - m31 * m22;\r\n          var det_20_33 = m20 * m33 - m30 * m23;\r\n          var det_20_32 = m20 * m32 - m22 * m30;\r\n          var det_20_31 = m20 * m31 - m30 * m21;\r\n          var cofact_00 = +(m11 * det_22_33 - m12 * det_21_33 + m13 * det_21_32);\r\n          var cofact_01 = -(m10 * det_22_33 - m12 * det_20_33 + m13 * det_20_32);\r\n          var cofact_02 = +(m10 * det_21_33 - m11 * det_20_33 + m13 * det_20_31);\r\n          var cofact_03 = -(m10 * det_21_32 - m11 * det_20_32 + m12 * det_20_31);\r\n          var det = m00 * cofact_00 + m01 * cofact_01 + m02 * cofact_02 + m03 * cofact_03;\r\n          if (det === 0) {\r\n              // not invertible\r\n              other.copyFrom(this);\r\n              return this;\r\n          }\r\n          var detInv = 1 / det;\r\n          var det_12_33 = m12 * m33 - m32 * m13;\r\n          var det_11_33 = m11 * m33 - m31 * m13;\r\n          var det_11_32 = m11 * m32 - m31 * m12;\r\n          var det_10_33 = m10 * m33 - m30 * m13;\r\n          var det_10_32 = m10 * m32 - m30 * m12;\r\n          var det_10_31 = m10 * m31 - m30 * m11;\r\n          var det_12_23 = m12 * m23 - m22 * m13;\r\n          var det_11_23 = m11 * m23 - m21 * m13;\r\n          var det_11_22 = m11 * m22 - m21 * m12;\r\n          var det_10_23 = m10 * m23 - m20 * m13;\r\n          var det_10_22 = m10 * m22 - m20 * m12;\r\n          var det_10_21 = m10 * m21 - m20 * m11;\r\n          var cofact_10 = -(m01 * det_22_33 - m02 * det_21_33 + m03 * det_21_32);\r\n          var cofact_11 = +(m00 * det_22_33 - m02 * det_20_33 + m03 * det_20_32);\r\n          var cofact_12 = -(m00 * det_21_33 - m01 * det_20_33 + m03 * det_20_31);\r\n          var cofact_13 = +(m00 * det_21_32 - m01 * det_20_32 + m02 * det_20_31);\r\n          var cofact_20 = +(m01 * det_12_33 - m02 * det_11_33 + m03 * det_11_32);\r\n          var cofact_21 = -(m00 * det_12_33 - m02 * det_10_33 + m03 * det_10_32);\r\n          var cofact_22 = +(m00 * det_11_33 - m01 * det_10_33 + m03 * det_10_31);\r\n          var cofact_23 = -(m00 * det_11_32 - m01 * det_10_32 + m02 * det_10_31);\r\n          var cofact_30 = -(m01 * det_12_23 - m02 * det_11_23 + m03 * det_11_22);\r\n          var cofact_31 = +(m00 * det_12_23 - m02 * det_10_23 + m03 * det_10_22);\r\n          var cofact_32 = -(m00 * det_11_23 - m01 * det_10_23 + m03 * det_10_21);\r\n          var cofact_33 = +(m00 * det_11_22 - m01 * det_10_22 + m02 * det_10_21);\r\n          Matrix.FromValuesToRef(cofact_00 * detInv, cofact_10 * detInv, cofact_20 * detInv, cofact_30 * detInv, cofact_01 * detInv, cofact_11 * detInv, cofact_21 * detInv, cofact_31 * detInv, cofact_02 * detInv, cofact_12 * detInv, cofact_22 * detInv, cofact_32 * detInv, cofact_03 * detInv, cofact_13 * detInv, cofact_23 * detInv, cofact_33 * detInv, other);\r\n          // tslint:enable:variable-name\r\n          return this;\r\n      };\r\n      /**\r\n       * add a value at the specified position in the current Matrix\r\n       * @param index - the index of the value within the matrix. between 0 and 15.\r\n       * @param value - the value to be added\r\n       * @returns the current updated matrix\r\n       */\r\n      Matrix.prototype.addAtIndex = function (index, value) {\r\n          this._m[index] += value;\r\n          this._markAsUpdated();\r\n          return this;\r\n      };\r\n      /**\r\n       * mutiply the specified position in the current Matrix by a value\r\n       * @param index - the index of the value within the matrix. between 0 and 15.\r\n       * @param value - the value to be added\r\n       * @returns the current updated matrix\r\n       */\r\n      Matrix.prototype.multiplyAtIndex = function (index, value) {\r\n          this._m[index] *= value;\r\n          this._markAsUpdated();\r\n          return this;\r\n      };\r\n      /**\r\n       * Inserts the translation vector (using 3 floats) in the current matrix\r\n       * @param x - defines the 1st component of the translation\r\n       * @param y - defines the 2nd component of the translation\r\n       * @param z - defines the 3rd component of the translation\r\n       * @returns the current updated matrix\r\n       */\r\n      Matrix.prototype.setTranslationFromFloats = function (x, y, z) {\r\n          this._m[12] = x;\r\n          this._m[13] = y;\r\n          this._m[14] = z;\r\n          this._markAsUpdated();\r\n          return this;\r\n      };\r\n      /**\r\n       * Inserts the translation vector in the current matrix\r\n       * @param vector3 - defines the translation to insert\r\n       * @returns the current updated matrix\r\n       */\r\n      Matrix.prototype.setTranslation = function (vector3) {\r\n          return this.setTranslationFromFloats(vector3.x, vector3.y, vector3.z);\r\n      };\r\n      /**\r\n       * Gets the translation value of the current matrix\r\n       * @returns a new Vector3 as the extracted translation from the matrix\r\n       */\r\n      Matrix.prototype.getTranslation = function () {\r\n          return new Vector3(this._m[12], this._m[13], this._m[14]);\r\n      };\r\n      /**\r\n       * Fill a Vector3 with the extracted translation from the matrix\r\n       * @param result - defines the Vector3 where to store the translation\r\n       * @returns the current matrix\r\n       */\r\n      Matrix.prototype.getTranslationToRef = function (result) {\r\n          result.x = this._m[12];\r\n          result.y = this._m[13];\r\n          result.z = this._m[14];\r\n          return this;\r\n      };\r\n      /**\r\n       * Remove rotation and scaling part from the matrix\r\n       * @returns the updated matrix\r\n       */\r\n      Matrix.prototype.removeRotationAndScaling = function () {\r\n          var m = this.m;\r\n          Matrix.FromValuesToRef(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, m[12], m[13], m[14], m[15], this);\r\n          this._updateIdentityStatus(m[12] === 0 && m[13] === 0 && m[14] === 0 && m[15] === 1);\r\n          return this;\r\n      };\r\n      /**\r\n       * Multiply two matrices\r\n       * @param other - defines the second operand\r\n       * @returns a new matrix set with the multiplication result of the current Matrix and the given one\r\n       */\r\n      Matrix.prototype.multiply = function (other) {\r\n          var result = new Matrix();\r\n          this.multiplyToRef(other, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Copy the current matrix from the given one\r\n       * @param other - defines the source matrix\r\n       * @returns the current updated matrix\r\n       */\r\n      Matrix.prototype.copyFrom = function (other) {\r\n          other.copyToArray(this._m);\r\n          var o = other;\r\n          this._updateIdentityStatus(o._isIdentity, o._isIdentityDirty, o._isIdentity3x2, o._isIdentity3x2Dirty);\r\n          return this;\r\n      };\r\n      /**\r\n       * Populates the given array from the starting index with the current matrix values\r\n       * @param array - defines the target array\r\n       * @param offset - defines the offset in the target array where to start storing values\r\n       * @returns the current matrix\r\n       */\r\n      Matrix.prototype.copyToArray = function (array, offset) {\r\n          if (offset === void 0) { offset = 0; }\r\n          for (var index = 0; index < 16; index++) {\r\n              array[offset + index] = this._m[index];\r\n          }\r\n          return this;\r\n      };\r\n      /**\r\n       * Sets the given matrix \"result\" with the multiplication result of the current Matrix and the given one\r\n       * @param other - defines the second operand\r\n       * @param result - defines the matrix where to store the multiplication\r\n       * @returns the current matrix\r\n       */\r\n      Matrix.prototype.multiplyToRef = function (other, result) {\r\n          if (this._isIdentity) {\r\n              result.copyFrom(other);\r\n              return this;\r\n          }\r\n          if (other._isIdentity) {\r\n              result.copyFrom(this);\r\n              return this;\r\n          }\r\n          this.multiplyToArray(other, result._m, 0);\r\n          result._markAsUpdated();\r\n          return this;\r\n      };\r\n      /**\r\n       * Sets the FloatArray \"result\" from the given index \"offset\" with the multiplication of the current matrix and the given one\r\n       * @param other - defines the second operand\r\n       * @param result - defines the array where to store the multiplication\r\n       * @param offset - defines the offset in the target array where to start storing values\r\n       * @returns the current matrix\r\n       */\r\n      Matrix.prototype.multiplyToArray = function (other, result, offset) {\r\n          var m = this._m;\r\n          var otherM = other.m;\r\n          // tslint:disable:one-variable-per-declaration\r\n          var tm0 = m[0], tm1 = m[1], tm2 = m[2], tm3 = m[3];\r\n          var tm4 = m[4], tm5 = m[5], tm6 = m[6], tm7 = m[7];\r\n          var tm8 = m[8], tm9 = m[9], tm10 = m[10], tm11 = m[11];\r\n          var tm12 = m[12], tm13 = m[13], tm14 = m[14], tm15 = m[15];\r\n          var om0 = otherM[0], om1 = otherM[1], om2 = otherM[2], om3 = otherM[3];\r\n          var om4 = otherM[4], om5 = otherM[5], om6 = otherM[6], om7 = otherM[7];\r\n          var om8 = otherM[8], om9 = otherM[9], om10 = otherM[10], om11 = otherM[11];\r\n          var om12 = otherM[12], om13 = otherM[13], om14 = otherM[14], om15 = otherM[15];\r\n          // tslint:enable:one-variable-per-declaration\r\n          result[offset] = tm0 * om0 + tm1 * om4 + tm2 * om8 + tm3 * om12;\r\n          result[offset + 1] = tm0 * om1 + tm1 * om5 + tm2 * om9 + tm3 * om13;\r\n          result[offset + 2] = tm0 * om2 + tm1 * om6 + tm2 * om10 + tm3 * om14;\r\n          result[offset + 3] = tm0 * om3 + tm1 * om7 + tm2 * om11 + tm3 * om15;\r\n          result[offset + 4] = tm4 * om0 + tm5 * om4 + tm6 * om8 + tm7 * om12;\r\n          result[offset + 5] = tm4 * om1 + tm5 * om5 + tm6 * om9 + tm7 * om13;\r\n          result[offset + 6] = tm4 * om2 + tm5 * om6 + tm6 * om10 + tm7 * om14;\r\n          result[offset + 7] = tm4 * om3 + tm5 * om7 + tm6 * om11 + tm7 * om15;\r\n          result[offset + 8] = tm8 * om0 + tm9 * om4 + tm10 * om8 + tm11 * om12;\r\n          result[offset + 9] = tm8 * om1 + tm9 * om5 + tm10 * om9 + tm11 * om13;\r\n          result[offset + 10] = tm8 * om2 + tm9 * om6 + tm10 * om10 + tm11 * om14;\r\n          result[offset + 11] = tm8 * om3 + tm9 * om7 + tm10 * om11 + tm11 * om15;\r\n          result[offset + 12] = tm12 * om0 + tm13 * om4 + tm14 * om8 + tm15 * om12;\r\n          result[offset + 13] = tm12 * om1 + tm13 * om5 + tm14 * om9 + tm15 * om13;\r\n          result[offset + 14] = tm12 * om2 + tm13 * om6 + tm14 * om10 + tm15 * om14;\r\n          result[offset + 15] = tm12 * om3 + tm13 * om7 + tm14 * om11 + tm15 * om15;\r\n          return this;\r\n      };\r\n      /**\r\n       * Check equality between this matrix and a second one\r\n       * @param value - defines the second matrix to compare\r\n       * @returns true is the current matrix and the given one values are strictly equal\r\n       */\r\n      Matrix.prototype.equals = function (value) {\r\n          var other = value;\r\n          if (!other) {\r\n              return false;\r\n          }\r\n          if (this._isIdentity || other._isIdentity) {\r\n              if (!this._isIdentityDirty && !other._isIdentityDirty) {\r\n                  return this._isIdentity && other._isIdentity;\r\n              }\r\n          }\r\n          var m = this.m;\r\n          var om = other.m;\r\n          return (m[0] === om[0] &&\r\n              m[1] === om[1] &&\r\n              m[2] === om[2] &&\r\n              m[3] === om[3] &&\r\n              m[4] === om[4] &&\r\n              m[5] === om[5] &&\r\n              m[6] === om[6] &&\r\n              m[7] === om[7] &&\r\n              m[8] === om[8] &&\r\n              m[9] === om[9] &&\r\n              m[10] === om[10] &&\r\n              m[11] === om[11] &&\r\n              m[12] === om[12] &&\r\n              m[13] === om[13] &&\r\n              m[14] === om[14] &&\r\n              m[15] === om[15]);\r\n      };\r\n      /**\r\n       * Clone the current matrix\r\n       * @returns a new matrix from the current matrix\r\n       */\r\n      Matrix.prototype.clone = function () {\r\n          var matrix = new Matrix();\r\n          matrix.copyFrom(this);\r\n          return matrix;\r\n      };\r\n      /**\r\n       * Returns the name of the current matrix class\r\n       * @returns the string \"Matrix\"\r\n       */\r\n      Matrix.prototype.getClassName = function () {\r\n          return 'Matrix';\r\n      };\r\n      /**\r\n       * Gets the hash code of the current matrix\r\n       * @returns the hash code\r\n       */\r\n      Matrix.prototype.getHashCode = function () {\r\n          var hash = this._m[0] || 0;\r\n          for (var i = 1; i < 16; i++) {\r\n              hash = (hash * 397) ^ (this._m[i] || 0);\r\n          }\r\n          return hash;\r\n      };\r\n      /**\r\n       * Decomposes the current Matrix into a translation, rotation and scaling components\r\n       * @param scale - defines the scale vector3 given as a reference to update\r\n       * @param rotation - defines the rotation quaternion given as a reference to update\r\n       * @param translation - defines the translation vector3 given as a reference to update\r\n       * @returns true if operation was successful\r\n       */\r\n      Matrix.prototype.decompose = function (scale, rotation, translation) {\r\n          if (this._isIdentity) {\r\n              if (translation) {\r\n                  translation.setAll(0);\r\n              }\r\n              if (scale) {\r\n                  scale.setAll(1);\r\n              }\r\n              if (rotation) {\r\n                  rotation.copyFromFloats(0, 0, 0, 1);\r\n              }\r\n              return true;\r\n          }\r\n          var m = this._m;\r\n          if (translation) {\r\n              translation.copyFromFloats(m[12], m[13], m[14]);\r\n          }\r\n          var usedScale = scale || MathTmp.Vector3[0];\r\n          usedScale.x = Math.sqrt(m[0] * m[0] + m[1] * m[1] + m[2] * m[2]);\r\n          usedScale.y = Math.sqrt(m[4] * m[4] + m[5] * m[5] + m[6] * m[6]);\r\n          usedScale.z = Math.sqrt(m[8] * m[8] + m[9] * m[9] + m[10] * m[10]);\r\n          if (this.determinant() <= 0) {\r\n              usedScale.y *= -1;\r\n          }\r\n          if (usedScale.x === 0 || usedScale.y === 0 || usedScale.z === 0) {\r\n              if (rotation) {\r\n                  rotation.copyFromFloats(0.0, 0.0, 0.0, 1.0);\r\n              }\r\n              return false;\r\n          }\r\n          if (rotation) {\r\n              // tslint:disable-next-line:one-variable-per-declaration\r\n              var sx = 1 / usedScale.x, sy = 1 / usedScale.y, sz = 1 / usedScale.z;\r\n              Matrix.FromValuesToRef(m[0] * sx, m[1] * sx, m[2] * sx, 0.0, m[4] * sy, m[5] * sy, m[6] * sy, 0.0, m[8] * sz, m[9] * sz, m[10] * sz, 0.0, 0.0, 0.0, 0.0, 1.0, MathTmp.Matrix[0]);\r\n              Quaternion.FromRotationMatrixToRef(MathTmp.Matrix[0], rotation);\r\n          }\r\n          return true;\r\n      };\r\n      /**\r\n       * Gets specific row of the matrix\r\n       * @param index - defines the number of the row to get\r\n       * @returns the index-th row of the current matrix as a new Vector4\r\n       */\r\n      Matrix.prototype.getRow = function (index) {\r\n          if (index < 0 || index > 3) {\r\n              return null;\r\n          }\r\n          var i = index * 4;\r\n          return new Vector4(this._m[i + 0], this._m[i + 1], this._m[i + 2], this._m[i + 3]);\r\n      };\r\n      /**\r\n       * Sets the index-th row of the current matrix to the vector4 values\r\n       * @param index - defines the number of the row to set\r\n       * @param row - defines the target vector4\r\n       * @returns the updated current matrix\r\n       */\r\n      Matrix.prototype.setRow = function (index, row) {\r\n          return this.setRowFromFloats(index, row.x, row.y, row.z, row.w);\r\n      };\r\n      /**\r\n       * Compute the transpose of the matrix\r\n       * @returns the new transposed matrix\r\n       */\r\n      Matrix.prototype.transpose = function () {\r\n          return Matrix.Transpose(this);\r\n      };\r\n      /**\r\n       * Compute the transpose of the matrix and store it in a given matrix\r\n       * @param result - defines the target matrix\r\n       * @returns the current matrix\r\n       */\r\n      Matrix.prototype.transposeToRef = function (result) {\r\n          Matrix.TransposeToRef(this, result);\r\n          return this;\r\n      };\r\n      /**\r\n       * Sets the index-th row of the current matrix with the given 4 x float values\r\n       * @param index - defines the row index\r\n       * @param x - defines the x component to set\r\n       * @param y - defines the y component to set\r\n       * @param z - defines the z component to set\r\n       * @param w - defines the w component to set\r\n       * @returns the updated current matrix\r\n       */\r\n      Matrix.prototype.setRowFromFloats = function (index, x, y, z, w) {\r\n          if (index < 0 || index > 3) {\r\n              return this;\r\n          }\r\n          var i = index * 4;\r\n          this._m[i + 0] = x;\r\n          this._m[i + 1] = y;\r\n          this._m[i + 2] = z;\r\n          this._m[i + 3] = w;\r\n          this._markAsUpdated();\r\n          return this;\r\n      };\r\n      /**\r\n       * Compute a new matrix set with the current matrix values multiplied by scale (float)\r\n       * @param scale - defines the scale factor\r\n       * @returns a new matrix\r\n       */\r\n      Matrix.prototype.scale = function (scale) {\r\n          var result = new Matrix();\r\n          this.scaleToRef(scale, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Scale the current matrix values by a factor to a given result matrix\r\n       * @param scale - defines the scale factor\r\n       * @param result - defines the matrix to store the result\r\n       * @returns the current matrix\r\n       */\r\n      Matrix.prototype.scaleToRef = function (scale, result) {\r\n          for (var index = 0; index < 16; index++) {\r\n              result._m[index] = this._m[index] * scale;\r\n          }\r\n          result._markAsUpdated();\r\n          return this;\r\n      };\r\n      /**\r\n       * Scale the current matrix values by a factor and add the result to a given matrix\r\n       * @param scale - defines the scale factor\r\n       * @param result - defines the Matrix to store the result\r\n       * @returns the current matrix\r\n       */\r\n      Matrix.prototype.scaleAndAddToRef = function (scale, result) {\r\n          for (var index = 0; index < 16; index++) {\r\n              result._m[index] += this._m[index] * scale;\r\n          }\r\n          result._markAsUpdated();\r\n          return this;\r\n      };\r\n      /**\r\n       * Writes to the given matrix a normal matrix, computed from this one (using values from identity matrix for fourth row and column).\r\n       * @param ref - matrix to store the result\r\n       */\r\n      Matrix.prototype.toNormalMatrix = function (ref) {\r\n          var tmp = MathTmp.Matrix[0];\r\n          this.invertToRef(tmp);\r\n          tmp.transposeToRef(ref);\r\n          var m = ref._m;\r\n          Matrix.FromValuesToRef(m[0], m[1], m[2], 0.0, m[4], m[5], m[6], 0.0, m[8], m[9], m[10], 0.0, 0.0, 0.0, 0.0, 1.0, ref);\r\n      };\r\n      /**\r\n       * Gets only rotation part of the current matrix\r\n       * @returns a new matrix sets to the extracted rotation matrix from the current one\r\n       */\r\n      Matrix.prototype.getRotationMatrix = function () {\r\n          var result = new Matrix();\r\n          this.getRotationMatrixToRef(result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Extracts the rotation matrix from the current one and sets it as the given \"result\"\r\n       * @param result - defines the target matrix to store data to\r\n       * @returns the current matrix\r\n       */\r\n      Matrix.prototype.getRotationMatrixToRef = function (result) {\r\n          var scale = MathTmp.Vector3[0];\r\n          if (!this.decompose(scale)) {\r\n              Matrix.IdentityToRef(result);\r\n              return this;\r\n          }\r\n          var m = this._m;\r\n          // tslint:disable-next-line:one-variable-per-declaration\r\n          var sx = 1 / scale.x, sy = 1 / scale.y, sz = 1 / scale.z;\r\n          Matrix.FromValuesToRef(m[0] * sx, m[1] * sx, m[2] * sx, 0.0, m[4] * sy, m[5] * sy, m[6] * sy, 0.0, m[8] * sz, m[9] * sz, m[10] * sz, 0.0, 0.0, 0.0, 0.0, 1.0, result);\r\n          return this;\r\n      };\r\n      /**\r\n       * Toggles model matrix from being right handed to left handed in place and vice versa\r\n       */\r\n      Matrix.prototype.toggleModelMatrixHandInPlace = function () {\r\n          var m = this._m;\r\n          m[2] *= -1;\r\n          m[6] *= -1;\r\n          m[8] *= -1;\r\n          m[9] *= -1;\r\n          m[14] *= -1;\r\n          this._markAsUpdated();\r\n      };\r\n      /**\r\n       * Toggles projection matrix from being right handed to left handed in place and vice versa\r\n       */\r\n      Matrix.prototype.toggleProjectionMatrixHandInPlace = function () {\r\n          var m = this._m;\r\n          m[8] *= -1;\r\n          m[9] *= -1;\r\n          m[10] *= -1;\r\n          m[11] *= -1;\r\n          this._markAsUpdated();\r\n      };\r\n      /** @internal */\r\n      Matrix.prototype._updateIdentityStatus = function (isIdentity, isIdentityDirty, isIdentity3x2, isIdentity3x2Dirty) {\r\n          if (isIdentityDirty === void 0) { isIdentityDirty = false; }\r\n          if (isIdentity3x2 === void 0) { isIdentity3x2 = false; }\r\n          if (isIdentity3x2Dirty === void 0) { isIdentity3x2Dirty = true; }\r\n          this.updateFlag = Matrix._updateFlagSeed++;\r\n          this._isIdentity = isIdentity;\r\n          this._isIdentity3x2 = isIdentity || isIdentity3x2;\r\n          this._isIdentityDirty = this._isIdentity ? false : isIdentityDirty;\r\n          this._isIdentity3x2Dirty = this._isIdentity3x2 ? false : isIdentity3x2Dirty;\r\n      };\r\n      Matrix._updateFlagSeed = 0;\r\n      Matrix._identityReadOnly = Matrix.Identity();\r\n      return Matrix;\r\n  }());\n\n  /**\r\n   * Class used to store quaternion data\r\n   * {@link https://en.wikipedia.org/wiki/Quaternion }\r\n   * {@link http://doc.babylonjs.com/features/position,_rotation,_scaling }\r\n   * @public\r\n   */\r\n  var Quaternion = /** @class */ (function () {\r\n      /**\r\n       * Creates a new Quaternion from the given floats\r\n       * @param x - defines the first component (0 by default)\r\n       * @param y - defines the second component (0 by default)\r\n       * @param z - defines the third component (0 by default)\r\n       * @param w - defines the fourth component (1.0 by default)\r\n       */\r\n      function Quaternion(\r\n      /** defines the first component (0 by default) */\r\n      x, \r\n      /** defines the second component (0 by default) */\r\n      y, \r\n      /** defines the third component (0 by default) */\r\n      z, \r\n      /** defines the fourth component (1.0 by default) */\r\n      w) {\r\n          if (x === void 0) { x = 0.0; }\r\n          if (y === void 0) { y = 0.0; }\r\n          if (z === void 0) { z = 0.0; }\r\n          if (w === void 0) { w = 1.0; }\r\n          this.x = x;\r\n          this.y = y;\r\n          this.z = z;\r\n          this.w = w;\r\n      }\r\n      // Statics\r\n      /**\r\n       * Creates a new quaternion from a rotation matrix\r\n       * @param matrix - defines the source matrix\r\n       * @returns a new quaternion created from the given rotation matrix values\r\n       */\r\n      Quaternion.FromRotationMatrix = function (matrix) {\r\n          var result = new Quaternion();\r\n          Quaternion.FromRotationMatrixToRef(matrix, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Updates the given quaternion with the given rotation matrix values\r\n       * @param matrix - defines the source matrix\r\n       * @param result - defines the target quaternion\r\n       */\r\n      Quaternion.FromRotationMatrixToRef = function (matrix, result) {\r\n          var data = matrix.m;\r\n          // tslint:disable:one-variable-per-declaration\r\n          var m11 = data[0], m12 = data[4], m13 = data[8];\r\n          var m21 = data[1], m22 = data[5], m23 = data[9];\r\n          var m31 = data[2], m32 = data[6], m33 = data[10];\r\n          // tslint:enable:one-variable-per-declaration\r\n          var trace = m11 + m22 + m33;\r\n          var s;\r\n          if (trace > 0) {\r\n              s = 0.5 / Math.sqrt(trace + 1.0);\r\n              result.w = 0.25 / s;\r\n              result.x = (m32 - m23) * s;\r\n              result.y = (m13 - m31) * s;\r\n              result.z = (m21 - m12) * s;\r\n          }\r\n          else if (m11 > m22 && m11 > m33) {\r\n              s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\r\n              result.w = (m32 - m23) / s;\r\n              result.x = 0.25 * s;\r\n              result.y = (m12 + m21) / s;\r\n              result.z = (m13 + m31) / s;\r\n          }\r\n          else if (m22 > m33) {\r\n              s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\r\n              result.w = (m13 - m31) / s;\r\n              result.x = (m12 + m21) / s;\r\n              result.y = 0.25 * s;\r\n              result.z = (m23 + m32) / s;\r\n          }\r\n          else {\r\n              s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\r\n              result.w = (m21 - m12) / s;\r\n              result.x = (m13 + m31) / s;\r\n              result.y = (m23 + m32) / s;\r\n              result.z = 0.25 * s;\r\n          }\r\n      };\r\n      /**\r\n       * Returns the dot product (float) between the quaternions \"left\" and \"right\"\r\n       * @param left - defines the left operand\r\n       * @param right - defines the right operand\r\n       * @returns the dot product\r\n       */\r\n      Quaternion.Dot = function (left, right) {\r\n          return left.x * right.x + left.y * right.y + left.z * right.z + left.w * right.w;\r\n      };\r\n      /**\r\n       * Checks if the two quaternions are close to each other\r\n       * @param quat0 - defines the first quaternion to check\r\n       * @param quat1 - defines the second quaternion to check\r\n       * @returns true if the two quaternions are close to each other\r\n       */\r\n      Quaternion.AreClose = function (quat0, quat1) {\r\n          var dot = Quaternion.Dot(quat0, quat1);\r\n          return dot >= 0;\r\n      };\r\n      /**\r\n       * Creates an empty quaternion\r\n       * @returns a new quaternion set to (0.0, 0.0, 0.0)\r\n       */\r\n      Quaternion.Zero = function () {\r\n          return new Quaternion(0.0, 0.0, 0.0, 0.0);\r\n      };\r\n      /**\r\n       * Inverse a given quaternion\r\n       * @param q - defines the source quaternion\r\n       * @returns a new quaternion as the inverted current quaternion\r\n       */\r\n      Quaternion.Inverse = function (q) {\r\n          return new Quaternion(-q.x, -q.y, -q.z, q.w);\r\n      };\r\n      /**\r\n       * Gets a boolean indicating if the given quaternion is identity\r\n       * @param quaternion - defines the quaternion to check\r\n       * @returns true if the quaternion is identity\r\n       */\r\n      Quaternion.IsIdentity = function (quaternion) {\r\n          return quaternion && quaternion.x === 0 && quaternion.y === 0 && quaternion.z === 0 && quaternion.w === 1;\r\n      };\r\n      /**\r\n       * Creates a quaternion from a rotation around an axis\r\n       * @param axis - defines the axis to use\r\n       * @param angle - defines the angle to use (in Euler degrees)\r\n       * @returns a new quaternion created from the given axis (Vector3) and angle in radians (float)\r\n       */\r\n      Quaternion.RotationAxis = function (axis, angle) {\r\n          var angleRad = angle * DEG2RAD;\r\n          return Quaternion.RotationAxisToRef(axis, angleRad, new Quaternion());\r\n      };\r\n      /**\r\n       * Creates a rotation around an axis and stores it into the given quaternion\r\n       * @param axis - defines the axis to use\r\n       * @param angle - defines the angle to use (in Euler degrees)\r\n       * @param result - defines the target quaternion\r\n       * @returns the target quaternion\r\n       */\r\n      Quaternion.RotationAxisToRef = function (axis, angle, result) {\r\n          var angleRad = angle * DEG2RAD;\r\n          var sin = Math.sin(angleRad / 2);\r\n          axis.normalize();\r\n          result.w = Math.cos(angleRad / 2);\r\n          result.x = axis.x * sin;\r\n          result.y = axis.y * sin;\r\n          result.z = axis.z * sin;\r\n          return result;\r\n      };\r\n      /**\r\n       * Creates a new quaternion from data stored into an array\r\n       * @param array - defines the data source\r\n       * @param offset - defines the offset in the source array where the data starts\r\n       * @returns a new quaternion\r\n       */\r\n      Quaternion.FromArray = function (array, offset) {\r\n          if (offset === void 0) { offset = 0; }\r\n          return new Quaternion(array[offset], array[offset + 1], array[offset + 2], array[offset + 3]);\r\n      };\r\n      /**\r\n       * Creates a new quaternion from a set of euler angles and stores it in the target quaternion\r\n       */\r\n      Quaternion.FromEulerAnglesRef = function (x, y, z, result) {\r\n          return Quaternion.RotationYawPitchRollToRef(y * DEG2RAD, x * DEG2RAD, z * DEG2RAD, result);\r\n      };\r\n      /**\r\n       * Creates a new quaternion from the given Euler float angles (y, x, z)\r\n       * @param yaw - defines the rotation around Y axis\r\n       * @param pitch - defines the rotation around X axis\r\n       * @param roll - defines the rotation around Z axis\r\n       * @returns the new quaternion\r\n       */\r\n      Quaternion.RotationYawPitchRoll = function (yaw, pitch, roll) {\r\n          var q = new Quaternion();\r\n          Quaternion.RotationYawPitchRollToRef(yaw, pitch, roll, q);\r\n          return q;\r\n      };\r\n      /**\r\n       * Creates a new rotation from the given Euler float angles (y, x, z) and stores it in the target quaternion\r\n       * @param yaw - defines the rotation around Y axis\r\n       * @param pitch - defines the rotation around X axis\r\n       * @param roll - defines the rotation around Z axis\r\n       * @param result - defines the target quaternion\r\n       */\r\n      Quaternion.RotationYawPitchRollToRef = function (yaw, pitch, roll, result) {\r\n          // Implemented unity-based calculations from: https://stackoverflow.com/a/56055813\r\n          var halfPitch = pitch * 0.5;\r\n          var halfYaw = yaw * 0.5;\r\n          var halfRoll = roll * 0.5;\r\n          var c1 = Math.cos(halfPitch);\r\n          var c2 = Math.cos(halfYaw);\r\n          var c3 = Math.cos(halfRoll);\r\n          var s1 = Math.sin(halfPitch);\r\n          var s2 = Math.sin(halfYaw);\r\n          var s3 = Math.sin(halfRoll);\r\n          result.x = c2 * s1 * c3 + s2 * c1 * s3;\r\n          result.y = s2 * c1 * c3 - c2 * s1 * s3;\r\n          result.z = c2 * c1 * s3 - s2 * s1 * c3;\r\n          result.w = c2 * c1 * c3 + s2 * s1 * s3;\r\n      };\r\n      /**\r\n       * Creates a new quaternion from the given Euler float angles expressed in z-x-z orientation\r\n       * @param alpha - defines the rotation around first axis\r\n       * @param beta - defines the rotation around second axis\r\n       * @param gamma - defines the rotation around third axis\r\n       * @returns the new quaternion\r\n       */\r\n      Quaternion.RotationAlphaBetaGamma = function (alpha, beta, gamma) {\r\n          var result = new Quaternion();\r\n          Quaternion.RotationAlphaBetaGammaToRef(alpha, beta, gamma, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Creates a new quaternion from the given Euler float angles expressed in z-x-z orientation and stores it in the target quaternion\r\n       * @param alpha - defines the rotation around first axis\r\n       * @param beta - defines the rotation around second axis\r\n       * @param gamma - defines the rotation around third axis\r\n       * @param result - defines the target quaternion\r\n       */\r\n      Quaternion.RotationAlphaBetaGammaToRef = function (alpha, beta, gamma, result) {\r\n          // Produces a quaternion from Euler angles in the z-x-z orientation\r\n          var halfGammaPlusAlpha = (gamma + alpha) * 0.5;\r\n          var halfGammaMinusAlpha = (gamma - alpha) * 0.5;\r\n          var halfBeta = beta * 0.5;\r\n          result.x = Math.cos(halfGammaMinusAlpha) * Math.sin(halfBeta);\r\n          result.y = Math.sin(halfGammaMinusAlpha) * Math.sin(halfBeta);\r\n          result.z = Math.sin(halfGammaPlusAlpha) * Math.cos(halfBeta);\r\n          result.w = Math.cos(halfGammaPlusAlpha) * Math.cos(halfBeta);\r\n      };\r\n      /**\r\n       * Creates a new quaternion containing the rotation value to reach the target (axis1, axis2, axis3) orientation as a rotated XYZ system (axis1, axis2 and axis3 are normalized during this operation)\r\n       * @param axis1 - defines the first axis\r\n       * @param axis2 - defines the second axis\r\n       * @param axis3 - defines the third axis\r\n       * @returns the new quaternion\r\n       */\r\n      Quaternion.RotationQuaternionFromAxis = function (axis1, axis2, axis3) {\r\n          var quat = new Quaternion(0.0, 0.0, 0.0, 0.0);\r\n          Quaternion.RotationQuaternionFromAxisToRef(axis1, axis2, axis3, quat);\r\n          return quat;\r\n      };\r\n      /**\r\n       * Creates a rotation value to reach the target (axis1, axis2, axis3) orientation as a rotated XYZ system (axis1, axis2 and axis3 are normalized during this operation) and stores it in the target quaternion\r\n       * @param axis1 - defines the first axis\r\n       * @param axis2 - defines the second axis\r\n       * @param axis3 - defines the third axis\r\n       * @param ref - defines the target quaternion\r\n       */\r\n      Quaternion.RotationQuaternionFromAxisToRef = function (axis1, axis2, axis3, ref) {\r\n          var rotMat = MathTmp.Matrix[0];\r\n          Matrix.FromXYZAxesToRef(axis1.normalize(), axis2.normalize(), axis3.normalize(), rotMat);\r\n          Quaternion.FromRotationMatrixToRef(rotMat, ref);\r\n      };\r\n      /**\r\n       * Interpolates between two quaternions\r\n       * @param left - defines first quaternion\r\n       * @param right - defines second quaternion\r\n       * @param amount - defines the gradient to use\r\n       * @returns the new interpolated quaternion\r\n       */\r\n      Quaternion.Slerp = function (left, right, amount) {\r\n          var result = Quaternion.Identity;\r\n          Quaternion.SlerpToRef(left, right, amount, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Interpolates between two quaternions and stores it into a target quaternion\r\n       * @param left - defines first quaternion\r\n       * @param right - defines second quaternion\r\n       * @param amount - defines the gradient to use\r\n       * @param result - defines the target quaternion\r\n       */\r\n      Quaternion.SlerpToRef = function (left, right, amount, result) {\r\n          var num2;\r\n          var num3;\r\n          var num4 = left.x * right.x + left.y * right.y + left.z * right.z + left.w * right.w;\r\n          var flag = false;\r\n          if (num4 < 0) {\r\n              flag = true;\r\n              num4 = -num4;\r\n          }\r\n          if (num4 > 0.999999) {\r\n              num3 = 1 - amount;\r\n              num2 = flag ? -amount : amount;\r\n          }\r\n          else {\r\n              var num5 = Math.acos(num4);\r\n              var num6 = 1.0 / Math.sin(num5);\r\n              num3 = Math.sin((1.0 - amount) * num5) * num6;\r\n              num2 = flag ? -Math.sin(amount * num5) * num6 : Math.sin(amount * num5) * num6;\r\n          }\r\n          result.x = num3 * left.x + num2 * right.x;\r\n          result.y = num3 * left.y + num2 * right.y;\r\n          result.z = num3 * left.z + num2 * right.z;\r\n          result.w = num3 * left.w + num2 * right.w;\r\n      };\r\n      /**\r\n       * Interpolate between two quaternions using Hermite interpolation\r\n       * @param value1 - defines first quaternion\r\n       * @param tangent1 - defines the incoming tangent\r\n       * @param value2 - defines second quaternion\r\n       * @param tangent2 - defines the outgoing tangent\r\n       * @param amount - defines the target quaternion\r\n       * @returns the new interpolated quaternion\r\n       */\r\n      Quaternion.Hermite = function (value1, tangent1, value2, tangent2, amount) {\r\n          var squared = amount * amount;\r\n          var cubed = amount * squared;\r\n          var part1 = 2.0 * cubed - 3.0 * squared + 1.0;\r\n          var part2 = -2.0 * cubed + 3.0 * squared;\r\n          var part3 = cubed - 2.0 * squared + amount;\r\n          var part4 = cubed - squared;\r\n          var x = value1.x * part1 + value2.x * part2 + tangent1.x * part3 + tangent2.x * part4;\r\n          var y = value1.y * part1 + value2.y * part2 + tangent1.y * part3 + tangent2.y * part4;\r\n          var z = value1.z * part1 + value2.z * part2 + tangent1.z * part3 + tangent2.z * part4;\r\n          var w = value1.w * part1 + value2.w * part2 + tangent1.w * part3 + tangent2.w * part4;\r\n          return new Quaternion(x, y, z, w);\r\n      };\r\n      Object.defineProperty(Quaternion, \"Identity\", {\r\n          /**\r\n           * Creates an identity quaternion\r\n           * @returns - the identity quaternion\r\n           */\r\n          get: function () {\r\n              return new Quaternion(0.0, 0.0, 0.0, 1.0);\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      /**\r\n       * Returns the angle in degrees between two rotations a and b.\r\n       * @param quat1 - defines the first quaternion\r\n       * @param quat2 - defines the second quaternion\r\n       */\r\n      Quaternion.Angle = function (quat1, quat2) {\r\n          var dot = Quaternion.Dot(quat1, quat2);\r\n          return Math.acos(Math.min(Math.abs(dot), 1)) * 2 * RAD2DEG;\r\n      };\r\n      /**\r\n       * Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis.\r\n       * @param x - the rotation on the x axis in euler degrees\r\n       * @param y - the rotation on the y axis in euler degrees\r\n       * @param z - the rotation on the z axis in euler degrees\r\n       */\r\n      Quaternion.Euler = function (x, y, z) {\r\n          return Quaternion.RotationYawPitchRoll(y * DEG2RAD, x * DEG2RAD, z * DEG2RAD);\r\n      };\r\n      /**\r\n       * Creates a rotation with the specified forward and upwards directions.\r\n       * @param forward - the direction to look in\r\n       * @param up - the vector that defines in which direction up is\r\n       */\r\n      Quaternion.LookRotation = function (forward, up) {\r\n          if (up === void 0) { up = MathTmp.staticUp; }\r\n          var forwardNew = Vector3.Normalize(forward);\r\n          var right = Vector3.Normalize(Vector3.Cross(up, forwardNew));\r\n          var upNew = Vector3.Cross(forwardNew, right);\r\n          var m00 = right.x;\r\n          var m01 = right.y;\r\n          var m02 = right.z;\r\n          var m10 = upNew.x;\r\n          var m11 = upNew.y;\r\n          var m12 = upNew.z;\r\n          var m20 = forwardNew.x;\r\n          var m21 = forwardNew.y;\r\n          var m22 = forwardNew.z;\r\n          var num8 = m00 + m11 + m22;\r\n          var quaternion = new Quaternion();\r\n          if (num8 > 0) {\r\n              var num = Math.sqrt(num8 + 1);\r\n              quaternion.w = num * 0.5;\r\n              num = 0.5 / num;\r\n              quaternion.x = (m12 - m21) * num;\r\n              quaternion.y = (m20 - m02) * num;\r\n              quaternion.z = (m01 - m10) * num;\r\n              return quaternion;\r\n          }\r\n          if (m00 >= m11 && m00 >= m22) {\r\n              var num7 = Math.sqrt(1 + m00 - m11 - m22);\r\n              var num4 = 0.5 / num7;\r\n              quaternion.x = 0.5 * num7;\r\n              quaternion.y = (m01 + m10) * num4;\r\n              quaternion.z = (m02 + m20) * num4;\r\n              quaternion.w = (m12 - m21) * num4;\r\n              return quaternion;\r\n          }\r\n          if (m11 > m22) {\r\n              var num6 = Math.sqrt(1 + m11 - m00 - m22);\r\n              var num3 = 0.5 / num6;\r\n              quaternion.x = (m10 + m01) * num3;\r\n              quaternion.y = 0.5 * num6;\r\n              quaternion.z = (m21 + m12) * num3;\r\n              quaternion.w = (m20 - m02) * num3;\r\n              return quaternion;\r\n          }\r\n          var num5 = Math.sqrt(1 + m22 - m00 - m11);\r\n          var num2 = 0.5 / num5;\r\n          quaternion.x = (m20 + m02) * num2;\r\n          quaternion.y = (m21 + m12) * num2;\r\n          quaternion.z = 0.5 * num5;\r\n          quaternion.w = (m01 - m10) * num2;\r\n          return quaternion;\r\n      };\r\n      /**\r\n       * The from quaternion is rotated towards to by an angular step of maxDegreesDelta.\r\n       * @param from - defines the first quaternion\r\n       * @param to - defines the second quaternion\r\n       * @param maxDegreesDelta - the interval step\r\n       */\r\n      Quaternion.RotateTowards = function (from, to, maxDegreesDelta) {\r\n          var num = Quaternion.Angle(from, to);\r\n          if (num === 0) {\r\n              return to;\r\n          }\r\n          var t = Math.min(1, maxDegreesDelta / num);\r\n          return Quaternion.Slerp(from, to, t);\r\n      };\r\n      /**\r\n       * Creates a rotation which rotates from fromDirection to toDirection.\r\n       * @param from - defines the first direction Vector\r\n       * @param to - defines the target direction Vector\r\n       */\r\n      Quaternion.FromToRotation = function (from, to, up) {\r\n          // Unity-based calculations implemented from https://forum.unity.com/threads/quaternion-lookrotation-around-an-axis.608470/#post-4069888\r\n          if (up === void 0) { up = MathTmp.staticUp; }\r\n          var v0 = from.normalize();\r\n          var v1 = to.normalize();\r\n          var a = Vector3.Cross(v0, v1);\r\n          var w = Math.sqrt(v0.lengthSquared() * v1.lengthSquared()) + Vector3.Dot(v0, v1);\r\n          if (a.lengthSquared() < 0.0001) {\r\n              // the vectors are parallel, check w to find direction\r\n              // if w is 0 then values are opposite, and we sould rotate 180 degrees around the supplied axis\r\n              // otherwise the vectors in the same direction and no rotation should occur\r\n              return (Math.abs(w) < 0.0001) ? new Quaternion(up.x, up.y, up.z, 0).normalized : Quaternion.Identity;\r\n          }\r\n          else {\r\n              return new Quaternion(a.x, a.y, a.z, w).normalized;\r\n          }\r\n      };\r\n      Object.defineProperty(Quaternion.prototype, \"normalized\", {\r\n          /**\r\n           * Converts this quaternion to one with the same orientation but with a magnitude of 1.\r\n           */\r\n          get: function () {\r\n              return this.normalize();\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      /**\r\n       * Creates a rotation which rotates from fromDirection to toDirection.\r\n       * @param from - defines the first Vector\r\n       * @param to - defines the second Vector\r\n       * @param up - defines the direction\r\n       */\r\n      Quaternion.prototype.setFromToRotation = function (from, to, up) {\r\n          if (up === void 0) { up = MathTmp.staticUp; }\r\n          var result = Quaternion.FromToRotation(from, to, up);\r\n          this.x = result.x;\r\n          this.y = result.y;\r\n          this.z = result.z;\r\n          this.w = result.w;\r\n      };\r\n      Object.defineProperty(Quaternion.prototype, \"eulerAngles\", {\r\n          /**\r\n           * Gets or sets the euler angle representation of the rotation.\r\n           * Implemented unity-based calculations from: https://stackoverflow.com/a/56055813\r\n           */\r\n          get: function () {\r\n              var out = new Vector3();\r\n              // if the input quaternion is normalized, this is exactly one. Otherwise, this acts as a correction factor for the quaternion's not-normalizedness\r\n              var unit = (this.x * this.x) + (this.y * this.y) + (this.z * this.z) + (this.w * this.w);\r\n              // this will have a magnitude of 0.5 or greater if and only if this is a singularity case\r\n              var test = this.x * this.w - this.y * this.z;\r\n              if (test > 0.4995 * unit) { // singularity at north pole\r\n                  out.x = Math.PI / 2;\r\n                  out.y = 2 * Math.atan2(this.y, this.x);\r\n                  out.z = 0;\r\n              }\r\n              else if (test < -0.4995 * unit) { // singularity at south pole\r\n                  out.x = -Math.PI / 2;\r\n                  out.y = -2 * Math.atan2(this.y, this.x);\r\n                  out.z = 0;\r\n              }\r\n              else { // no singularity - this is the majority of cases\r\n                  out.x = Math.asin(2 * (this.w * this.x - this.y * this.z));\r\n                  out.y = Math.atan2(2 * this.w * this.y + 2 * this.z * this.x, 1 - 2 * (this.x * this.x + this.y * this.y));\r\n                  out.z = Math.atan2(2 * this.w * this.z + 2 * this.x * this.y, 1 - 2 * (this.z * this.z + this.x * this.x));\r\n              }\r\n              out.x *= RAD2DEG;\r\n              out.y *= RAD2DEG;\r\n              out.z *= RAD2DEG;\r\n              // ensure the degree values are between 0 and 360\r\n              out.x = Scalar.Repeat(out.x, 360);\r\n              out.y = Scalar.Repeat(out.y, 360);\r\n              out.z = Scalar.Repeat(out.z, 360);\r\n              return out;\r\n          },\r\n          set: function (euler) {\r\n              this.setEuler(euler.x, euler.y, euler.z);\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      /**\r\n       * Gets a string representation for the current quaternion\r\n       * @returns a string with the Quaternion coordinates\r\n       */\r\n      Quaternion.prototype.toString = function () {\r\n          return \"(\" + this.x + \", \" + this.y + \", \" + this.z + \", \" + this.w + \")\";\r\n      };\r\n      Object.defineProperty(Quaternion.prototype, \"length\", {\r\n          /**\r\n           * Gets length of current quaternion\r\n           * @returns the quaternion length (float)\r\n           */\r\n          get: function () {\r\n              return Math.sqrt(this.lengthSquared);\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(Quaternion.prototype, \"lengthSquared\", {\r\n          /**\r\n           * Gets length of current quaternion\r\n           * @returns the quaternion length (float)\r\n           */\r\n          get: function () {\r\n              return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      /**\r\n       * Gets the class name of the quaternion\r\n       * @returns the string \"Quaternion\"\r\n       */\r\n      Quaternion.prototype.getClassName = function () {\r\n          return 'Quaternion';\r\n      };\r\n      /**\r\n       * Gets a hash code for this quaternion\r\n       * @returns the quaternion hash code\r\n       */\r\n      Quaternion.prototype.getHashCode = function () {\r\n          var hash = this.x || 0;\r\n          hash = (hash * 397) ^ (this.y || 0);\r\n          hash = (hash * 397) ^ (this.z || 0);\r\n          hash = (hash * 397) ^ (this.w || 0);\r\n          return hash;\r\n      };\r\n      /**\r\n       * Copy the quaternion to an array\r\n       * @returns a new array populated with 4 elements from the quaternion coordinates\r\n       */\r\n      Quaternion.prototype.asArray = function () {\r\n          return [this.x, this.y, this.z, this.w];\r\n      };\r\n      /**\r\n       * Check if two quaternions are equals\r\n       * @param otherQuaternion - defines the second operand\r\n       * @returns true if the current quaternion and the given one coordinates are strictly equals\r\n       */\r\n      Quaternion.prototype.equals = function (otherQuaternion) {\r\n          return (otherQuaternion &&\r\n              this.x === otherQuaternion.x &&\r\n              this.y === otherQuaternion.y &&\r\n              this.z === otherQuaternion.z &&\r\n              this.w === otherQuaternion.w);\r\n      };\r\n      /**\r\n       * Clone the current quaternion\r\n       * @returns a new quaternion copied from the current one\r\n       */\r\n      Quaternion.prototype.clone = function () {\r\n          return new Quaternion(this.x, this.y, this.z, this.w);\r\n      };\r\n      /**\r\n       * Copy a quaternion to the current one\r\n       * @param other - defines the other quaternion\r\n       * @returns the updated current quaternion\r\n       */\r\n      Quaternion.prototype.copyFrom = function (other) {\r\n          this.x = other.x;\r\n          this.y = other.y;\r\n          this.z = other.z;\r\n          this.w = other.w;\r\n          return this;\r\n      };\r\n      /**\r\n       * Updates the current quaternion with the given float coordinates\r\n       * @param x - defines the x coordinate\r\n       * @param y - defines the y coordinate\r\n       * @param z - defines the z coordinate\r\n       * @param w - defines the w coordinate\r\n       * @returns the updated current quaternion\r\n       */\r\n      Quaternion.prototype.copyFromFloats = function (x, y, z, w) {\r\n          this.x = x;\r\n          this.y = y;\r\n          this.z = z;\r\n          this.w = w;\r\n          return this;\r\n      };\r\n      /**\r\n       * Updates the current quaternion from the given float coordinates\r\n       * @param x - defines the x coordinate\r\n       * @param y - defines the y coordinate\r\n       * @param z - defines the z coordinate\r\n       * @param w - defines the w coordinate\r\n       * @returns the updated current quaternion\r\n       */\r\n      Quaternion.prototype.set = function (x, y, z, w) {\r\n          return this.copyFromFloats(x, y, z, w);\r\n      };\r\n      /**\r\n       * Updates the current quaternion from the given euler angles\r\n       * @returns the updated current quaternion\r\n       */\r\n      Quaternion.prototype.setEuler = function (x, y, z) {\r\n          Quaternion.RotationYawPitchRollToRef(y * DEG2RAD, x * DEG2RAD, z * DEG2RAD, this);\r\n          return this;\r\n      };\r\n      /**\r\n       * @internal\r\n       * Adds two quaternions\r\n       * @param other - defines the second operand\r\n       * @returns a new quaternion as the addition result of the given one and the current quaternion\r\n       */\r\n      Quaternion.prototype.add = function (other) {\r\n          return new Quaternion(this.x + other.x, this.y + other.y, this.z + other.z, this.w + other.w);\r\n      };\r\n      /**\r\n       * @internal\r\n       * Add a quaternion to the current one\r\n       * @param other - defines the quaternion to add\r\n       * @returns the current quaternion\r\n       */\r\n      Quaternion.prototype.addInPlace = function (other) {\r\n          this.x += other.x;\r\n          this.y += other.y;\r\n          this.z += other.z;\r\n          this.w += other.w;\r\n          return this;\r\n      };\r\n      /**\r\n       * Subtract two quaternions\r\n       * @param other - defines the second operand\r\n       * @returns a new quaternion as the subtraction result of the given one from the current one\r\n       */\r\n      Quaternion.prototype.subtract = function (other) {\r\n          return new Quaternion(this.x - other.x, this.y - other.y, this.z - other.z, this.w - other.w);\r\n      };\r\n      /**\r\n       * Multiplies the current quaternion by a scale factor\r\n       * @param value - defines the scale factor\r\n       * @returns a new quaternion set by multiplying the current quaternion coordinates by the float \"scale\"\r\n       */\r\n      Quaternion.prototype.scale = function (value) {\r\n          return new Quaternion(this.x * value, this.y * value, this.z * value, this.w * value);\r\n      };\r\n      /**\r\n       * Scale the current quaternion values by a factor and stores the result to a given quaternion\r\n       * @param scale - defines the scale factor\r\n       * @param result - defines the Quaternion object where to store the result\r\n       * @returns the unmodified current quaternion\r\n       */\r\n      Quaternion.prototype.scaleToRef = function (scale, result) {\r\n          result.x = this.x * scale;\r\n          result.y = this.y * scale;\r\n          result.z = this.z * scale;\r\n          result.w = this.w * scale;\r\n          return this;\r\n      };\r\n      /**\r\n       * Multiplies in place the current quaternion by a scale factor\r\n       * @param value - defines the scale factor\r\n       * @returns the current modified quaternion\r\n       */\r\n      Quaternion.prototype.scaleInPlace = function (value) {\r\n          this.x *= value;\r\n          this.y *= value;\r\n          this.z *= value;\r\n          this.w *= value;\r\n          return this;\r\n      };\r\n      /**\r\n       * Scale the current quaternion values by a factor and add the result to a given quaternion\r\n       * @param scale - defines the scale factor\r\n       * @param result - defines the Quaternion object where to store the result\r\n       * @returns the unmodified current quaternion\r\n       */\r\n      Quaternion.prototype.scaleAndAddToRef = function (scale, result) {\r\n          result.x += this.x * scale;\r\n          result.y += this.y * scale;\r\n          result.z += this.z * scale;\r\n          result.w += this.w * scale;\r\n          return this;\r\n      };\r\n      /**\r\n       * Multiplies two quaternions\r\n       * @param q1 - defines the second operand\r\n       * @returns a new quaternion set as the multiplication result of the current one with the given one \"q1\"\r\n       */\r\n      Quaternion.prototype.multiply = function (q1) {\r\n          var result = new Quaternion(0, 0, 0, 1.0);\r\n          this.multiplyToRef(q1, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Sets the given \"result\" as the the multiplication result of the current one with the given one \"q1\"\r\n       * @param q1 - defines the second operand\r\n       * @param result - defines the target quaternion\r\n       * @returns the current quaternion\r\n       */\r\n      Quaternion.prototype.multiplyToRef = function (q1, result) {\r\n          var x = this.x * q1.w + this.y * q1.z - this.z * q1.y + this.w * q1.x;\r\n          var y = -this.x * q1.z + this.y * q1.w + this.z * q1.x + this.w * q1.y;\r\n          var z = this.x * q1.y - this.y * q1.x + this.z * q1.w + this.w * q1.z;\r\n          var w = -this.x * q1.x - this.y * q1.y - this.z * q1.z + this.w * q1.w;\r\n          result.copyFromFloats(x, y, z, w);\r\n          return this;\r\n      };\r\n      /**\r\n       * Updates the current quaternion with the multiplication of itself with the given one \"q1\"\r\n       * @param q1 - defines the second operand\r\n       * @returns the currentupdated quaternion\r\n       */\r\n      Quaternion.prototype.multiplyInPlace = function (q1) {\r\n          this.multiplyToRef(q1, this);\r\n          return this;\r\n      };\r\n      /**\r\n       * Conjugates (1-q) the current quaternion and stores the result in the given quaternion\r\n       * @param ref - defines the target quaternion\r\n       * @returns the current quaternion\r\n       */\r\n      Quaternion.prototype.conjugateToRef = function (ref) {\r\n          ref.copyFromFloats(-this.x, -this.y, -this.z, this.w);\r\n          return this;\r\n      };\r\n      /**\r\n       * Conjugates in place (1-q) the current quaternion\r\n       * @returns the current updated quaternion\r\n       */\r\n      Quaternion.prototype.conjugateInPlace = function () {\r\n          this.x *= -1;\r\n          this.y *= -1;\r\n          this.z *= -1;\r\n          return this;\r\n      };\r\n      /**\r\n       * Conjugates in place (1-q) the current quaternion\r\n       * @returns a new quaternion\r\n       */\r\n      Quaternion.prototype.conjugate = function () {\r\n          var result = new Quaternion(-this.x, -this.y, -this.z, this.w);\r\n          return result;\r\n      };\r\n      /**\r\n       * Normalize in place the current quaternion\r\n       * @returns the current updated quaternion\r\n       */\r\n      Quaternion.prototype.normalize = function () {\r\n          var length = 1.0 / this.length;\r\n          this.x *= length;\r\n          this.y *= length;\r\n          this.z *= length;\r\n          this.w *= length;\r\n          return this;\r\n      };\r\n      Quaternion.prototype.angleAxis = function (degress, axis) {\r\n          if (axis.lengthSquared() === 0) {\r\n              return Quaternion.Identity;\r\n          }\r\n          var result = Quaternion.Identity;\r\n          var radians = degress * DEG2RAD;\r\n          radians *= 0.5;\r\n          var a2 = axis.normalize();\r\n          a2 = axis.scaleInPlace(Math.sin(radians));\r\n          result.x = a2.x;\r\n          result.y = a2.y;\r\n          result.z = a2.z;\r\n          result.w = Math.cos(radians);\r\n          return result.normalize();\r\n      };\r\n      /**\r\n       * Updates the given rotation matrix with the current quaternion values\r\n       * @param result - defines the target matrix\r\n       * @returns the current unchanged quaternion\r\n       */\r\n      Quaternion.prototype.toRotationMatrix = function (result) {\r\n          Matrix.FromQuaternionToRef(this, result);\r\n          return this;\r\n      };\r\n      /**\r\n       * Updates the current quaternion from the given rotation matrix values\r\n       * @param matrix - defines the source matrix\r\n       * @returns the current updated quaternion\r\n       */\r\n      Quaternion.prototype.fromRotationMatrix = function (matrix) {\r\n          Quaternion.FromRotationMatrixToRef(matrix, this);\r\n          return this;\r\n      };\r\n      return Quaternion;\r\n  }());\n\n  /**\r\n   * Classed used to store (x,y,z) vector representation\r\n   * A Vector3 is the main object used in 3D geometry\r\n   * It can represent etiher the coordinates of a point the space, either a direction\r\n   * Reminder: Babylon.js uses a left handed forward facing system\r\n   * @public\r\n   */\r\n  var Vector3 = /** @class */ (function () {\r\n      /**\r\n       * Creates a new Vector3 object from the given x, y, z (floats) coordinates.\r\n       * @param x - defines the first coordinates (on X axis)\r\n       * @param y - defines the second coordinates (on Y axis)\r\n       * @param z - defines the third coordinates (on Z axis)\r\n       */\r\n      function Vector3(\r\n      /**\r\n       * Defines the first coordinates (on X axis)\r\n       */\r\n      x, \r\n      /**\r\n       * Defines the second coordinates (on Y axis)\r\n       */\r\n      y, \r\n      /**\r\n       * Defines the third coordinates (on Z axis)\r\n       */\r\n      z) {\r\n          if (x === void 0) { x = 0; }\r\n          if (y === void 0) { y = 0; }\r\n          if (z === void 0) { z = 0; }\r\n          this.x = x;\r\n          this.y = y;\r\n          this.z = z;\r\n      }\r\n      Object.defineProperty(Vector3.prototype, \"isNonUniform\", {\r\n          /**\r\n           * Gets a boolean indicating that the vector is non uniform meaning x, y or z are not all the same\r\n           */\r\n          get: function () {\r\n              var absX = Math.abs(this.x);\r\n              var absY = Math.abs(this.y);\r\n              if (absX !== absY) {\r\n                  return true;\r\n              }\r\n              var absZ = Math.abs(this.z);\r\n              if (absX !== absZ) {\r\n                  return true;\r\n              }\r\n              if (absY !== absZ) {\r\n                  return true;\r\n              }\r\n              return false;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      // Statics\r\n      /**\r\n       * Returns a new Vector3 as the result of the addition of the two given vectors.\r\n       * @param vector1 - the first vector\r\n       * @param vector2 - the second vector\r\n       * @returns the resulting vector\r\n       */\r\n      Vector3.Add = function (vector1, vector2) {\r\n          return new Vector3(vector1.x, vector1.y, vector1.z).addInPlace(vector2);\r\n      };\r\n      /**\r\n       * Get the clip factor between two vectors\r\n       * @param vector0 - defines the first operand\r\n       * @param vector1 - defines the second operand\r\n       * @param axis - defines the axis to use\r\n       * @param size - defines the size along the axis\r\n       * @returns the clip factor\r\n       */\r\n      Vector3.GetClipFactor = function (vector0, vector1, axis, size) {\r\n          var d0 = Vector3.Dot(vector0, axis) - size;\r\n          var d1 = Vector3.Dot(vector1, axis) - size;\r\n          var s = d0 / (d0 - d1);\r\n          return s;\r\n      };\r\n      /**\r\n       * Get angle between two vectors\r\n       * @param vector0 - angle between vector0 and vector1\r\n       * @param vector1 - angle between vector0 and vector1\r\n       * @param normal - direction of the normal\r\n       * @returns the angle between vector0 and vector1\r\n       */\r\n      Vector3.GetAngleBetweenVectors = function (vector0, vector1, normal) {\r\n          var v0 = vector0.normalizeToRef(MathTmp.Vector3[1]);\r\n          var v1 = vector1.normalizeToRef(MathTmp.Vector3[2]);\r\n          var dot = Vector3.Dot(v0, v1);\r\n          var n = MathTmp.Vector3[3];\r\n          Vector3.CrossToRef(v0, v1, n);\r\n          if (Vector3.Dot(n, normal) > 0) {\r\n              return Math.acos(dot);\r\n          }\r\n          return -Math.acos(dot);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set from the index \"offset\" of the given array\r\n       * @param array - defines the source array\r\n       * @param offset - defines the offset in the source array\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.FromArray = function (array, offset) {\r\n          if (offset === void 0) { offset = 0; }\r\n          return new Vector3(array[offset], array[offset + 1], array[offset + 2]);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set from the index \"offset\" of the given FloatArray\r\n       * This function is deprecated.  Use FromArray instead\r\n       * @param array - defines the source array\r\n       * @param offset - defines the offset in the source array\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.FromFloatArray = function (array, offset) {\r\n          return Vector3.FromArray(array, offset);\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" with the element values from the index \"offset\" of the given array\r\n       * @param array - defines the source array\r\n       * @param offset - defines the offset in the source array\r\n       * @param result - defines the Vector3 where to store the result\r\n       */\r\n      Vector3.FromArrayToRef = function (array, offset, result) {\r\n          result.x = array[offset];\r\n          result.y = array[offset + 1];\r\n          result.z = array[offset + 2];\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" with the element values from the index \"offset\" of the given FloatArray\r\n       * This function is deprecated.  Use FromArrayToRef instead.\r\n       * @param array - defines the source array\r\n       * @param offset - defines the offset in the source array\r\n       * @param result - defines the Vector3 where to store the result\r\n       */\r\n      Vector3.FromFloatArrayToRef = function (array, offset, result) {\r\n          return Vector3.FromArrayToRef(array, offset, result);\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" with the given floats.\r\n       * @param x - defines the x coordinate of the source\r\n       * @param y - defines the y coordinate of the source\r\n       * @param z - defines the z coordinate of the source\r\n       * @param result - defines the Vector3 where to store the result\r\n       */\r\n      Vector3.FromFloatsToRef = function (x, y, z, result) {\r\n          result.copyFromFloats(x, y, z);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set to (0.0, 0.0, 0.0)\r\n       * @returns a new empty Vector3\r\n       */\r\n      Vector3.Zero = function () {\r\n          return new Vector3(0.0, 0.0, 0.0);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set to (1.0, 1.0, 1.0)\r\n       * @returns a new unit Vector3\r\n       */\r\n      Vector3.One = function () {\r\n          return new Vector3(1.0, 1.0, 1.0);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set to (0.0, 1.0, 0.0)\r\n       * @returns a new up Vector3\r\n       */\r\n      Vector3.Up = function () {\r\n          return new Vector3(0.0, 1.0, 0.0);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set to (0.0, -1.0, 0.0)\r\n       * @returns a new down Vector3\r\n       */\r\n      Vector3.Down = function () {\r\n          return new Vector3(0.0, -1.0, 0.0);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set to (0.0, 0.0, 1.0)\r\n       * @returns a new forward Vector3\r\n       */\r\n      Vector3.Forward = function () {\r\n          return new Vector3(0.0, 0.0, 1.0);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set to (0.0, 0.0, -1.0)\r\n       * @returns a new forward Vector3\r\n       */\r\n      Vector3.Backward = function () {\r\n          return new Vector3(0.0, 0.0, -1.0);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set to (1.0, 0.0, 0.0)\r\n       * @returns a new right Vector3\r\n       */\r\n      Vector3.Right = function () {\r\n          return new Vector3(1.0, 0.0, 0.0);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set to (-1.0, 0.0, 0.0)\r\n       * @returns a new left Vector3\r\n       */\r\n      Vector3.Left = function () {\r\n          return new Vector3(-1.0, 0.0, 0.0);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set with the result of the transformation by the given matrix of the given vector.\r\n       * This method computes tranformed coordinates only, not transformed direction vectors (ie. it takes translation in account)\r\n       * @param vector - defines the Vector3 to transform\r\n       * @param transformation - defines the transformation matrix\r\n       * @returns the transformed Vector3\r\n       */\r\n      Vector3.TransformCoordinates = function (vector, transformation) {\r\n          var result = Vector3.Zero();\r\n          Vector3.TransformCoordinatesToRef(vector, transformation, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" coordinates with the result of the transformation by the given matrix of the given vector\r\n       * This method computes tranformed coordinates only, not transformed direction vectors (ie. it takes translation in account)\r\n       * @param vector - defines the Vector3 to transform\r\n       * @param transformation - defines the transformation matrix\r\n       * @param result - defines the Vector3 where to store the result\r\n       */\r\n      Vector3.TransformCoordinatesToRef = function (vector, transformation, result) {\r\n          return Vector3.TransformCoordinatesFromFloatsToRef(vector.x, vector.y, vector.z, transformation, result);\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" coordinates with the result of the transformation by the given matrix of the given floats (x, y, z)\r\n       * This method computes tranformed coordinates only, not transformed direction vectors\r\n       * @param x - define the x coordinate of the source vector\r\n       * @param y - define the y coordinate of the source vector\r\n       * @param z - define the z coordinate of the source vector\r\n       * @param transformation - defines the transformation matrix\r\n       * @param result - defines the Vector3 where to store the result\r\n       */\r\n      Vector3.TransformCoordinatesFromFloatsToRef = function (x, y, z, transformation, result) {\r\n          var m = transformation.m;\r\n          var rx = x * m[0] + y * m[4] + z * m[8] + m[12];\r\n          var ry = x * m[1] + y * m[5] + z * m[9] + m[13];\r\n          var rz = x * m[2] + y * m[6] + z * m[10] + m[14];\r\n          var rw = 1 / (x * m[3] + y * m[7] + z * m[11] + m[15]);\r\n          result.x = rx * rw;\r\n          result.y = ry * rw;\r\n          result.z = rz * rw;\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set with the result of the normal transformation by the given matrix of the given vector\r\n       * This methods computes transformed normalized direction vectors only (ie. it does not apply translation)\r\n       * @param vector - defines the Vector3 to transform\r\n       * @param transformation - defines the transformation matrix\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.TransformNormal = function (vector, transformation) {\r\n          var result = Vector3.Zero();\r\n          Vector3.TransformNormalToRef(vector, transformation, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" with the result of the normal transformation by the given matrix of the given vector\r\n       * This methods computes transformed normalized direction vectors only (ie. it does not apply translation)\r\n       * @param vector - defines the Vector3 to transform\r\n       * @param transformation - defines the transformation matrix\r\n       * @param result - defines the Vector3 where to store the result\r\n       */\r\n      Vector3.TransformNormalToRef = function (vector, transformation, result) {\r\n          this.TransformNormalFromFloatsToRef(vector.x, vector.y, vector.z, transformation, result);\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" with the result of the normal transformation by the given matrix of the given floats (x, y, z)\r\n       * This methods computes transformed normalized direction vectors only (ie. it does not apply translation)\r\n       * @param x - define the x coordinate of the source vector\r\n       * @param y - define the y coordinate of the source vector\r\n       * @param z - define the z coordinate of the source vector\r\n       * @param transformation - defines the transformation matrix\r\n       * @param result - defines the Vector3 where to store the result\r\n       */\r\n      Vector3.TransformNormalFromFloatsToRef = function (x, y, z, transformation, result) {\r\n          var m = transformation.m;\r\n          result.x = x * m[0] + y * m[4] + z * m[8];\r\n          result.y = x * m[1] + y * m[5] + z * m[9];\r\n          result.z = x * m[2] + y * m[6] + z * m[10];\r\n      };\r\n      /**\r\n       * Returns a new Vector3 located for \"amount\" on the CatmullRom interpolation spline defined by the vectors \"value1\", \"value2\", \"value3\", \"value4\"\r\n       * @param value1 - defines the first control point\r\n       * @param value2 - defines the second control point\r\n       * @param value3 - defines the third control point\r\n       * @param value4 - defines the fourth control point\r\n       * @param amount - defines the amount on the spline to use\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.CatmullRom = function (value1, value2, value3, value4, amount) {\r\n          var squared = amount * amount;\r\n          var cubed = amount * squared;\r\n          var x = 0.5 *\r\n              (2.0 * value2.x +\r\n                  (-value1.x + value3.x) * amount +\r\n                  (2.0 * value1.x - 5.0 * value2.x + 4.0 * value3.x - value4.x) * squared +\r\n                  (-value1.x + 3.0 * value2.x - 3.0 * value3.x + value4.x) * cubed);\r\n          var y = 0.5 *\r\n              (2.0 * value2.y +\r\n                  (-value1.y + value3.y) * amount +\r\n                  (2.0 * value1.y - 5.0 * value2.y + 4.0 * value3.y - value4.y) * squared +\r\n                  (-value1.y + 3.0 * value2.y - 3.0 * value3.y + value4.y) * cubed);\r\n          var z = 0.5 *\r\n              (2.0 * value2.z +\r\n                  (-value1.z + value3.z) * amount +\r\n                  (2.0 * value1.z - 5.0 * value2.z + 4.0 * value3.z - value4.z) * squared +\r\n                  (-value1.z + 3.0 * value2.z - 3.0 * value3.z + value4.z) * cubed);\r\n          return new Vector3(x, y, z);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set with the coordinates of \"value\", if the vector \"value\" is in the cube defined by the vectors \"min\" and \"max\"\r\n       * If a coordinate value of \"value\" is lower than one of the \"min\" coordinate, then this \"value\" coordinate is set with the \"min\" one\r\n       * If a coordinate value of \"value\" is greater than one of the \"max\" coordinate, then this \"value\" coordinate is set with the \"max\" one\r\n       * @param value - defines the current value\r\n       * @param min - defines the lower range value\r\n       * @param max - defines the upper range value\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.Clamp = function (value, min, max) {\r\n          var v = new Vector3();\r\n          Vector3.ClampToRef(value, min, max, v);\r\n          return v;\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" with the coordinates of \"value\", if the vector \"value\" is in the cube defined by the vectors \"min\" and \"max\"\r\n       * If a coordinate value of \"value\" is lower than one of the \"min\" coordinate, then this \"value\" coordinate is set with the \"min\" one\r\n       * If a coordinate value of \"value\" is greater than one of the \"max\" coordinate, then this \"value\" coordinate is set with the \"max\" one\r\n       * @param value - defines the current value\r\n       * @param min - defines the lower range value\r\n       * @param max - defines the upper range value\r\n       * @param result - defines the Vector3 where to store the result\r\n       */\r\n      Vector3.ClampToRef = function (value, min, max, result) {\r\n          var x = value.x;\r\n          x = x > max.x ? max.x : x;\r\n          x = x < min.x ? min.x : x;\r\n          var y = value.y;\r\n          y = y > max.y ? max.y : y;\r\n          y = y < min.y ? min.y : y;\r\n          var z = value.z;\r\n          z = z > max.z ? max.z : z;\r\n          z = z < min.z ? min.z : z;\r\n          result.copyFromFloats(x, y, z);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 located for \"amount\" (float) on the Hermite interpolation spline defined by the vectors \"value1\", \"tangent1\", \"value2\", \"tangent2\"\r\n       * @param value1 - defines the first control point\r\n       * @param tangent1 - defines the first tangent vector\r\n       * @param value2 - defines the second control point\r\n       * @param tangent2 - defines the second tangent vector\r\n       * @param amount - defines the amount on the interpolation spline (between 0 and 1)\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.Hermite = function (value1, tangent1, value2, tangent2, amount) {\r\n          var squared = amount * amount;\r\n          var cubed = amount * squared;\r\n          var part1 = 2.0 * cubed - 3.0 * squared + 1.0;\r\n          var part2 = -2.0 * cubed + 3.0 * squared;\r\n          var part3 = cubed - 2.0 * squared + amount;\r\n          var part4 = cubed - squared;\r\n          var x = value1.x * part1 + value2.x * part2 + tangent1.x * part3 + tangent2.x * part4;\r\n          var y = value1.y * part1 + value2.y * part2 + tangent1.y * part3 + tangent2.y * part4;\r\n          var z = value1.z * part1 + value2.z * part2 + tangent1.z * part3 + tangent2.z * part4;\r\n          return new Vector3(x, y, z);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 located for \"amount\" (float) on the linear interpolation between the vectors \"start\" and \"end\"\r\n       * @param start - defines the start value\r\n       * @param end - defines the end value\r\n       * @param amount - max defines amount between both (between 0 and 1)\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.Lerp = function (start, end, amount) {\r\n          var result = new Vector3(0, 0, 0);\r\n          Vector3.LerpToRef(start, end, amount, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" with the result of the linear interpolation from the vector \"start\" for \"amount\" to the vector \"end\"\r\n       * @param start - defines the start value\r\n       * @param end - defines the end value\r\n       * @param amount - max defines amount between both (between 0 and 1)\r\n       * @param result - defines the Vector3 where to store the result\r\n       */\r\n      Vector3.LerpToRef = function (start, end, amount, result) {\r\n          result.x = start.x + (end.x - start.x) * amount;\r\n          result.y = start.y + (end.y - start.y) * amount;\r\n          result.z = start.z + (end.z - start.z) * amount;\r\n      };\r\n      /**\r\n       * Returns the dot product (float) between the vectors \"left\" and \"right\"\r\n       * @param left - defines the left operand\r\n       * @param right - defines the right operand\r\n       * @returns the dot product\r\n       */\r\n      Vector3.Dot = function (left, right) {\r\n          return left.x * right.x + left.y * right.y + left.z * right.z;\r\n      };\r\n      /**\r\n       * Returns a new Vector3 as the cross product of the vectors \"left\" and \"right\"\r\n       * The cross product is then orthogonal to both \"left\" and \"right\"\r\n       * @param left - defines the left operand\r\n       * @param right - defines the right operand\r\n       * @returns the cross product\r\n       */\r\n      Vector3.Cross = function (left, right) {\r\n          var result = Vector3.Zero();\r\n          Vector3.CrossToRef(left, right, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" with the cross product of \"left\" and \"right\"\r\n       * The cross product is then orthogonal to both \"left\" and \"right\"\r\n       * @param left - defines the left operand\r\n       * @param right - defines the right operand\r\n       * @param result - defines the Vector3 where to store the result\r\n       */\r\n      Vector3.CrossToRef = function (left, right, result) {\r\n          var x = left.y * right.z - left.z * right.y;\r\n          var y = left.z * right.x - left.x * right.z;\r\n          var z = left.x * right.y - left.y * right.x;\r\n          result.copyFromFloats(x, y, z);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 as the normalization of the given vector\r\n       * @param vector - defines the Vector3 to normalize\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.Normalize = function (vector) {\r\n          var result = Vector3.Zero();\r\n          Vector3.NormalizeToRef(vector, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Sets the given vector \"result\" with the normalization of the given first vector\r\n       * @param vector - defines the Vector3 to normalize\r\n       * @param result - defines the Vector3 where to store the result\r\n       */\r\n      Vector3.NormalizeToRef = function (vector, result) {\r\n          vector.normalizeToRef(result);\r\n      };\r\n      /**\r\n       * Gets the minimal coordinate values between two Vector3\r\n       * @param left - defines the first operand\r\n       * @param right - defines the second operand\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.Minimize = function (left, right) {\r\n          var min = new Vector3(left.x, left.y, left.z);\r\n          min.minimizeInPlace(right);\r\n          return min;\r\n      };\r\n      /**\r\n       * Gets the maximal coordinate values between two Vector3\r\n       * @param left - defines the first operand\r\n       * @param right - defines the second operand\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.Maximize = function (left, right) {\r\n          var max = new Vector3(left.x, left.y, left.z);\r\n          max.maximizeInPlace(right);\r\n          return max;\r\n      };\r\n      /**\r\n       * Returns the distance between the vectors \"value1\" and \"value2\"\r\n       * @param value1 - defines the first operand\r\n       * @param value2 - defines the second operand\r\n       * @returns the distance\r\n       */\r\n      Vector3.Distance = function (value1, value2) {\r\n          return Math.sqrt(Vector3.DistanceSquared(value1, value2));\r\n      };\r\n      /**\r\n       * Returns the squared distance between the vectors \"value1\" and \"value2\"\r\n       * @param value1 - defines the first operand\r\n       * @param value2 - defines the second operand\r\n       * @returns the squared distance\r\n       */\r\n      Vector3.DistanceSquared = function (value1, value2) {\r\n          var x = value1.x - value2.x;\r\n          var y = value1.y - value2.y;\r\n          var z = value1.z - value2.z;\r\n          return x * x + y * y + z * z;\r\n      };\r\n      /**\r\n       * Returns a new Vector3 located at the center between \"value1\" and \"value2\"\r\n       * @param value1 - defines the first operand\r\n       * @param value2 - defines the second operand\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.Center = function (value1, value2) {\r\n          var center = Vector3.Add(value1, value2);\r\n          center.scaleInPlace(0.5);\r\n          return center;\r\n      };\r\n      /**\r\n       * Given three orthogonal normalized left-handed oriented Vector3 axis in space (target system),\r\n       * RotationFromAxis() returns the rotation Euler angles (ex : rotation.x, rotation.y, rotation.z) to apply\r\n       * to something in order to rotate it from its local system to the given target system\r\n       * Note: axis1, axis2 and axis3 are normalized during this operation\r\n       * @param axis1 - defines the first axis\r\n       * @param axis2 - defines the second axis\r\n       * @param axis3 - defines the third axis\r\n       * @returns a new Vector3\r\n       */\r\n      Vector3.RotationFromAxis = function (axis1, axis2, axis3) {\r\n          var rotation = Vector3.Zero();\r\n          Vector3.RotationFromAxisToRef(axis1, axis2, axis3, rotation);\r\n          return rotation;\r\n      };\r\n      /**\r\n       * The same than RotationFromAxis but updates the given ref Vector3 parameter instead of returning a new Vector3\r\n       * @param axis1 - defines the first axis\r\n       * @param axis2 - defines the second axis\r\n       * @param axis3 - defines the third axis\r\n       * @param ref - defines the Vector3 where to store the result\r\n       */\r\n      Vector3.RotationFromAxisToRef = function (axis1, axis2, axis3, ref) {\r\n          var quat = MathTmp.Quaternion[0];\r\n          Quaternion.RotationQuaternionFromAxisToRef(axis1, axis2, axis3, quat);\r\n          ref.copyFrom(quat.eulerAngles);\r\n      };\r\n      /**\r\n       * Creates a string representation of the Vector3\r\n       * @returns a string with the Vector3 coordinates.\r\n       */\r\n      Vector3.prototype.toString = function () {\r\n          return \"(\" + this.x + \", \" + this.y + \", \" + this.z + \")\";\r\n      };\r\n      /**\r\n       * Gets the class name\r\n       * @returns the string \"Vector3\"\r\n       */\r\n      Vector3.prototype.getClassName = function () {\r\n          return 'Vector3';\r\n      };\r\n      /**\r\n       * Creates the Vector3 hash code\r\n       * @returns a number which tends to be unique between Vector3 instances\r\n       */\r\n      Vector3.prototype.getHashCode = function () {\r\n          var hash = this.x || 0;\r\n          hash = (hash * 397) ^ (this.y || 0);\r\n          hash = (hash * 397) ^ (this.z || 0);\r\n          return hash;\r\n      };\r\n      // Operators\r\n      /**\r\n       * Creates an array containing three elements : the coordinates of the Vector3\r\n       * @returns a new array of numbers\r\n       */\r\n      Vector3.prototype.asArray = function () {\r\n          var result = [];\r\n          this.toArray(result, 0);\r\n          return result;\r\n      };\r\n      /**\r\n       * Populates the given array or FloatArray from the given index with the successive coordinates of the Vector3\r\n       * @param array - defines the destination array\r\n       * @param index - defines the offset in the destination array\r\n       * @returns the current Vector3\r\n       */\r\n      Vector3.prototype.toArray = function (array, index) {\r\n          if (index === void 0) { index = 0; }\r\n          array[index] = this.x;\r\n          array[index + 1] = this.y;\r\n          array[index + 2] = this.z;\r\n          return this;\r\n      };\r\n      /**\r\n       * Converts the current Vector3 into a quaternion (considering that the Vector3 contains Euler angles representation of a rotation)\r\n       * @returns a new Quaternion object, computed from the Vector3 coordinates\r\n       */\r\n      Vector3.prototype.toQuaternion = function () {\r\n          return Quaternion.Identity.setEuler(this.y, this.x, this.z);\r\n      };\r\n      /**\r\n       * Adds the given vector to the current Vector3\r\n       * @param otherVector - defines the second operand\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.addInPlace = function (otherVector) {\r\n          return this.addInPlaceFromFloats(otherVector.x, otherVector.y, otherVector.z);\r\n      };\r\n      /**\r\n       * Adds the given coordinates to the current Vector3\r\n       * @param x - defines the x coordinate of the operand\r\n       * @param y - defines the y coordinate of the operand\r\n       * @param z - defines the z coordinate of the operand\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.addInPlaceFromFloats = function (x, y, z) {\r\n          this.x += x;\r\n          this.y += y;\r\n          this.z += z;\r\n          return this;\r\n      };\r\n      /**\r\n       * Gets a new Vector3, result of the addition the current Vector3 and the given vector\r\n       * @param otherVector - defines the second operand\r\n       * @returns the resulting Vector3\r\n       */\r\n      Vector3.prototype.add = function (otherVector) {\r\n          return new Vector3(this.x + otherVector.x, this.y + otherVector.y, this.z + otherVector.z);\r\n      };\r\n      /**\r\n       * Adds the current Vector3 to the given one and stores the result in the vector \"result\"\r\n       * @param otherVector - defines the second operand\r\n       * @param result - defines the Vector3 object where to store the result\r\n       * @returns the current Vector3\r\n       */\r\n      Vector3.prototype.addToRef = function (otherVector, result) {\r\n          return result.copyFromFloats(this.x + otherVector.x, this.y + otherVector.y, this.z + otherVector.z);\r\n      };\r\n      /**\r\n       * Subtract the given vector from the current Vector3\r\n       * @param otherVector - defines the second operand\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.subtractInPlace = function (otherVector) {\r\n          this.x -= otherVector.x;\r\n          this.y -= otherVector.y;\r\n          this.z -= otherVector.z;\r\n          return this;\r\n      };\r\n      /**\r\n       * Returns a new Vector3, result of the subtraction of the given vector from the current Vector3\r\n       * @param otherVector - defines the second operand\r\n       * @returns the resulting Vector3\r\n       */\r\n      Vector3.prototype.subtract = function (otherVector) {\r\n          return new Vector3(this.x - otherVector.x, this.y - otherVector.y, this.z - otherVector.z);\r\n      };\r\n      /**\r\n       * Subtracts the given vector from the current Vector3 and stores the result in the vector \"result\".\r\n       * @param otherVector - defines the second operand\r\n       * @param result - defines the Vector3 object where to store the result\r\n       * @returns the current Vector3\r\n       */\r\n      Vector3.prototype.subtractToRef = function (otherVector, result) {\r\n          return this.subtractFromFloatsToRef(otherVector.x, otherVector.y, otherVector.z, result);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set with the subtraction of the given floats from the current Vector3 coordinates\r\n       * @param x - defines the x coordinate of the operand\r\n       * @param y - defines the y coordinate of the operand\r\n       * @param z - defines the z coordinate of the operand\r\n       * @returns the resulting Vector3\r\n       */\r\n      Vector3.prototype.subtractFromFloats = function (x, y, z) {\r\n          return new Vector3(this.x - x, this.y - y, this.z - z);\r\n      };\r\n      /**\r\n       * Subtracts the given floats from the current Vector3 coordinates and set the given vector \"result\" with this result\r\n       * @param x - defines the x coordinate of the operand\r\n       * @param y - defines the y coordinate of the operand\r\n       * @param z - defines the z coordinate of the operand\r\n       * @param result - defines the Vector3 object where to store the result\r\n       * @returns the current Vector3\r\n       */\r\n      Vector3.prototype.subtractFromFloatsToRef = function (x, y, z, result) {\r\n          return result.copyFromFloats(this.x - x, this.y - y, this.z - z);\r\n      };\r\n      /**\r\n       * Multiplies this vector (with an implicit 1 in the 4th dimension) and m, and divides by perspective\r\n       * @param matrix - The transformation matrix\r\n       */\r\n      Vector3.prototype.applyMatrix4 = function (matrix) {\r\n          this.applyMatrix4ToRef(matrix, this);\r\n      };\r\n      /**\r\n       * Multiplies this vector (with an implicit 1 in the 4th dimension) and m, and divides by perspective and set the given vector \"result\" with this result\r\n       * @param matrix - The transformation matrix\r\n       * @param result - defines the Vector3 object where to store the result\r\n       * @returns the current Vector3\r\n       */\r\n      Vector3.prototype.applyMatrix4ToRef = function (matrix, result) {\r\n          var _a = this, x = _a.x, y = _a.y, z = _a.z;\r\n          var m = matrix.m;\r\n          var w = 1 / (m[3] * x + m[7] * y + m[11] * z + m[15]);\r\n          result.x = (m[0] * x + m[4] * y + m[8] * z + m[12]) * w;\r\n          result.y = (m[1] * x + m[5] * y + m[9] * z + m[13]) * w;\r\n          result.z = (m[2] * x + m[6] * y + m[10] * z + m[14]) * w;\r\n          return result;\r\n      };\r\n      /**\r\n       * Rotates the current Vector3 based on the given quaternion\r\n       * @param q - defines the Quaternion\r\n       * @returns the current Vector3\r\n       */\r\n      Vector3.prototype.rotate = function (q) {\r\n          return this.rotateToRef(q, this);\r\n      };\r\n      /**\r\n       * Rotates current Vector3 based on the given quaternion, but applies the rotation to target Vector3.\r\n       * @param q - defines the Quaternion\r\n       * @param result - defines the target Vector3\r\n       * @returns the current Vector3\r\n       */\r\n      Vector3.prototype.rotateToRef = function (q, result) {\r\n          var _a = this, x = _a.x, y = _a.y, z = _a.z;\r\n          var qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n          // calculate quat * vector\r\n          var ix = qw * x + qy * z - qz * y;\r\n          var iy = qw * y + qz * x - qx * z;\r\n          var iz = qw * z + qx * y - qy * x;\r\n          var iw = -qx * x - qy * y - qz * z;\r\n          // calculate result * inverse quat\r\n          result.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n          result.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n          result.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n          return result;\r\n      };\r\n      /**\r\n       * Gets a new Vector3 set with the current Vector3 negated coordinates\r\n       * @returns a new Vector3\r\n       */\r\n      Vector3.prototype.negate = function () {\r\n          return new Vector3(-this.x, -this.y, -this.z);\r\n      };\r\n      /**\r\n       * Multiplies the Vector3 coordinates by the float \"scale\"\r\n       * @param scale - defines the multiplier factor\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.scaleInPlace = function (scale) {\r\n          this.x *= scale;\r\n          this.y *= scale;\r\n          this.z *= scale;\r\n          return this;\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set with the current Vector3 coordinates multiplied by the float \"scale\"\r\n       * @param scale - defines the multiplier factor\r\n       * @returns a new Vector3\r\n       */\r\n      Vector3.prototype.scale = function (scale) {\r\n          return new Vector3(this.x * scale, this.y * scale, this.z * scale);\r\n      };\r\n      /**\r\n       * Multiplies the current Vector3 coordinates by the float \"scale\" and stores the result in the given vector \"result\" coordinates\r\n       * @param scale - defines the multiplier factor\r\n       * @param result - defines the Vector3 object where to store the result\r\n       * @returns the current Vector3\r\n       */\r\n      Vector3.prototype.scaleToRef = function (scale, result) {\r\n          return result.copyFromFloats(this.x * scale, this.y * scale, this.z * scale);\r\n      };\r\n      /**\r\n       * Scale the current Vector3 values by a factor and add the result to a given Vector3\r\n       * @param scale - defines the scale factor\r\n       * @param result - defines the Vector3 object where to store the result\r\n       * @returns the unmodified current Vector3\r\n       */\r\n      Vector3.prototype.scaleAndAddToRef = function (scale, result) {\r\n          return result.addInPlaceFromFloats(this.x * scale, this.y * scale, this.z * scale);\r\n      };\r\n      /**\r\n       * Returns true if the current Vector3 and the given vector coordinates are strictly equal\r\n       * @param otherVector - defines the second operand\r\n       * @returns true if both vectors are equals\r\n       */\r\n      Vector3.prototype.equals = function (otherVector) {\r\n          return otherVector && this.x === otherVector.x && this.y === otherVector.y && this.z === otherVector.z;\r\n      };\r\n      /**\r\n       * Returns true if the current Vector3 and the given vector coordinates are distant less than epsilon\r\n       * @param otherVector - defines the second operand\r\n       * @param epsilon - defines the minimal distance to define values as equals\r\n       * @returns true if both vectors are distant less than epsilon\r\n       */\r\n      Vector3.prototype.equalsWithEpsilon = function (otherVector, epsilon) {\r\n          if (epsilon === void 0) { epsilon = Epsilon; }\r\n          return (otherVector &&\r\n              Scalar.WithinEpsilon(this.x, otherVector.x, epsilon) &&\r\n              Scalar.WithinEpsilon(this.y, otherVector.y, epsilon) &&\r\n              Scalar.WithinEpsilon(this.z, otherVector.z, epsilon));\r\n      };\r\n      /**\r\n       * Returns true if the current Vector3 coordinates equals the given floats\r\n       * @param x - defines the x coordinate of the operand\r\n       * @param y - defines the y coordinate of the operand\r\n       * @param z - defines the z coordinate of the operand\r\n       * @returns true if both vectors are equals\r\n       */\r\n      Vector3.prototype.equalsToFloats = function (x, y, z) {\r\n          return this.x === x && this.y === y && this.z === z;\r\n      };\r\n      /**\r\n       * Multiplies the current Vector3 coordinates by the given ones\r\n       * @param otherVector - defines the second operand\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.multiplyInPlace = function (otherVector) {\r\n          this.x *= otherVector.x;\r\n          this.y *= otherVector.y;\r\n          this.z *= otherVector.z;\r\n          return this;\r\n      };\r\n      /**\r\n       * Returns a new Vector3, result of the multiplication of the current Vector3 by the given vector\r\n       * @param otherVector - defines the second operand\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.prototype.multiply = function (otherVector) {\r\n          return this.multiplyByFloats(otherVector.x, otherVector.y, otherVector.z);\r\n      };\r\n      /**\r\n       * Multiplies the current Vector3 by the given one and stores the result in the given vector \"result\"\r\n       * @param otherVector - defines the second operand\r\n       * @param result - defines the Vector3 object where to store the result\r\n       * @returns the current Vector3\r\n       */\r\n      Vector3.prototype.multiplyToRef = function (otherVector, result) {\r\n          return result.copyFromFloats(this.x * otherVector.x, this.y * otherVector.y, this.z * otherVector.z);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set with the result of the mulliplication of the current Vector3 coordinates by the given floats\r\n       * @param x - defines the x coordinate of the operand\r\n       * @param y - defines the y coordinate of the operand\r\n       * @param z - defines the z coordinate of the operand\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.prototype.multiplyByFloats = function (x, y, z) {\r\n          return new Vector3(this.x * x, this.y * y, this.z * z);\r\n      };\r\n      /**\r\n       * Returns a new Vector3 set with the result of the division of the current Vector3 coordinates by the given ones\r\n       * @param otherVector - defines the second operand\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.prototype.divide = function (otherVector) {\r\n          return new Vector3(this.x / otherVector.x, this.y / otherVector.y, this.z / otherVector.z);\r\n      };\r\n      /**\r\n       * Divides the current Vector3 coordinates by the given ones and stores the result in the given vector \"result\"\r\n       * @param otherVector - defines the second operand\r\n       * @param result - defines the Vector3 object where to store the result\r\n       * @returns the current Vector3\r\n       */\r\n      Vector3.prototype.divideToRef = function (otherVector, result) {\r\n          return result.copyFromFloats(this.x / otherVector.x, this.y / otherVector.y, this.z / otherVector.z);\r\n      };\r\n      /**\r\n       * Divides the current Vector3 coordinates by the given ones.\r\n       * @param otherVector - defines the second operand\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.divideInPlace = function (otherVector) {\r\n          return this.divideToRef(otherVector, this);\r\n      };\r\n      /**\r\n       * Updates the current Vector3 with the minimal coordinate values between its and the given vector ones\r\n       * @param other - defines the second operand\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.minimizeInPlace = function (other) {\r\n          return this.minimizeInPlaceFromFloats(other.x, other.y, other.z);\r\n      };\r\n      /**\r\n       * Updates the current Vector3 with the maximal coordinate values between its and the given vector ones.\r\n       * @param other - defines the second operand\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.maximizeInPlace = function (other) {\r\n          return this.maximizeInPlaceFromFloats(other.x, other.y, other.z);\r\n      };\r\n      /**\r\n       * Updates the current Vector3 with the minimal coordinate values between its and the given coordinates\r\n       * @param x - defines the x coordinate of the operand\r\n       * @param y - defines the y coordinate of the operand\r\n       * @param z - defines the z coordinate of the operand\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.minimizeInPlaceFromFloats = function (x, y, z) {\r\n          if (x < this.x) {\r\n              this.x = x;\r\n          }\r\n          if (y < this.y) {\r\n              this.y = y;\r\n          }\r\n          if (z < this.z) {\r\n              this.z = z;\r\n          }\r\n          return this;\r\n      };\r\n      /**\r\n       * Updates the current Vector3 with the maximal coordinate values between its and the given coordinates.\r\n       * @param x - defines the x coordinate of the operand\r\n       * @param y - defines the y coordinate of the operand\r\n       * @param z - defines the z coordinate of the operand\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.maximizeInPlaceFromFloats = function (x, y, z) {\r\n          if (x > this.x) {\r\n              this.x = x;\r\n          }\r\n          if (y > this.y) {\r\n              this.y = y;\r\n          }\r\n          if (z > this.z) {\r\n              this.z = z;\r\n          }\r\n          return this;\r\n      };\r\n      /**\r\n       * Gets a new Vector3 from current Vector3 floored values\r\n       * @returns a new Vector3\r\n       */\r\n      Vector3.prototype.floor = function () {\r\n          return new Vector3(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z));\r\n      };\r\n      /**\r\n       * Gets a new Vector3 from current Vector3 floored values\r\n       * @returns a new Vector3\r\n       */\r\n      Vector3.prototype.fract = function () {\r\n          return new Vector3(this.x - Math.floor(this.x), this.y - Math.floor(this.y), this.z - Math.floor(this.z));\r\n      };\r\n      // Properties\r\n      /**\r\n       * Gets the length of the Vector3\r\n       * @returns the length of the Vecto3\r\n       */\r\n      Vector3.prototype.length = function () {\r\n          return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n      };\r\n      /**\r\n       * Gets the squared length of the Vector3\r\n       * @returns squared length of the Vector3\r\n       */\r\n      Vector3.prototype.lengthSquared = function () {\r\n          return this.x * this.x + this.y * this.y + this.z * this.z;\r\n      };\r\n      /**\r\n       * Normalize the current Vector3.\r\n       * Please note that this is an in place operation.\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.normalize = function () {\r\n          return this.normalizeFromLength(this.length());\r\n      };\r\n      /**\r\n       * Normalize the current Vector3 with the given input length.\r\n       * Please note that this is an in place operation.\r\n       * @param len - the length of the vector\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.normalizeFromLength = function (len) {\r\n          if (len === 0 || len === 1.0) {\r\n              return this;\r\n          }\r\n          return this.scaleInPlace(1.0 / len);\r\n      };\r\n      /**\r\n       * Normalize the current Vector3 to a new vector\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.prototype.normalizeToNew = function () {\r\n          var normalized = new Vector3(0, 0, 0);\r\n          this.normalizeToRef(normalized);\r\n          return normalized;\r\n      };\r\n      /**\r\n       * Normalize the current Vector3 to the reference\r\n       * @param reference - define the Vector3 to update\r\n       * @returns the updated Vector3\r\n       */\r\n      Vector3.prototype.normalizeToRef = function (reference) {\r\n          var len = this.length();\r\n          if (len === 0 || len === 1.0) {\r\n              return reference.copyFromFloats(this.x, this.y, this.z);\r\n          }\r\n          return this.scaleToRef(1.0 / len, reference);\r\n      };\r\n      /**\r\n       * Creates a new Vector3 copied from the current Vector3\r\n       * @returns the new Vector3\r\n       */\r\n      Vector3.prototype.clone = function () {\r\n          return new Vector3(this.x, this.y, this.z);\r\n      };\r\n      /**\r\n       * Copies the given vector coordinates to the current Vector3 ones\r\n       * @param source - defines the source Vector3\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.copyFrom = function (source) {\r\n          return this.copyFromFloats(source.x, source.y, source.z);\r\n      };\r\n      /**\r\n       * Copies the given floats to the current Vector3 coordinates\r\n       * @param x - defines the x coordinate of the operand\r\n       * @param y - defines the y coordinate of the operand\r\n       * @param z - defines the z coordinate of the operand\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.copyFromFloats = function (x, y, z) {\r\n          this.x = x;\r\n          this.y = y;\r\n          this.z = z;\r\n          return this;\r\n      };\r\n      /**\r\n       * Copies the given floats to the current Vector3 coordinates\r\n       * @param x - defines the x coordinate of the operand\r\n       * @param y - defines the y coordinate of the operand\r\n       * @param z - defines the z coordinate of the operand\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.set = function (x, y, z) {\r\n          return this.copyFromFloats(x, y, z);\r\n      };\r\n      /**\r\n       * Copies the given float to the current Vector3 coordinates\r\n       * @param v - defines the x, y and z coordinates of the operand\r\n       * @returns the current updated Vector3\r\n       */\r\n      Vector3.prototype.setAll = function (v) {\r\n          this.x = this.y = this.z = v;\r\n          return this;\r\n      };\r\n      return Vector3;\r\n  }());\n\n  // Temporary pre-allocated objects for engine internal use\r\n  // usage in any internal function :\r\n  // var tmp = Tmp.Vector3[0];   <= gets access to the first pre-created Vector3\r\n  // There's a Tmp array per object type : int, float, Vector2, Vector3, Vector4, Quaternion, Matrix\r\n  /**\r\n   * @internal\r\n   * Same as Tmp but not exported to keep it only for math functions to avoid conflicts\r\n   */\r\n  var MathTmp = {\r\n      Vector3: buildArray(6, Vector3.Zero),\r\n      Matrix: buildArray(2, Matrix.Identity),\r\n      Quaternion: buildArray(3, Quaternion.Zero),\r\n      staticUp: Vector3.Up(),\r\n      tmpMatrix: Matrix.Zero()\r\n  };\n\n  /**\r\n   * Defines angle representation\r\n   * @public\r\n   */\r\n  var Angle = /** @class */ (function () {\r\n      /**\r\n       * Creates an Angle object of \"radians\" radians (float).\r\n       */\r\n      function Angle(radians) {\r\n          this._radians = radians;\r\n          if (this._radians < 0.0) {\r\n              this._radians += 2.0 * Math.PI;\r\n          }\r\n      }\r\n      /**\r\n       * Gets a new Angle object valued with the angle value in radians between the two given vectors\r\n       * @param a - defines first vector\r\n       * @param b - defines second vector\r\n       * @returns a new Angle\r\n       */\r\n      Angle.BetweenTwoPoints = function (a, b) {\r\n          var delta = b.subtract(a);\r\n          var theta = Math.atan2(delta.y, delta.x);\r\n          return new Angle(theta);\r\n      };\r\n      /**\r\n       * Gets a new Angle object from the given float in radians\r\n       * @param radians - defines the angle value in radians\r\n       * @returns a new Angle\r\n       */\r\n      Angle.FromRadians = function (radians) {\r\n          return new Angle(radians);\r\n      };\r\n      /**\r\n       * Gets a new Angle object from the given float in degrees\r\n       * @param degrees - defines the angle value in degrees\r\n       * @returns a new Angle\r\n       */\r\n      Angle.FromDegrees = function (degrees) {\r\n          return new Angle((degrees * Math.PI) / 180.0);\r\n      };\r\n      /**\r\n       * Get value in degrees\r\n       * @returns the Angle value in degrees (float)\r\n       */\r\n      Angle.prototype.degrees = function () {\r\n          return (this._radians * 180.0) / Math.PI;\r\n      };\r\n      /**\r\n       * Get value in radians\r\n       * @returns the Angle value in radians (float)\r\n       */\r\n      Angle.prototype.radians = function () {\r\n          return this._radians;\r\n      };\r\n      return Angle;\r\n  }());\n\n  /**\r\n   * Class representing a vector containing 2 coordinates\r\n   * @public\r\n   */\r\n  var Vector2 = /** @class */ (function () {\r\n      /**\r\n       * Creates a new Vector2 from the given x and y coordinates\r\n       * @param x - defines the first coordinate\r\n       * @param y - defines the second coordinate\r\n       */\r\n      function Vector2(\r\n      /** defines the first coordinate */\r\n      x, \r\n      /** defines the second coordinate */\r\n      y) {\r\n          if (x === void 0) { x = 0; }\r\n          if (y === void 0) { y = 0; }\r\n          this.x = x;\r\n          this.y = y;\r\n      }\r\n      /**\r\n       * Gets a new Vector2(0, 0)\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.Zero = function () {\r\n          return new Vector2(0, 0);\r\n      };\r\n      /**\r\n       * Gets a new Vector2(1, 1)\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.One = function () {\r\n          return new Vector2(1, 1);\r\n      };\r\n      /**\r\n       * Returns a new Vector2 as the result of the addition of the two given vectors.\r\n       * @param vector1 - the first vector\r\n       * @param vector2 - the second vector\r\n       * @returns the resulting vector\r\n       */\r\n      Vector2.Add = function (vector1, vector2) {\r\n          return new Vector2(vector1.x, vector1.y).addInPlace(vector2);\r\n      };\r\n      /**\r\n       * Gets a new Vector2 set from the given index element of the given array\r\n       * @param array - defines the data source\r\n       * @param offset - defines the offset in the data source\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.FromArray = function (array, offset) {\r\n          if (offset === void 0) { offset = 0; }\r\n          return new Vector2(array[offset], array[offset + 1]);\r\n      };\r\n      /**\r\n       * Sets \"result\" from the given index element of the given array\r\n       * @param array - defines the data source\r\n       * @param offset - defines the offset in the data source\r\n       * @param result - defines the target vector\r\n       */\r\n      Vector2.FromArrayToRef = function (array, offset, result) {\r\n          result.x = array[offset];\r\n          result.y = array[offset + 1];\r\n      };\r\n      /**\r\n       * Gets a new Vector2 located for \"amount\" (float) on the CatmullRom spline defined by the given four Vector2\r\n       * @param value1 - defines 1st point of control\r\n       * @param value2 - defines 2nd point of control\r\n       * @param value3 - defines 3rd point of control\r\n       * @param value4 - defines 4th point of control\r\n       * @param amount - defines the interpolation factor\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.CatmullRom = function (value1, value2, value3, value4, amount) {\r\n          var squared = amount * amount;\r\n          var cubed = amount * squared;\r\n          var x = 0.5 *\r\n              (2.0 * value2.x +\r\n                  (-value1.x + value3.x) * amount +\r\n                  (2.0 * value1.x - 5.0 * value2.x + 4.0 * value3.x - value4.x) * squared +\r\n                  (-value1.x + 3.0 * value2.x - 3.0 * value3.x + value4.x) * cubed);\r\n          var y = 0.5 *\r\n              (2.0 * value2.y +\r\n                  (-value1.y + value3.y) * amount +\r\n                  (2.0 * value1.y - 5.0 * value2.y + 4.0 * value3.y - value4.y) * squared +\r\n                  (-value1.y + 3.0 * value2.y - 3.0 * value3.y + value4.y) * cubed);\r\n          return new Vector2(x, y);\r\n      };\r\n      /**\r\n       * Returns a new Vector2 set with same the coordinates than \"value\" ones if the vector \"value\" is in the square defined by \"min\" and \"max\".\r\n       * If a coordinate of \"value\" is lower than \"min\" coordinates, the returned Vector2 is given this \"min\" coordinate.\r\n       * If a coordinate of \"value\" is greater than \"max\" coordinates, the returned Vector2 is given this \"max\" coordinate\r\n       * @param value - defines the value to clamp\r\n       * @param min - defines the lower limit\r\n       * @param max - defines the upper limit\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.Clamp = function (value, min, max) {\r\n          var x = value.x;\r\n          x = x > max.x ? max.x : x;\r\n          x = x < min.x ? min.x : x;\r\n          var y = value.y;\r\n          y = y > max.y ? max.y : y;\r\n          y = y < min.y ? min.y : y;\r\n          return new Vector2(x, y);\r\n      };\r\n      /**\r\n       * Returns a new Vector2 located for \"amount\" (float) on the Hermite spline defined by the vectors \"value1\", \"value3\", \"tangent1\", \"tangent2\"\r\n       * @param value1 - defines the 1st control point\r\n       * @param tangent1 - defines the outgoing tangent\r\n       * @param value2 - defines the 2nd control point\r\n       * @param tangent2 - defines the incoming tangent\r\n       * @param amount - defines the interpolation factor\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.Hermite = function (value1, tangent1, value2, tangent2, amount) {\r\n          var squared = amount * amount;\r\n          var cubed = amount * squared;\r\n          var part1 = 2.0 * cubed - 3.0 * squared + 1.0;\r\n          var part2 = -2.0 * cubed + 3.0 * squared;\r\n          var part3 = cubed - 2.0 * squared + amount;\r\n          var part4 = cubed - squared;\r\n          var x = value1.x * part1 + value2.x * part2 + tangent1.x * part3 + tangent2.x * part4;\r\n          var y = value1.y * part1 + value2.y * part2 + tangent1.y * part3 + tangent2.y * part4;\r\n          return new Vector2(x, y);\r\n      };\r\n      /**\r\n       * Returns a new Vector2 located for \"amount\" (float) on the linear interpolation between the vector \"start\" adn the vector \"end\".\r\n       * @param start - defines the start vector\r\n       * @param end - defines the end vector\r\n       * @param amount - defines the interpolation factor\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.Lerp = function (start, end, amount) {\r\n          var x = start.x + (end.x - start.x) * amount;\r\n          var y = start.y + (end.y - start.y) * amount;\r\n          return new Vector2(x, y);\r\n      };\r\n      /**\r\n       * Gets the dot product of the vector \"left\" and the vector \"right\"\r\n       * @param left - defines first vector\r\n       * @param right - defines second vector\r\n       * @returns the dot product (float)\r\n       */\r\n      Vector2.Dot = function (left, right) {\r\n          return left.x * right.x + left.y * right.y;\r\n      };\r\n      /**\r\n       * Returns a new Vector2 equal to the normalized given vector\r\n       * @param vector - defines the vector to normalize\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.Normalize = function (vector) {\r\n          var newVector = new Vector2(vector.x, vector.y);\r\n          newVector.normalize();\r\n          return newVector;\r\n      };\r\n      /**\r\n       * Gets a new Vector2 set with the minimal coordinate values from the \"left\" and \"right\" vectors\r\n       * @param left - defines 1st vector\r\n       * @param right - defines 2nd vector\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.Minimize = function (left, right) {\r\n          var x = left.x < right.x ? left.x : right.x;\r\n          var y = left.y < right.y ? left.y : right.y;\r\n          return new Vector2(x, y);\r\n      };\r\n      /**\r\n       * Gets a new Vecto2 set with the maximal coordinate values from the \"left\" and \"right\" vectors\r\n       * @param left - defines 1st vector\r\n       * @param right - defines 2nd vector\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.Maximize = function (left, right) {\r\n          var x = left.x > right.x ? left.x : right.x;\r\n          var y = left.y > right.y ? left.y : right.y;\r\n          return new Vector2(x, y);\r\n      };\r\n      /**\r\n       * Gets a new Vector2 set with the transformed coordinates of the given vector by the given transformation matrix\r\n       * @param vector - defines the vector to transform\r\n       * @param transformation - defines the matrix to apply\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.Transform = function (vector, transformation) {\r\n          var r = Vector2.Zero();\r\n          Vector2.TransformToRef(vector, transformation, r);\r\n          return r;\r\n      };\r\n      /**\r\n       * Transforms the given vector coordinates by the given transformation matrix and stores the result in the vector \"result\" coordinates\r\n       * @param vector - defines the vector to transform\r\n       * @param transformation - defines the matrix to apply\r\n       * @param result - defines the target vector\r\n       */\r\n      Vector2.TransformToRef = function (vector, transformation, result) {\r\n          var m = transformation.m;\r\n          var x = vector.x * m[0] + vector.y * m[4] + m[12];\r\n          var y = vector.x * m[1] + vector.y * m[5] + m[13];\r\n          result.x = x;\r\n          result.y = y;\r\n      };\r\n      /**\r\n       * Determines if a given vector is included in a triangle\r\n       * @param p - defines the vector to test\r\n       * @param p0 - defines 1st triangle point\r\n       * @param p1 - defines 2nd triangle point\r\n       * @param p2 - defines 3rd triangle point\r\n       * @returns true if the point \"p\" is in the triangle defined by the vertors \"p0\", \"p1\", \"p2\"\r\n       */\r\n      Vector2.PointInTriangle = function (p, p0, p1, p2) {\r\n          var a = (1 / 2) * (-p1.y * p2.x + p0.y * (-p1.x + p2.x) + p0.x * (p1.y - p2.y) + p1.x * p2.y);\r\n          var sign = a < 0 ? -1 : 1;\r\n          var s = (p0.y * p2.x - p0.x * p2.y + (p2.y - p0.y) * p.x + (p0.x - p2.x) * p.y) * sign;\r\n          var t = (p0.x * p1.y - p0.y * p1.x + (p0.y - p1.y) * p.x + (p1.x - p0.x) * p.y) * sign;\r\n          return s > 0 && t > 0 && s + t < 2 * a * sign;\r\n      };\r\n      /**\r\n       * Gets the distance between the vectors \"value1\" and \"value2\"\r\n       * @param value1 - defines first vector\r\n       * @param value2 - defines second vector\r\n       * @returns the distance between vectors\r\n       */\r\n      Vector2.Distance = function (value1, value2) {\r\n          return Math.sqrt(Vector2.DistanceSquared(value1, value2));\r\n      };\r\n      /**\r\n       * Returns the squared distance between the vectors \"value1\" and \"value2\"\r\n       * @param value1 - defines first vector\r\n       * @param value2 - defines second vector\r\n       * @returns the squared distance between vectors\r\n       */\r\n      Vector2.DistanceSquared = function (value1, value2) {\r\n          var x = value1.x - value2.x;\r\n          var y = value1.y - value2.y;\r\n          return x * x + y * y;\r\n      };\r\n      /**\r\n       * Gets a new Vector2 located at the center of the vectors \"value1\" and \"value2\"\r\n       * @param value1 - defines first vector\r\n       * @param value2 - defines second vector\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.Center = function (value1, value2) {\r\n          var center = Vector2.Add(value1, value2);\r\n          center.scaleInPlace(0.5);\r\n          return center;\r\n      };\r\n      /**\r\n       * Gets the shortest distance (float) between the point \"p\" and the segment defined by the two points \"segA\" and \"segB\".\r\n       * @param p - defines the middle point\r\n       * @param segA - defines one point of the segment\r\n       * @param segB - defines the other point of the segment\r\n       * @returns the shortest distance\r\n       */\r\n      Vector2.DistanceOfPointFromSegment = function (p, segA, segB) {\r\n          var l2 = Vector2.DistanceSquared(segA, segB);\r\n          if (l2 === 0.0) {\r\n              return Vector2.Distance(p, segA);\r\n          }\r\n          var v = segB.subtract(segA);\r\n          var t = Math.max(0, Math.min(1, Vector2.Dot(p.subtract(segA), v) / l2));\r\n          var proj = segA.add(v.multiplyByFloats(t, t));\r\n          return Vector2.Distance(p, proj);\r\n      };\r\n      /**\r\n       * Gets a string with the Vector2 coordinates\r\n       * @returns a string with the Vector2 coordinates\r\n       */\r\n      Vector2.prototype.toString = function () {\r\n          return '{X: ' + this.x + ' Y:' + this.y + '}';\r\n      };\r\n      /**\r\n       * Gets class name\r\n       * @returns the string \"Vector2\"\r\n       */\r\n      Vector2.prototype.getClassName = function () {\r\n          return 'Vector2';\r\n      };\r\n      /**\r\n       * Gets current vector hash code\r\n       * @returns the Vector2 hash code as a number\r\n       */\r\n      Vector2.prototype.getHashCode = function () {\r\n          var hash = this.x || 0;\r\n          hash = (hash * 397) ^ (this.y || 0);\r\n          return hash;\r\n      };\r\n      // Operators\r\n      /**\r\n       * Sets the Vector2 coordinates in the given array or FloatArray from the given index.\r\n       * @param array - defines the source array\r\n       * @param index - defines the offset in source array\r\n       * @returns the current Vector2\r\n       */\r\n      Vector2.prototype.toArray = function (array, index) {\r\n          if (index === void 0) { index = 0; }\r\n          array[index] = this.x;\r\n          array[index + 1] = this.y;\r\n          return this;\r\n      };\r\n      /**\r\n       * Copy the current vector to an array\r\n       * @returns a new array with 2 elements: the Vector2 coordinates.\r\n       */\r\n      Vector2.prototype.asArray = function () {\r\n          var result = new Array();\r\n          this.toArray(result, 0);\r\n          return result;\r\n      };\r\n      /**\r\n       * Sets the Vector2 coordinates with the given Vector2 coordinates\r\n       * @param source - defines the source Vector2\r\n       * @returns the current updated Vector2\r\n       */\r\n      Vector2.prototype.copyFrom = function (source) {\r\n          this.x = source.x;\r\n          this.y = source.y;\r\n          return this;\r\n      };\r\n      /**\r\n       * Sets the Vector2 coordinates with the given floats\r\n       * @param x - defines the first coordinate\r\n       * @param y - defines the second coordinate\r\n       * @returns the current updated Vector2\r\n       */\r\n      Vector2.prototype.copyFromFloats = function (x, y) {\r\n          this.x = x;\r\n          this.y = y;\r\n          return this;\r\n      };\r\n      /**\r\n       * Sets the Vector2 coordinates with the given floats\r\n       * @param x - defines the first coordinate\r\n       * @param y - defines the second coordinate\r\n       * @returns the current updated Vector2\r\n       */\r\n      Vector2.prototype.set = function (x, y) {\r\n          return this.copyFromFloats(x, y);\r\n      };\r\n      /**\r\n       * Add another vector with the current one\r\n       * @param otherVector - defines the other vector\r\n       * @returns a new Vector2 set with the addition of the current Vector2 and the given one coordinates\r\n       */\r\n      Vector2.prototype.add = function (otherVector) {\r\n          return new Vector2(this.x + otherVector.x, this.y + otherVector.y);\r\n      };\r\n      /**\r\n       * Sets the \"result\" coordinates with the addition of the current Vector2 and the given one coordinates\r\n       * @param otherVector - defines the other vector\r\n       * @param result - defines the target vector\r\n       * @returns the unmodified current Vector2\r\n       */\r\n      Vector2.prototype.addToRef = function (otherVector, result) {\r\n          result.x = this.x + otherVector.x;\r\n          result.y = this.y + otherVector.y;\r\n          return this;\r\n      };\r\n      /**\r\n       * Set the Vector2 coordinates by adding the given Vector2 coordinates\r\n       * @param otherVector - defines the other vector\r\n       * @returns the current updated Vector2\r\n       */\r\n      Vector2.prototype.addInPlace = function (otherVector) {\r\n          this.x += otherVector.x;\r\n          this.y += otherVector.y;\r\n          return this;\r\n      };\r\n      /**\r\n       * Gets a new Vector2 by adding the current Vector2 coordinates to the given Vector3 x, y coordinates\r\n       * @param otherVector - defines the other vector\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.prototype.addVector3 = function (otherVector) {\r\n          return new Vector2(this.x + otherVector.x, this.y + otherVector.y);\r\n      };\r\n      /**\r\n       * Gets a new Vector2 set with the subtracted coordinates of the given one from the current Vector2\r\n       * @param otherVector - defines the other vector\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.prototype.subtract = function (otherVector) {\r\n          return new Vector2(this.x - otherVector.x, this.y - otherVector.y);\r\n      };\r\n      /**\r\n       * Sets the \"result\" coordinates with the subtraction of the given one from the current Vector2 coordinates.\r\n       * @param otherVector - defines the other vector\r\n       * @param result - defines the target vector\r\n       * @returns the unmodified current Vector2\r\n       */\r\n      Vector2.prototype.subtractToRef = function (otherVector, result) {\r\n          result.x = this.x - otherVector.x;\r\n          result.y = this.y - otherVector.y;\r\n          return this;\r\n      };\r\n      /**\r\n       * Sets the current Vector2 coordinates by subtracting from it the given one coordinates\r\n       * @param otherVector - defines the other vector\r\n       * @returns the current updated Vector2\r\n       */\r\n      Vector2.prototype.subtractInPlace = function (otherVector) {\r\n          this.x -= otherVector.x;\r\n          this.y -= otherVector.y;\r\n          return this;\r\n      };\r\n      /**\r\n       * Multiplies in place the current Vector2 coordinates by the given ones\r\n       * @param otherVector - defines the other vector\r\n       * @returns the current updated Vector2\r\n       */\r\n      Vector2.prototype.multiplyInPlace = function (otherVector) {\r\n          this.x *= otherVector.x;\r\n          this.y *= otherVector.y;\r\n          return this;\r\n      };\r\n      /**\r\n       * Returns a new Vector2 set with the multiplication of the current Vector2 and the given one coordinates\r\n       * @param otherVector - defines the other vector\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.prototype.multiply = function (otherVector) {\r\n          return new Vector2(this.x * otherVector.x, this.y * otherVector.y);\r\n      };\r\n      /**\r\n       * Sets \"result\" coordinates with the multiplication of the current Vector2 and the given one coordinates\r\n       * @param otherVector - defines the other vector\r\n       * @param result - defines the target vector\r\n       * @returns the unmodified current Vector2\r\n       */\r\n      Vector2.prototype.multiplyToRef = function (otherVector, result) {\r\n          result.x = this.x * otherVector.x;\r\n          result.y = this.y * otherVector.y;\r\n          return this;\r\n      };\r\n      /**\r\n       * Gets a new Vector2 set with the Vector2 coordinates multiplied by the given floats\r\n       * @param x - defines the first coordinate\r\n       * @param y - defines the second coordinate\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.prototype.multiplyByFloats = function (x, y) {\r\n          return new Vector2(this.x * x, this.y * y);\r\n      };\r\n      /**\r\n       * Returns a new Vector2 set with the Vector2 coordinates divided by the given one coordinates\r\n       * @param otherVector - defines the other vector\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.prototype.divide = function (otherVector) {\r\n          return new Vector2(this.x / otherVector.x, this.y / otherVector.y);\r\n      };\r\n      /**\r\n       * Sets the \"result\" coordinates with the Vector2 divided by the given one coordinates\r\n       * @param otherVector - defines the other vector\r\n       * @param result - defines the target vector\r\n       * @returns the unmodified current Vector2\r\n       */\r\n      Vector2.prototype.divideToRef = function (otherVector, result) {\r\n          result.x = this.x / otherVector.x;\r\n          result.y = this.y / otherVector.y;\r\n          return this;\r\n      };\r\n      /**\r\n       * Divides the current Vector2 coordinates by the given ones\r\n       * @param otherVector - defines the other vector\r\n       * @returns the current updated Vector2\r\n       */\r\n      Vector2.prototype.divideInPlace = function (otherVector) {\r\n          return this.divideToRef(otherVector, this);\r\n      };\r\n      /**\r\n       * Gets a new Vector2 with current Vector2 negated coordinates\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.prototype.negate = function () {\r\n          return new Vector2(-this.x, -this.y);\r\n      };\r\n      /**\r\n       * Multiply the Vector2 coordinates by scale\r\n       * @param scale - defines the scaling factor\r\n       * @returns the current updated Vector2\r\n       */\r\n      Vector2.prototype.scaleInPlace = function (scale) {\r\n          this.x *= scale;\r\n          this.y *= scale;\r\n          return this;\r\n      };\r\n      /**\r\n       * Returns a new Vector2 scaled by \"scale\" from the current Vector2\r\n       * @param scale - defines the scaling factor\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.prototype.scale = function (scale) {\r\n          var result = new Vector2(0, 0);\r\n          this.scaleToRef(scale, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Scale the current Vector2 values by a factor to a given Vector2\r\n       * @param scale - defines the scale factor\r\n       * @param result - defines the Vector2 object where to store the result\r\n       * @returns the unmodified current Vector2\r\n       */\r\n      Vector2.prototype.scaleToRef = function (scale, result) {\r\n          result.x = this.x * scale;\r\n          result.y = this.y * scale;\r\n          return this;\r\n      };\r\n      /**\r\n       * Scale the current Vector2 values by a factor and add the result to a given Vector2\r\n       * @param scale - defines the scale factor\r\n       * @param result - defines the Vector2 object where to store the result\r\n       * @returns the unmodified current Vector2\r\n       */\r\n      Vector2.prototype.scaleAndAddToRef = function (scale, result) {\r\n          result.x += this.x * scale;\r\n          result.y += this.y * scale;\r\n          return this;\r\n      };\r\n      /**\r\n       * Gets a boolean if two vectors are equals\r\n       * @param otherVector - defines the other vector\r\n       * @returns true if the given vector coordinates strictly equal the current Vector2 ones\r\n       */\r\n      Vector2.prototype.equals = function (otherVector) {\r\n          return otherVector && this.x === otherVector.x && this.y === otherVector.y;\r\n      };\r\n      /**\r\n       * Gets a boolean if two vectors are equals (using an epsilon value)\r\n       * @param otherVector - defines the other vector\r\n       * @param epsilon - defines the minimal distance to consider equality\r\n       * @returns true if the given vector coordinates are close to the current ones by a distance of epsilon.\r\n       */\r\n      Vector2.prototype.equalsWithEpsilon = function (otherVector, epsilon) {\r\n          if (epsilon === void 0) { epsilon = Epsilon; }\r\n          return (otherVector &&\r\n              Scalar.WithinEpsilon(this.x, otherVector.x, epsilon) &&\r\n              Scalar.WithinEpsilon(this.y, otherVector.y, epsilon));\r\n      };\r\n      /**\r\n       * Gets a new Vector2 from current Vector2 floored values\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.prototype.floor = function () {\r\n          return new Vector2(Math.floor(this.x), Math.floor(this.y));\r\n      };\r\n      /**\r\n       * Gets a new Vector2 from current Vector2 floored values\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.prototype.fract = function () {\r\n          return new Vector2(this.x - Math.floor(this.x), this.y - Math.floor(this.y));\r\n      };\r\n      // Properties\r\n      /**\r\n       * Gets the length of the vector\r\n       * @returns the vector length (float)\r\n       */\r\n      Vector2.prototype.length = function () {\r\n          return Math.sqrt(this.x * this.x + this.y * this.y);\r\n      };\r\n      /**\r\n       * Gets the vector squared length\r\n       * @returns the vector squared length (float)\r\n       */\r\n      Vector2.prototype.lengthSquared = function () {\r\n          return this.x * this.x + this.y * this.y;\r\n      };\r\n      // Methods\r\n      /**\r\n       * Normalize the vector\r\n       * @returns the current updated Vector2\r\n       */\r\n      Vector2.prototype.normalize = function () {\r\n          var len = this.length();\r\n          if (len === 0) {\r\n              return this;\r\n          }\r\n          var num = 1.0 / len;\r\n          this.x *= num;\r\n          this.y *= num;\r\n          return this;\r\n      };\r\n      /**\r\n       * Gets a new Vector2 copied from the Vector2\r\n       * @returns a new Vector2\r\n       */\r\n      Vector2.prototype.clone = function () {\r\n          return new Vector2(this.x, this.y);\r\n      };\r\n      return Vector2;\r\n  }());\n\n  /**\r\n   * This represents an arc in a 2d space.\r\n   * @public\r\n   */\r\n  var Arc2 = /** @class */ (function () {\r\n      /**\r\n       * Creates an Arc object from the three given points : start, middle and end.\r\n       * @param startPoint - Defines the start point of the arc\r\n       * @param midPoint - Defines the midlle point of the arc\r\n       * @param endPoint - Defines the end point of the arc\r\n       */\r\n      function Arc2(\r\n      /** Defines the start point of the arc */\r\n      startPoint, \r\n      /** Defines the mid point of the arc */\r\n      midPoint, \r\n      /** Defines the end point of the arc */\r\n      endPoint) {\r\n          this.startPoint = startPoint;\r\n          this.midPoint = midPoint;\r\n          this.endPoint = endPoint;\r\n          var temp = Math.pow(midPoint.x, 2) + Math.pow(midPoint.y, 2);\r\n          var startToMid = (Math.pow(startPoint.x, 2) + Math.pow(startPoint.y, 2) - temp) / 2;\r\n          var midToEnd = (temp - Math.pow(endPoint.x, 2) - Math.pow(endPoint.y, 2)) / 2;\r\n          var det = (startPoint.x - midPoint.x) * (midPoint.y - endPoint.y) - (midPoint.x - endPoint.x) * (startPoint.y - midPoint.y);\r\n          this.centerPoint = new Vector2((startToMid * (midPoint.y - endPoint.y) - midToEnd * (startPoint.y - midPoint.y)) / det, ((startPoint.x - midPoint.x) * midToEnd - (midPoint.x - endPoint.x) * startToMid) / det);\r\n          this.radius = this.centerPoint.subtract(this.startPoint).length();\r\n          this.startAngle = Angle.BetweenTwoPoints(this.centerPoint, this.startPoint);\r\n          var a1 = this.startAngle.degrees();\r\n          var a2 = Angle.BetweenTwoPoints(this.centerPoint, this.midPoint).degrees();\r\n          var a3 = Angle.BetweenTwoPoints(this.centerPoint, this.endPoint).degrees();\r\n          // angles correction\r\n          if (a2 - a1 > +180.0) {\r\n              a2 -= 360.0;\r\n          }\r\n          if (a2 - a1 < -180.0) {\r\n              a2 += 360.0;\r\n          }\r\n          if (a3 - a2 > +180.0) {\r\n              a3 -= 360.0;\r\n          }\r\n          if (a3 - a2 < -180.0) {\r\n              a3 += 360.0;\r\n          }\r\n          this.orientation = a2 - a1 < 0 ? exports.Orientation.CW : exports.Orientation.CCW;\r\n          this.angle = Angle.FromDegrees(this.orientation === exports.Orientation.CW ? a1 - a3 : a3 - a1);\r\n      }\r\n      return Arc2;\r\n  }());\n\n  /**\r\n   * Defines the 3 main axes\r\n   * @public\r\n   */\r\n  var Axis = /** @class */ (function () {\r\n      function Axis() {\r\n      }\r\n      /** X axis */\r\n      Axis.X = new Vector3(1.0, 0.0, 0.0);\r\n      /** Y axis */\r\n      Axis.Y = new Vector3(0.0, 1.0, 0.0);\r\n      /** Z axis */\r\n      Axis.Z = new Vector3(0.0, 0.0, 1.0);\r\n      return Axis;\r\n  }());\n\n  /**\r\n   * Class used to represent a Bezier curve\r\n   * @public\r\n   */\r\n  var BezierCurve = /** @class */ (function () {\r\n      function BezierCurve() {\r\n      }\r\n      /**\r\n       * Returns the cubic Bezier interpolated value (float) at \"t\" (float) from the given x1, y1, x2, y2 floats\r\n       * @param t - defines the time\r\n       * @param x1 - defines the left coordinate on X axis\r\n       * @param y1 - defines the left coordinate on Y axis\r\n       * @param x2 - defines the right coordinate on X axis\r\n       * @param y2 - defines the right coordinate on Y axis\r\n       * @returns the interpolated value\r\n       */\r\n      BezierCurve.Interpolate = function (t, x1, y1, x2, y2) {\r\n          // Extract X (which is equal to time here)\r\n          var f0 = 1 - 3 * x2 + 3 * x1;\r\n          var f1 = 3 * x2 - 6 * x1;\r\n          var f2 = 3 * x1;\r\n          var refinedT = t;\r\n          for (var i = 0; i < 5; i++) {\r\n              var refinedT2 = refinedT * refinedT;\r\n              var refinedT3 = refinedT2 * refinedT;\r\n              var x = f0 * refinedT3 + f1 * refinedT2 + f2 * refinedT;\r\n              var slope = 1.0 / (3.0 * f0 * refinedT2 + 2.0 * f1 * refinedT + f2);\r\n              refinedT -= (x - t) * slope;\r\n              refinedT = Math.min(1, Math.max(0, refinedT));\r\n          }\r\n          // Resolve cubic bezier for the given x\r\n          return (3 * Math.pow(1 - refinedT, 2) * refinedT * y1 +\r\n              3 * (1 - refinedT) * Math.pow(refinedT, 2) * y2 +\r\n              Math.pow(refinedT, 3));\r\n      };\r\n      return BezierCurve;\r\n  }());\n\n  /**\r\n   * Class used to hold a RBGA color\r\n   * @public\r\n   */\r\n  var Color4 = /** @class */ (function () {\r\n      /**\r\n       * Creates a new Color4 object from red, green, blue values, all between 0 and 1\r\n       * @param r - defines the red component (between 0 and 1, default is 0)\r\n       * @param g - defines the green component (between 0 and 1, default is 0)\r\n       * @param b - defines the blue component (between 0 and 1, default is 0)\r\n       * @param a - defines the alpha component (between 0 and 1, default is 1)\r\n       */\r\n      function Color4(\r\n      /**\r\n       * Defines the red component (between 0 and 1, default is 0)\r\n       */\r\n      r, \r\n      /**\r\n       * Defines the green component (between 0 and 1, default is 0)\r\n       */\r\n      g, \r\n      /**\r\n       * Defines the blue component (between 0 and 1, default is 0)\r\n       */\r\n      b, \r\n      /**\r\n       * Defines the alpha component (between 0 and 1, default is 1)\r\n       */\r\n      a) {\r\n          if (r === void 0) { r = 0; }\r\n          if (g === void 0) { g = 0; }\r\n          if (b === void 0) { b = 0; }\r\n          if (a === void 0) { a = 1; }\r\n          this.r = r;\r\n          this.g = g;\r\n          this.b = b;\r\n          this.a = a;\r\n      }\r\n      // Statics\r\n      /**\r\n       * Creates a new Color4 from the string containing valid hexadecimal values\r\n       * @param hex - defines a string containing valid hexadecimal values\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.FromHexString = function (hex) {\r\n          if (hex.substring(0, 1) !== '#' || hex.length !== 9) {\r\n              return new Color4(0.0, 0.0, 0.0, 0.0);\r\n          }\r\n          var r = parseInt(hex.substring(1, 3), 16);\r\n          var g = parseInt(hex.substring(3, 5), 16);\r\n          var b = parseInt(hex.substring(5, 7), 16);\r\n          var a = parseInt(hex.substring(7, 9), 16);\r\n          return Color4.FromInts(r, g, b, a);\r\n      };\r\n      /**\r\n       * Creates a new Color4 object set with the linearly interpolated values of \"amount\" between the left Color4 object and the right Color4 object\r\n       * @param left - defines the start value\r\n       * @param right - defines the end value\r\n       * @param amount - defines the gradient factor\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.Lerp = function (left, right, amount) {\r\n          var result = new Color4(0.0, 0.0, 0.0, 0.0);\r\n          Color4.LerpToRef(left, right, amount, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Set the given \"result\" with the linearly interpolated values of \"amount\" between the left Color4 object and the right Color4 object\r\n       * @param left - defines the start value\r\n       * @param right - defines the end value\r\n       * @param amount - defines the gradient factor\r\n       * @param result - defines the Color4 object where to store data\r\n       */\r\n      Color4.LerpToRef = function (left, right, amount, result) {\r\n          result.r = left.r + (right.r - left.r) * amount;\r\n          result.g = left.g + (right.g - left.g) * amount;\r\n          result.b = left.b + (right.b - left.b) * amount;\r\n          result.a = left.a + (right.a - left.a) * amount;\r\n      };\r\n      /**\r\n       * Returns a Color4 value containing a red color\r\n       * @returns a new Color3 object\r\n       */\r\n      Color4.Red = function () {\r\n          return new Color4(1.0, 0, 0, 1.0);\r\n      };\r\n      /**\r\n       * Returns a Color4 value containing a green color\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.Green = function () {\r\n          return new Color4(0, 1.0, 0, 1.0);\r\n      };\r\n      /**\r\n       * Returns a Color4 value containing a blue color\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.Blue = function () {\r\n          return new Color4(0, 0, 1.0, 1.0);\r\n      };\r\n      /**\r\n       * Returns a Color4 value containing a black color\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.Black = function () {\r\n          return new Color4(0, 0, 0, 1);\r\n      };\r\n      /**\r\n       * Returns a Color4 value containing a white color\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.White = function () {\r\n          return new Color4(1, 1, 1, 1);\r\n      };\r\n      /**\r\n       * Returns a Color4 value containing a purple color\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.Purple = function () {\r\n          return new Color4(0.5, 0, 0.5, 1);\r\n      };\r\n      /**\r\n       * Returns a Color4 value containing a magenta color\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.Magenta = function () {\r\n          return new Color4(1, 0, 1, 1);\r\n      };\r\n      /**\r\n       * Returns a Color4 value containing a yellow color\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.Yellow = function () {\r\n          return new Color4(1, 1, 0, 1);\r\n      };\r\n      /**\r\n       * Returns a Color4 value containing a gray color\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.Gray = function () {\r\n          return new Color4(0.5, 0.5, 0.5, 1.0);\r\n      };\r\n      /**\r\n       * Returns a Color4 value containing a teal color\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.Teal = function () {\r\n          return new Color4(0, 1.0, 1.0, 1.0);\r\n      };\r\n      /**\r\n       * Returns a Color4 value containing a transparent color\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.Clear = function () {\r\n          return new Color4(0, 0, 0, 0);\r\n      };\r\n      /**\r\n       * Creates a new Color4 from a Color3 and an alpha value\r\n       * @param color3 - defines the source Color3 to read from\r\n       * @param alpha - defines the alpha component (1.0 by default)\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.FromColor3 = function (color3, alpha) {\r\n          if (alpha === void 0) { alpha = 1.0; }\r\n          return new Color4(color3.r, color3.g, color3.b, alpha);\r\n      };\r\n      /**\r\n       * Creates a new Color4 from the starting index element of the given array\r\n       * @param array - defines the source array to read from\r\n       * @param offset - defines the offset in the source array\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.FromArray = function (array, offset) {\r\n          if (offset === void 0) { offset = 0; }\r\n          return new Color4(array[offset], array[offset + 1], array[offset + 2], array[offset + 3]);\r\n      };\r\n      /**\r\n       * Creates a new Color3 from integer values (less than 256)\r\n       * @param r - defines the red component to read from (value between 0 and 255)\r\n       * @param g - defines the green component to read from (value between 0 and 255)\r\n       * @param b - defines the blue component to read from (value between 0 and 255)\r\n       * @param a - defines the alpha component to read from (value between 0 and 255)\r\n       * @returns a new Color3 object\r\n       */\r\n      Color4.FromInts = function (r, g, b, a) {\r\n          return new Color4(r / 255.0, g / 255.0, b / 255.0, a / 255.0);\r\n      };\r\n      /**\r\n       * Check the content of a given array and convert it to an array containing RGBA data\r\n       * If the original array was already containing count * 4 values then it is returned directly\r\n       * @param colors - defines the array to check\r\n       * @param count - defines the number of RGBA data to expect\r\n       * @returns an array containing count * 4 values (RGBA)\r\n       */\r\n      Color4.CheckColors4 = function (colors, count) {\r\n          // Check if color3 was used\r\n          if (colors.length === count * 3) {\r\n              var colors4 = [];\r\n              for (var index = 0; index < colors.length; index += 3) {\r\n                  var newIndex = (index / 3) * 4;\r\n                  colors4[newIndex] = colors[index];\r\n                  colors4[newIndex + 1] = colors[index + 1];\r\n                  colors4[newIndex + 2] = colors[index + 2];\r\n                  colors4[newIndex + 3] = 1.0;\r\n              }\r\n              return colors4;\r\n          }\r\n          return colors;\r\n      };\r\n      // Operators\r\n      /**\r\n       * Adds in place the given Color4 values to the current Color4 object\r\n       * @param right - defines the second operand\r\n       * @returns the current updated Color4 object\r\n       */\r\n      Color4.prototype.addInPlace = function (right) {\r\n          this.r += right.r;\r\n          this.g += right.g;\r\n          this.b += right.b;\r\n          this.a += right.a;\r\n          return this;\r\n      };\r\n      /**\r\n       * Creates a new array populated with 4 numeric elements : red, green, blue, alpha values\r\n       * @returns the new array\r\n       */\r\n      Color4.prototype.asArray = function () {\r\n          var result = new Array();\r\n          this.toArray(result, 0);\r\n          return result;\r\n      };\r\n      /**\r\n       * Stores from the starting index in the given array the Color4 successive values\r\n       * @param array - defines the array where to store the r,g,b components\r\n       * @param index - defines an optional index in the target array to define where to start storing values\r\n       * @returns the current Color4 object\r\n       */\r\n      Color4.prototype.toArray = function (array, index) {\r\n          if (index === void 0) { index = 0; }\r\n          array[index] = this.r;\r\n          array[index + 1] = this.g;\r\n          array[index + 2] = this.b;\r\n          array[index + 3] = this.a;\r\n          return this;\r\n      };\r\n      /**\r\n       * Creates a new Color4 set with the added values of the current Color4 and of the given one\r\n       * @param right - defines the second operand\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.prototype.add = function (right) {\r\n          return new Color4(this.r + right.r, this.g + right.g, this.b + right.b, this.a + right.a);\r\n      };\r\n      /**\r\n       * Creates a new Color4 set with the subtracted values of the given one from the current Color4\r\n       * @param right - defines the second operand\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.prototype.subtract = function (right) {\r\n          return new Color4(this.r - right.r, this.g - right.g, this.b - right.b, this.a - right.a);\r\n      };\r\n      /**\r\n       * Subtracts the given ones from the current Color4 values and stores the results in \"result\"\r\n       * @param right - defines the second operand\r\n       * @param result - defines the Color4 object where to store the result\r\n       * @returns the current Color4 object\r\n       */\r\n      Color4.prototype.subtractToRef = function (right, result) {\r\n          result.r = this.r - right.r;\r\n          result.g = this.g - right.g;\r\n          result.b = this.b - right.b;\r\n          result.a = this.a - right.a;\r\n          return this;\r\n      };\r\n      /**\r\n       * Creates a new Color4 with the current Color4 values multiplied by scale\r\n       * @param scale - defines the scaling factor to apply\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.prototype.scale = function (scale) {\r\n          return new Color4(this.r * scale, this.g * scale, this.b * scale, this.a * scale);\r\n      };\r\n      /**\r\n       * Multiplies the current Color4 values by scale and stores the result in \"result\"\r\n       * @param scale - defines the scaling factor to apply\r\n       * @param result - defines the Color4 object where to store the result\r\n       * @returns the current unmodified Color4\r\n       */\r\n      Color4.prototype.scaleToRef = function (scale, result) {\r\n          result.r = this.r * scale;\r\n          result.g = this.g * scale;\r\n          result.b = this.b * scale;\r\n          result.a = this.a * scale;\r\n          return this;\r\n      };\r\n      /**\r\n       * Scale the current Color4 values by a factor and add the result to a given Color4\r\n       * @param scale - defines the scale factor\r\n       * @param result - defines the Color4 object where to store the result\r\n       * @returns the unmodified current Color4\r\n       */\r\n      Color4.prototype.scaleAndAddToRef = function (scale, result) {\r\n          result.r += this.r * scale;\r\n          result.g += this.g * scale;\r\n          result.b += this.b * scale;\r\n          result.a += this.a * scale;\r\n          return this;\r\n      };\r\n      /**\r\n       * Clamps the rgb values by the min and max values and stores the result into \"result\"\r\n       * @param min - defines minimum clamping value (default is 0)\r\n       * @param max - defines maximum clamping value (default is 1)\r\n       * @param result - defines color to store the result into.\r\n       * @returns the cuurent Color4\r\n       */\r\n      Color4.prototype.clampToRef = function (min, max, result) {\r\n          if (min === void 0) { min = 0; }\r\n          if (max === void 0) { max = 1; }\r\n          result.r = Scalar.Clamp(this.r, min, max);\r\n          result.g = Scalar.Clamp(this.g, min, max);\r\n          result.b = Scalar.Clamp(this.b, min, max);\r\n          result.a = Scalar.Clamp(this.a, min, max);\r\n          return this;\r\n      };\r\n      /**\r\n       * Multipy an Color4 value by another and return a new Color4 object\r\n       * @param color - defines the Color4 value to multiply by\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.prototype.multiply = function (color) {\r\n          return new Color4(this.r * color.r, this.g * color.g, this.b * color.b, this.a * color.a);\r\n      };\r\n      /**\r\n       * Multipy a Color4 value by another and push the result in a reference value\r\n       * @param color - defines the Color4 value to multiply by\r\n       * @param result - defines the Color4 to fill the result in\r\n       * @returns the result Color4\r\n       */\r\n      Color4.prototype.multiplyToRef = function (color, result) {\r\n          result.r = this.r * color.r;\r\n          result.g = this.g * color.g;\r\n          result.b = this.b * color.b;\r\n          result.a = this.a * color.a;\r\n          return result;\r\n      };\r\n      /**\r\n       * Creates a string with the Color4 current values\r\n       * @returns the string representation of the Color4 object\r\n       */\r\n      Color4.prototype.toString = function () {\r\n          return '{R: ' + this.r + ' G:' + this.g + ' B:' + this.b + ' A:' + this.a + '}';\r\n      };\r\n      /**\r\n       * Returns the string \"Color4\"\r\n       * @returns \"Color4\"\r\n       */\r\n      Color4.prototype.getClassName = function () {\r\n          return 'Color4';\r\n      };\r\n      /**\r\n       * Compute the Color4 hash code\r\n       * @returns an unique number that can be used to hash Color4 objects\r\n       */\r\n      Color4.prototype.getHashCode = function () {\r\n          var hash = this.r || 0;\r\n          hash = (hash * 397) ^ (this.g || 0);\r\n          hash = (hash * 397) ^ (this.b || 0);\r\n          hash = (hash * 397) ^ (this.a || 0);\r\n          return hash;\r\n      };\r\n      /**\r\n       * Creates a new Color4 copied from the current one\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.prototype.clone = function () {\r\n          return new Color4(this.r, this.g, this.b, this.a);\r\n      };\r\n      /**\r\n       * Copies the given Color4 values into the current one\r\n       * @param source - defines the source Color4 object\r\n       * @returns the current updated Color4 object\r\n       */\r\n      Color4.prototype.copyFrom = function (source) {\r\n          this.r = source.r;\r\n          this.g = source.g;\r\n          this.b = source.b;\r\n          this.a = source.a;\r\n          return this;\r\n      };\r\n      /**\r\n       * Copies the given float values into the current one\r\n       * @param r - defines the red component to read from\r\n       * @param g - defines the green component to read from\r\n       * @param b - defines the blue component to read from\r\n       * @param a - defines the alpha component to read from\r\n       * @returns the current updated Color4 object\r\n       */\r\n      Color4.prototype.copyFromFloats = function (r, g, b, a) {\r\n          this.r = r;\r\n          this.g = g;\r\n          this.b = b;\r\n          this.a = a;\r\n          return this;\r\n      };\r\n      /**\r\n       * Copies the given float values into the current one\r\n       * @param r - defines the red component to read from\r\n       * @param g - defines the green component to read from\r\n       * @param b - defines the blue component to read from\r\n       * @param a - defines the alpha component to read from\r\n       * @returns the current updated Color4 object\r\n       */\r\n      Color4.prototype.set = function (r, g, b, a) {\r\n          return this.copyFromFloats(r, g, b, a);\r\n      };\r\n      /**\r\n       * Compute the Color4 hexadecimal code as a string\r\n       * @returns a string containing the hexadecimal representation of the Color4 object\r\n       */\r\n      Color4.prototype.toHexString = function () {\r\n          var intR = (this.r * 255) | 0;\r\n          var intG = (this.g * 255) | 0;\r\n          var intB = (this.b * 255) | 0;\r\n          var intA = (this.a * 255) | 0;\r\n          return '#' + Scalar.ToHex(intR) + Scalar.ToHex(intG) + Scalar.ToHex(intB) + Scalar.ToHex(intA);\r\n      };\r\n      /**\r\n       * Computes a new Color4 converted from the current one to linear space\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.prototype.toLinearSpace = function () {\r\n          var convertedColor = new Color4();\r\n          this.toLinearSpaceToRef(convertedColor);\r\n          return convertedColor;\r\n      };\r\n      /**\r\n       * Converts the Color4 values to linear space and stores the result in \"convertedColor\"\r\n       * @param convertedColor - defines the Color4 object where to store the linear space version\r\n       * @returns the unmodified Color4\r\n       */\r\n      Color4.prototype.toLinearSpaceToRef = function (convertedColor) {\r\n          convertedColor.r = Math.pow(this.r, ToLinearSpace);\r\n          convertedColor.g = Math.pow(this.g, ToLinearSpace);\r\n          convertedColor.b = Math.pow(this.b, ToLinearSpace);\r\n          convertedColor.a = this.a;\r\n          return this;\r\n      };\r\n      /**\r\n       * Computes a new Color4 converted from the current one to gamma space\r\n       * @returns a new Color4 object\r\n       */\r\n      Color4.prototype.toGammaSpace = function () {\r\n          var convertedColor = new Color4();\r\n          this.toGammaSpaceToRef(convertedColor);\r\n          return convertedColor;\r\n      };\r\n      /**\r\n       * Converts the Color4 values to gamma space and stores the result in \"convertedColor\"\r\n       * @param convertedColor - defines the Color4 object where to store the gamma space version\r\n       * @returns the unmodified Color4\r\n       */\r\n      Color4.prototype.toGammaSpaceToRef = function (convertedColor) {\r\n          convertedColor.r = Math.pow(this.r, ToGammaSpace);\r\n          convertedColor.g = Math.pow(this.g, ToGammaSpace);\r\n          convertedColor.b = Math.pow(this.b, ToGammaSpace);\r\n          convertedColor.a = this.a;\r\n          return this;\r\n      };\r\n      return Color4;\r\n  }());\n\n  /**\r\n   * Class used to hold a RBG color\r\n   * @public\r\n   */\r\n  var Color3 = /** @class */ (function () {\r\n      /**\r\n       * Creates a new Color3 object from red, green, blue values, all between 0 and 1\r\n       * @param r - defines the red component (between 0 and 1, default is 0)\r\n       * @param g - defines the green component (between 0 and 1, default is 0)\r\n       * @param b - defines the blue component (between 0 and 1, default is 0)\r\n       */\r\n      function Color3(\r\n      /**\r\n       * Defines the red component (between 0 and 1, default is 0)\r\n       */\r\n      r, \r\n      /**\r\n       * Defines the green component (between 0 and 1, default is 0)\r\n       */\r\n      g, \r\n      /**\r\n       * Defines the blue component (between 0 and 1, default is 0)\r\n       */\r\n      b) {\r\n          if (r === void 0) { r = 0; }\r\n          if (g === void 0) { g = 0; }\r\n          if (b === void 0) { b = 0; }\r\n          this.r = r;\r\n          this.g = g;\r\n          this.b = b;\r\n      }\r\n      // Statics\r\n      /**\r\n       * Creates a new Color3 from the string containing valid hexadecimal values\r\n       * @param hex - defines a string containing valid hexadecimal values\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.FromHexString = function (hex) {\r\n          if (hex.substring(0, 1) !== '#' || hex.length !== 7) {\r\n              return new Color3(0, 0, 0);\r\n          }\r\n          var r = parseInt(hex.substring(1, 3), 16);\r\n          var g = parseInt(hex.substring(3, 5), 16);\r\n          var b = parseInt(hex.substring(5, 7), 16);\r\n          return Color3.FromInts(r, g, b);\r\n      };\r\n      /**\r\n       * Creates a new Vector3 from the starting index of the given array\r\n       * @param array - defines the source array\r\n       * @param offset - defines an offset in the source array\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.FromArray = function (array, offset) {\r\n          if (offset === void 0) { offset = 0; }\r\n          return new Color3(array[offset], array[offset + 1], array[offset + 2]);\r\n      };\r\n      /**\r\n       * Creates a new Color3 from integer values (less than 256)\r\n       * @param r - defines the red component to read from (value between 0 and 255)\r\n       * @param g - defines the green component to read from (value between 0 and 255)\r\n       * @param b - defines the blue component to read from (value between 0 and 255)\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.FromInts = function (r, g, b) {\r\n          return new Color3(r / 255.0, g / 255.0, b / 255.0);\r\n      };\r\n      /**\r\n       * Creates a new Color3 with values linearly interpolated of \"amount\" between the start Color3 and the end Color3\r\n       * @param start - defines the start Color3 value\r\n       * @param end - defines the end Color3 value\r\n       * @param amount - defines the gradient value between start and end\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.Lerp = function (start, end, amount) {\r\n          var result = new Color3(0.0, 0.0, 0.0);\r\n          Color3.LerpToRef(start, end, amount, result);\r\n          return result;\r\n      };\r\n      /**\r\n       * Creates a new Color3 with values linearly interpolated of \"amount\" between the start Color3 and the end Color3\r\n       * @param left - defines the start value\r\n       * @param right - defines the end value\r\n       * @param amount - defines the gradient factor\r\n       * @param result - defines the Color3 object where to store the result\r\n       */\r\n      Color3.LerpToRef = function (left, right, amount, result) {\r\n          result.r = left.r + (right.r - left.r) * amount;\r\n          result.g = left.g + (right.g - left.g) * amount;\r\n          result.b = left.b + (right.b - left.b) * amount;\r\n      };\r\n      /**\r\n       * Returns a Color3 value containing a red color\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.Red = function () {\r\n          return new Color3(1, 0, 0);\r\n      };\r\n      /**\r\n       * Returns a Color3 value containing a green color\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.Green = function () {\r\n          return new Color3(0, 1, 0);\r\n      };\r\n      /**\r\n       * Returns a Color3 value containing a blue color\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.Blue = function () {\r\n          return new Color3(0, 0, 1);\r\n      };\r\n      /**\r\n       * Returns a Color3 value containing a black color\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.Black = function () {\r\n          return new Color3(0, 0, 0);\r\n      };\r\n      /**\r\n       * Returns a Color3 value containing a white color\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.White = function () {\r\n          return new Color3(1, 1, 1);\r\n      };\r\n      /**\r\n       * Returns a Color3 value containing a purple color\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.Purple = function () {\r\n          return new Color3(0.5, 0, 0.5);\r\n      };\r\n      /**\r\n       * Returns a Color3 value containing a magenta color\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.Magenta = function () {\r\n          return new Color3(1, 0, 1);\r\n      };\r\n      /**\r\n       * Returns a Color3 value containing a yellow color\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.Yellow = function () {\r\n          return new Color3(1, 1, 0);\r\n      };\r\n      /**\r\n       * Returns a Color3 value containing a gray color\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.Gray = function () {\r\n          return new Color3(0.5, 0.5, 0.5);\r\n      };\r\n      /**\r\n       * Returns a Color3 value containing a teal color\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.Teal = function () {\r\n          return new Color3(0, 1.0, 1.0);\r\n      };\r\n      /**\r\n       * Returns a Color3 value containing a random color\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.Random = function () {\r\n          return new Color3(Math.random(), Math.random(), Math.random());\r\n      };\r\n      /**\r\n       * Creates a string with the Color3 current values\r\n       * @returns the string representation of the Color3 object\r\n       */\r\n      Color3.prototype.toString = function () {\r\n          return '{R: ' + this.r + ' G:' + this.g + ' B:' + this.b + '}';\r\n      };\r\n      /**\r\n       * Returns the string \"Color3\"\r\n       * @returns \"Color3\"\r\n       */\r\n      Color3.prototype.getClassName = function () {\r\n          return 'Color3';\r\n      };\r\n      /**\r\n       * Compute the Color3 hash code\r\n       * @returns an unique number that can be used to hash Color3 objects\r\n       */\r\n      Color3.prototype.getHashCode = function () {\r\n          var hash = this.r || 0;\r\n          hash = (hash * 397) ^ (this.g || 0);\r\n          hash = (hash * 397) ^ (this.b || 0);\r\n          return hash;\r\n      };\r\n      // Operators\r\n      /**\r\n       * Stores in the given array from the given starting index the red, green, blue values as successive elements\r\n       * @param array - defines the array where to store the r,g,b components\r\n       * @param index - defines an optional index in the target array to define where to start storing values\r\n       * @returns the current Color3 object\r\n       */\r\n      Color3.prototype.toArray = function (array, index) {\r\n          if (index === void 0) { index = 0; }\r\n          array[index] = this.r;\r\n          array[index + 1] = this.g;\r\n          array[index + 2] = this.b;\r\n          return this;\r\n      };\r\n      /**\r\n       * Returns a new Color4 object from the current Color3 and the given alpha\r\n       * @param alpha - defines the alpha component on the new Color4 object (default is 1)\r\n       * @returns a new Color4 object\r\n       */\r\n      Color3.prototype.toColor4 = function (alpha) {\r\n          if (alpha === void 0) { alpha = 1; }\r\n          return new Color4(this.r, this.g, this.b, alpha);\r\n      };\r\n      /**\r\n       * Returns a new array populated with 3 numeric elements : red, green and blue values\r\n       * @returns the new array\r\n       */\r\n      Color3.prototype.asArray = function () {\r\n          var result = new Array();\r\n          this.toArray(result, 0);\r\n          return result;\r\n      };\r\n      /**\r\n       * Returns the luminance value\r\n       * @returns a float value\r\n       */\r\n      Color3.prototype.toLuminance = function () {\r\n          return this.r * 0.3 + this.g * 0.59 + this.b * 0.11;\r\n      };\r\n      /**\r\n       * Multiply each Color3 rgb values by the given Color3 rgb values in a new Color3 object\r\n       * @param otherColor - defines the second operand\r\n       * @returns the new Color3 object\r\n       */\r\n      Color3.prototype.multiply = function (otherColor) {\r\n          return new Color3(this.r * otherColor.r, this.g * otherColor.g, this.b * otherColor.b);\r\n      };\r\n      /**\r\n       * Multiply the rgb values of the Color3 and the given Color3 and stores the result in the object \"result\"\r\n       * @param otherColor - defines the second operand\r\n       * @param result - defines the Color3 object where to store the result\r\n       * @returns the current Color3\r\n       */\r\n      Color3.prototype.multiplyToRef = function (otherColor, result) {\r\n          result.r = this.r * otherColor.r;\r\n          result.g = this.g * otherColor.g;\r\n          result.b = this.b * otherColor.b;\r\n          return this;\r\n      };\r\n      /**\r\n       * Determines equality between Color3 objects\r\n       * @param otherColor - defines the second operand\r\n       * @returns true if the rgb values are equal to the given ones\r\n       */\r\n      Color3.prototype.equals = function (otherColor) {\r\n          return otherColor && this.r === otherColor.r && this.g === otherColor.g && this.b === otherColor.b;\r\n      };\r\n      /**\r\n       * Determines equality between the current Color3 object and a set of r,b,g values\r\n       * @param r - defines the red component to check\r\n       * @param g - defines the green component to check\r\n       * @param b - defines the blue component to check\r\n       * @returns true if the rgb values are equal to the given ones\r\n       */\r\n      Color3.prototype.equalsFloats = function (r, g, b) {\r\n          return this.r === r && this.g === g && this.b === b;\r\n      };\r\n      /**\r\n       * Multiplies in place each rgb value by scale\r\n       * @param scale - defines the scaling factor\r\n       * @returns the updated Color3\r\n       */\r\n      Color3.prototype.scale = function (scale) {\r\n          return new Color3(this.r * scale, this.g * scale, this.b * scale);\r\n      };\r\n      /**\r\n       * Multiplies the rgb values by scale and stores the result into \"result\"\r\n       * @param scale - defines the scaling factor\r\n       * @param result - defines the Color3 object where to store the result\r\n       * @returns the unmodified current Color3\r\n       */\r\n      Color3.prototype.scaleToRef = function (scale, result) {\r\n          result.r = this.r * scale;\r\n          result.g = this.g * scale;\r\n          result.b = this.b * scale;\r\n          return this;\r\n      };\r\n      /**\r\n       * Scale the current Color3 values by a factor and add the result to a given Color3\r\n       * @param scale - defines the scale factor\r\n       * @param result - defines color to store the result into\r\n       * @returns the unmodified current Color3\r\n       */\r\n      Color3.prototype.scaleAndAddToRef = function (scale, result) {\r\n          result.r += this.r * scale;\r\n          result.g += this.g * scale;\r\n          result.b += this.b * scale;\r\n          return this;\r\n      };\r\n      /**\r\n       * Clamps the rgb values by the min and max values and stores the result into \"result\"\r\n       * @param min - defines minimum clamping value (default is 0)\r\n       * @param max - defines maximum clamping value (default is 1)\r\n       * @param result - defines color to store the result into\r\n       * @returns the original Color3\r\n       */\r\n      Color3.prototype.clampToRef = function (min, max, result) {\r\n          if (min === void 0) { min = 0; }\r\n          if (max === void 0) { max = 1; }\r\n          result.r = Scalar.Clamp(this.r, min, max);\r\n          result.g = Scalar.Clamp(this.g, min, max);\r\n          result.b = Scalar.Clamp(this.b, min, max);\r\n          return this;\r\n      };\r\n      /**\r\n       * Creates a new Color3 set with the added values of the current Color3 and of the given one\r\n       * @param otherColor - defines the second operand\r\n       * @returns the new Color3\r\n       */\r\n      Color3.prototype.add = function (otherColor) {\r\n          return new Color3(this.r + otherColor.r, this.g + otherColor.g, this.b + otherColor.b);\r\n      };\r\n      /**\r\n       * Stores the result of the addition of the current Color3 and given one rgb values into \"result\"\r\n       * @param otherColor - defines the second operand\r\n       * @param result - defines Color3 object to store the result into\r\n       * @returns the unmodified current Color3\r\n       */\r\n      Color3.prototype.addToRef = function (otherColor, result) {\r\n          result.r = this.r + otherColor.r;\r\n          result.g = this.g + otherColor.g;\r\n          result.b = this.b + otherColor.b;\r\n          return this;\r\n      };\r\n      /**\r\n       * Returns a new Color3 set with the subtracted values of the given one from the current Color3\r\n       * @param otherColor - defines the second operand\r\n       * @returns the new Color3\r\n       */\r\n      Color3.prototype.subtract = function (otherColor) {\r\n          return new Color3(this.r - otherColor.r, this.g - otherColor.g, this.b - otherColor.b);\r\n      };\r\n      /**\r\n       * Stores the result of the subtraction of given one from the current Color3 rgb values into \"result\"\r\n       * @param otherColor - defines the second operand\r\n       * @param result - defines Color3 object to store the result into\r\n       * @returns the unmodified current Color3\r\n       */\r\n      Color3.prototype.subtractToRef = function (otherColor, result) {\r\n          result.r = this.r - otherColor.r;\r\n          result.g = this.g - otherColor.g;\r\n          result.b = this.b - otherColor.b;\r\n          return this;\r\n      };\r\n      /**\r\n       * Copy the current object\r\n       * @returns a new Color3 copied the current one\r\n       */\r\n      Color3.prototype.clone = function () {\r\n          return new Color3(this.r, this.g, this.b);\r\n      };\r\n      /**\r\n       * Copies the rgb values from the source in the current Color3\r\n       * @param source - defines the source Color3 object\r\n       * @returns the updated Color3 object\r\n       */\r\n      Color3.prototype.copyFrom = function (source) {\r\n          this.r = source.r;\r\n          this.g = source.g;\r\n          this.b = source.b;\r\n          return this;\r\n      };\r\n      /**\r\n       * Updates the Color3 rgb values from the given floats\r\n       * @param r - defines the red component to read from\r\n       * @param g - defines the green component to read from\r\n       * @param b - defines the blue component to read from\r\n       * @returns the current Color3 object\r\n       */\r\n      Color3.prototype.copyFromFloats = function (r, g, b) {\r\n          this.r = r;\r\n          this.g = g;\r\n          this.b = b;\r\n          return this;\r\n      };\r\n      /**\r\n       * Updates the Color3 rgb values from the given floats\r\n       * @param r - defines the red component to read from\r\n       * @param g - defines the green component to read from\r\n       * @param b - defines the blue component to read from\r\n       * @returns the current Color3 object\r\n       */\r\n      Color3.prototype.set = function (r, g, b) {\r\n          return this.copyFromFloats(r, g, b);\r\n      };\r\n      /**\r\n       * Compute the Color3 hexadecimal code as a string\r\n       * @returns a string containing the hexadecimal representation of the Color3 object\r\n       */\r\n      Color3.prototype.toHexString = function () {\r\n          var intR = (this.r * 255) | 0;\r\n          var intG = (this.g * 255) | 0;\r\n          var intB = (this.b * 255) | 0;\r\n          return '#' + Scalar.ToHex(intR) + Scalar.ToHex(intG) + Scalar.ToHex(intB);\r\n      };\r\n      /**\r\n       * Computes a new Color3 converted from the current one to linear space\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.prototype.toLinearSpace = function () {\r\n          var convertedColor = new Color3();\r\n          this.toLinearSpaceToRef(convertedColor);\r\n          return convertedColor;\r\n      };\r\n      /**\r\n       * Converts the Color3 values to linear space and stores the result in \"convertedColor\"\r\n       * @param convertedColor - defines the Color3 object where to store the linear space version\r\n       * @returns the unmodified Color3\r\n       */\r\n      Color3.prototype.toLinearSpaceToRef = function (convertedColor) {\r\n          convertedColor.r = Math.pow(this.r, ToLinearSpace);\r\n          convertedColor.g = Math.pow(this.g, ToLinearSpace);\r\n          convertedColor.b = Math.pow(this.b, ToLinearSpace);\r\n          return this;\r\n      };\r\n      /**\r\n       * Computes a new Color3 converted from the current one to gamma space\r\n       * @returns a new Color3 object\r\n       */\r\n      Color3.prototype.toGammaSpace = function () {\r\n          var convertedColor = new Color3();\r\n          this.toGammaSpaceToRef(convertedColor);\r\n          return convertedColor;\r\n      };\r\n      /**\r\n       * Converts the Color3 values to gamma space and stores the result in \"convertedColor\"\r\n       * @param convertedColor - defines the Color3 object where to store the gamma space version\r\n       * @returns the unmodified Color3\r\n       */\r\n      Color3.prototype.toGammaSpaceToRef = function (convertedColor) {\r\n          convertedColor.r = Math.pow(this.r, ToGammaSpace);\r\n          convertedColor.g = Math.pow(this.g, ToGammaSpace);\r\n          convertedColor.b = Math.pow(this.b, ToGammaSpace);\r\n          return this;\r\n      };\r\n      /**\r\n       * Serializes Color3\r\n       */\r\n      Color3.prototype.toJSON = function () {\r\n          return {\r\n              r: this.r,\r\n              g: this.g,\r\n              b: this.b\r\n          };\r\n      };\r\n      return Color3;\r\n  }());\n\n  /**\r\n   * A Curve3 object is a logical object, so not a mesh, to handle curves in the 3D geometric space.\r\n   * A Curve3 is designed from a series of successive Vector3.\r\n   * {@link https://doc.babylonjs.com/how_to/how_to_use_curve3 }\r\n   * @public\r\n   */\r\n  var Curve3 = /** @class */ (function () {\r\n      /**\r\n       * A Curve3 object is a logical object, so not a mesh, to handle curves in the 3D geometric space.\r\n       * A Curve3 is designed from a series of successive Vector3.\r\n       * {@link http://doc.babylonjs.com/tutorials/How_to_use_Curve3#curve3-object | Tutorial }\r\n       * @param points - points which make up the curve\r\n       */\r\n      function Curve3(points) {\r\n          this._length = 0.0;\r\n          this._points = points;\r\n          this._length = this._computeLength(points);\r\n      }\r\n      /**\r\n       * Returns a Curve3 object along a Quadratic Bezier curve : http://doc.babylonjs.com/tutorials/How_to_use_Curve3#quadratic-bezier-curve\r\n       * @param v0 - (Vector3) the origin point of the Quadratic Bezier\r\n       * @param v1 - (Vector3) the control point\r\n       * @param v2 - (Vector3) the end point of the Quadratic Bezier\r\n       * @param nbPoints - (integer) the wanted number of points in the curve\r\n       * @returns the created Curve3\r\n       */\r\n      Curve3.CreateQuadraticBezier = function (v0, v1, v2, nbPoints) {\r\n          // tslint:disable-next-line:no-parameter-reassignment\r\n          nbPoints = nbPoints > 2 ? nbPoints : 3;\r\n          var bez = new Array();\r\n          var equation = function (t, val0, val1, val2) {\r\n              var res = (1.0 - t) * (1.0 - t) * val0 + 2.0 * t * (1.0 - t) * val1 + t * t * val2;\r\n              return res;\r\n          };\r\n          for (var i = 0; i <= nbPoints; i++) {\r\n              bez.push(new Vector3(equation(i / nbPoints, v0.x, v1.x, v2.x), equation(i / nbPoints, v0.y, v1.y, v2.y), equation(i / nbPoints, v0.z, v1.z, v2.z)));\r\n          }\r\n          return new Curve3(bez);\r\n      };\r\n      /**\r\n       * Returns a Curve3 object along a Cubic Bezier curve : http://doc.babylonjs.com/tutorials/How_to_use_Curve3#cubic-bezier-curve\r\n       * @param v0 - (Vector3) the origin point of the Cubic Bezier\r\n       * @param v1 - (Vector3) the first control point\r\n       * @param v2 - (Vector3) the second control point\r\n       * @param v3 - (Vector3) the end point of the Cubic Bezier\r\n       * @param nbPoints - (integer) the wanted number of points in the curve\r\n       * @returns the created Curve3\r\n       */\r\n      Curve3.CreateCubicBezier = function (v0, v1, v2, v3, nbPoints) {\r\n          // tslint:disable-next-line:no-parameter-reassignment\r\n          nbPoints = nbPoints > 3 ? nbPoints : 4;\r\n          var bez = new Array();\r\n          var equation = function (t, val0, val1, val2, val3) {\r\n              var res = (1.0 - t) * (1.0 - t) * (1.0 - t) * val0 +\r\n                  3.0 * t * (1.0 - t) * (1.0 - t) * val1 +\r\n                  3.0 * t * t * (1.0 - t) * val2 +\r\n                  t * t * t * val3;\r\n              return res;\r\n          };\r\n          for (var i = 0; i <= nbPoints; i++) {\r\n              bez.push(new Vector3(equation(i / nbPoints, v0.x, v1.x, v2.x, v3.x), equation(i / nbPoints, v0.y, v1.y, v2.y, v3.y), equation(i / nbPoints, v0.z, v1.z, v2.z, v3.z)));\r\n          }\r\n          return new Curve3(bez);\r\n      };\r\n      /**\r\n       * Returns a Curve3 object along a Hermite Spline curve : http://doc.babylonjs.com/tutorials/How_to_use_Curve3#hermite-spline\r\n       * @param p1 - (Vector3) the origin point of the Hermite Spline\r\n       * @param t1 - (Vector3) the tangent vector at the origin point\r\n       * @param p2 - (Vector3) the end point of the Hermite Spline\r\n       * @param t2 - (Vector3) the tangent vector at the end point\r\n       * @param nbPoints - (integer) the wanted number of points in the curve\r\n       * @returns the created Curve3\r\n       */\r\n      Curve3.CreateHermiteSpline = function (p1, t1, p2, t2, nbPoints) {\r\n          var hermite = new Array();\r\n          var step = 1.0 / nbPoints;\r\n          for (var i = 0; i <= nbPoints; i++) {\r\n              hermite.push(Vector3.Hermite(p1, t1, p2, t2, i * step));\r\n          }\r\n          return new Curve3(hermite);\r\n      };\r\n      /**\r\n       * Returns a Curve3 object along a CatmullRom Spline curve :\r\n       * @param points - (array of Vector3) the points the spline must pass through. At least, four points required\r\n       * @param nbPoints - (integer) the wanted number of points between each curve control points\r\n       * @param closed - (boolean) optional with default false, when true forms a closed loop from the points\r\n       * @returns the created Curve3\r\n       */\r\n      Curve3.CreateCatmullRomSpline = function (points, nbPoints, closed) {\r\n          var catmullRom = new Array();\r\n          var step = 1.0 / nbPoints;\r\n          var amount = 0.0;\r\n          if (closed) {\r\n              var pointsCount = points.length;\r\n              for (var i = 0; i < pointsCount; i++) {\r\n                  amount = 0;\r\n                  for (var c = 0; c < nbPoints; c++) {\r\n                      catmullRom.push(Vector3.CatmullRom(points[i % pointsCount], points[(i + 1) % pointsCount], points[(i + 2) % pointsCount], points[(i + 3) % pointsCount], amount));\r\n                      amount += step;\r\n                  }\r\n              }\r\n              catmullRom.push(catmullRom[0]);\r\n          }\r\n          else {\r\n              var totalPoints = new Array();\r\n              totalPoints.push(points[0].clone());\r\n              Array.prototype.push.apply(totalPoints, points);\r\n              totalPoints.push(points[points.length - 1].clone());\r\n              var i = 0;\r\n              for (i = 0; i < totalPoints.length - 3; i++) {\r\n                  amount = 0;\r\n                  for (var c = 0; c < nbPoints; c++) {\r\n                      catmullRom.push(Vector3.CatmullRom(totalPoints[i], totalPoints[i + 1], totalPoints[i + 2], totalPoints[i + 3], amount));\r\n                      amount += step;\r\n                  }\r\n              }\r\n              i--;\r\n              catmullRom.push(Vector3.CatmullRom(totalPoints[i], totalPoints[i + 1], totalPoints[i + 2], totalPoints[i + 3], amount));\r\n          }\r\n          return new Curve3(catmullRom);\r\n      };\r\n      /**\r\n       * @returns the Curve3 stored array of successive Vector3\r\n       */\r\n      Curve3.prototype.getPoints = function () {\r\n          return this._points;\r\n      };\r\n      /**\r\n       * @returns the computed length (float) of the curve.\r\n       */\r\n      Curve3.prototype.length = function () {\r\n          return this._length;\r\n      };\r\n      /**\r\n       * Returns a new instance of Curve3 object : var curve = curveA.continue(curveB);\r\n       * This new Curve3 is built by translating and sticking the curveB at the end of the curveA.\r\n       * curveA and curveB keep unchanged.\r\n       * @param curve - the curve to continue from this curve\r\n       * @returns the newly constructed curve\r\n       */\r\n      Curve3.prototype.continue = function (curve) {\r\n          var lastPoint = this._points[this._points.length - 1];\r\n          var continuedPoints = this._points.slice();\r\n          var curvePoints = curve.getPoints();\r\n          for (var i = 1; i < curvePoints.length; i++) {\r\n              continuedPoints.push(curvePoints[i].subtract(curvePoints[0]).add(lastPoint));\r\n          }\r\n          var continuedCurve = new Curve3(continuedPoints);\r\n          return continuedCurve;\r\n      };\r\n      Curve3.prototype._computeLength = function (path) {\r\n          var l = 0;\r\n          for (var i = 1; i < path.length; i++) {\r\n              l += path[i].subtract(path[i - 1]).length();\r\n          }\r\n          return l;\r\n      };\r\n      return Curve3;\r\n  }());\n\n  /**\r\n   * Represens a plane by the equation ax + by + cz + d = 0\r\n   * @public\r\n   */\r\n  var Plane = /** @class */ (function () {\r\n      /**\r\n       * Creates a Plane object according to the given floats a, b, c, d and the plane equation : ax + by + cz + d = 0\r\n       * @param a - a component of the plane\r\n       * @param b - b component of the plane\r\n       * @param c - c component of the plane\r\n       * @param d - d component of the plane\r\n       */\r\n      function Plane(a, b, c, d) {\r\n          this.normal = new Vector3(a, b, c);\r\n          this.d = d;\r\n      }\r\n      // Statics\r\n      /**\r\n       * Creates a plane from an  array\r\n       * @param array - the array to create a plane from\r\n       * @returns a new Plane from the given array.\r\n       */\r\n      Plane.FromArray = function (array) {\r\n          return new Plane(array[0], array[1], array[2], array[3]);\r\n      };\r\n      /**\r\n       * Creates a plane from three points\r\n       * @param point1 - point used to create the plane\r\n       * @param point2 - point used to create the plane\r\n       * @param point3 - point used to create the plane\r\n       * @returns a new Plane defined by the three given points.\r\n       */\r\n      Plane.FromPoints = function (point1, point2, point3) {\r\n          var result = new Plane(0.0, 0.0, 0.0, 0.0);\r\n          result.copyFromPoints(point1, point2, point3);\r\n          return result;\r\n      };\r\n      /**\r\n       * Creates a plane from an origin point and a normal\r\n       * @param origin - origin of the plane to be constructed\r\n       * @param normal - normal of the plane to be constructed\r\n       * @returns a new Plane the normal vector to this plane at the given origin point.\r\n       * Note : the vector \"normal\" is updated because normalized.\r\n       */\r\n      Plane.FromPositionAndNormal = function (origin, normal) {\r\n          var result = new Plane(0.0, 0.0, 0.0, 0.0);\r\n          normal.normalize();\r\n          result.normal = normal;\r\n          result.d = -(normal.x * origin.x + normal.y * origin.y + normal.z * origin.z);\r\n          return result;\r\n      };\r\n      /**\r\n       * Calculates the distance from a plane and a point\r\n       * @param origin - origin of the plane to be constructed\r\n       * @param normal - normal of the plane to be constructed\r\n       * @param point - point to calculate distance to\r\n       * @returns the signed distance between the plane defined by the normal vector at the \"origin\"\" point and the given other point.\r\n       */\r\n      Plane.SignedDistanceToPlaneFromPositionAndNormal = function (origin, normal, point) {\r\n          var d = -(normal.x * origin.x + normal.y * origin.y + normal.z * origin.z);\r\n          return Vector3.Dot(point, normal) + d;\r\n      };\r\n      /**\r\n       * @returns the plane coordinates as a new array of 4 elements [a, b, c, d].\r\n       */\r\n      Plane.prototype.asArray = function () {\r\n          return [this.normal.x, this.normal.y, this.normal.z, this.d];\r\n      };\r\n      // Methods\r\n      /**\r\n       * @returns a new plane copied from the current Plane.\r\n       */\r\n      Plane.prototype.clone = function () {\r\n          return new Plane(this.normal.x, this.normal.y, this.normal.z, this.d);\r\n      };\r\n      /**\r\n       * @returns the string \"Plane\".\r\n       */\r\n      Plane.prototype.getClassName = function () {\r\n          return 'Plane';\r\n      };\r\n      /**\r\n       * @returns the Plane hash code.\r\n       */\r\n      Plane.prototype.getHashCode = function () {\r\n          var hash = this.normal.getHashCode();\r\n          hash = (hash * 397) ^ (this.d || 0);\r\n          return hash;\r\n      };\r\n      /**\r\n       * Normalize the current Plane in place.\r\n       * @returns the updated Plane.\r\n       */\r\n      Plane.prototype.normalize = function () {\r\n          var norm = Math.sqrt(this.normal.x * this.normal.x + this.normal.y * this.normal.y + this.normal.z * this.normal.z);\r\n          var magnitude = 0.0;\r\n          if (norm !== 0) {\r\n              magnitude = 1.0 / norm;\r\n          }\r\n          this.normal.x *= magnitude;\r\n          this.normal.y *= magnitude;\r\n          this.normal.z *= magnitude;\r\n          this.d *= magnitude;\r\n          return this;\r\n      };\r\n      /**\r\n       * Applies a transformation the plane and returns the result\r\n       * @param transformation - the transformation matrix to be applied to the plane\r\n       * @returns a new Plane as the result of the transformation of the current Plane by the given matrix.\r\n       */\r\n      Plane.prototype.transform = function (transformation) {\r\n          var transposedMatrix = MathTmp.Matrix[0];\r\n          Matrix.TransposeToRef(transformation, transposedMatrix);\r\n          var m = transposedMatrix.m;\r\n          var x = this.normal.x;\r\n          var y = this.normal.y;\r\n          var z = this.normal.z;\r\n          var d = this.d;\r\n          var normalX = x * m[0] + y * m[1] + z * m[2] + d * m[3];\r\n          var normalY = x * m[4] + y * m[5] + z * m[6] + d * m[7];\r\n          var normalZ = x * m[8] + y * m[9] + z * m[10] + d * m[11];\r\n          var finalD = x * m[12] + y * m[13] + z * m[14] + d * m[15];\r\n          return new Plane(normalX, normalY, normalZ, finalD);\r\n      };\r\n      /**\r\n       * Calcualtte the dot product between the point and the plane normal\r\n       * @param point - point to calculate the dot product with\r\n       * @returns the dot product (float) of the point coordinates and the plane normal.\r\n       */\r\n      Plane.prototype.dotCoordinate = function (point) {\r\n          return this.normal.x * point.x + this.normal.y * point.y + this.normal.z * point.z + this.d;\r\n      };\r\n      /**\r\n       * Updates the current Plane from the plane defined by the three given points.\r\n       * @param point1 - one of the points used to contruct the plane\r\n       * @param point2 - one of the points used to contruct the plane\r\n       * @param point3 - one of the points used to contruct the plane\r\n       * @returns the updated Plane.\r\n       */\r\n      Plane.prototype.copyFromPoints = function (point1, point2, point3) {\r\n          var x1 = point2.x - point1.x;\r\n          var y1 = point2.y - point1.y;\r\n          var z1 = point2.z - point1.z;\r\n          var x2 = point3.x - point1.x;\r\n          var y2 = point3.y - point1.y;\r\n          var z2 = point3.z - point1.z;\r\n          var yz = y1 * z2 - z1 * y2;\r\n          var xz = z1 * x2 - x1 * z2;\r\n          var xy = x1 * y2 - y1 * x2;\r\n          var pyth = Math.sqrt(yz * yz + xz * xz + xy * xy);\r\n          var invPyth;\r\n          if (pyth !== 0) {\r\n              invPyth = 1.0 / pyth;\r\n          }\r\n          else {\r\n              invPyth = 0.0;\r\n          }\r\n          this.normal.x = yz * invPyth;\r\n          this.normal.y = xz * invPyth;\r\n          this.normal.z = xy * invPyth;\r\n          this.d = -(this.normal.x * point1.x + this.normal.y * point1.y + this.normal.z * point1.z);\r\n          return this;\r\n      };\r\n      /**\r\n       * Checks if the plane is facing a given direction\r\n       * @param direction - the direction to check if the plane is facing\r\n       * @param epsilon - value the dot product is compared against (returns true if dot &lt;= epsilon)\r\n       * @returns True is the vector \"direction\"  is the same side than the plane normal.\r\n       */\r\n      Plane.prototype.isFrontFacingTo = function (direction, epsilon) {\r\n          var dot = Vector3.Dot(this.normal, direction);\r\n          return dot <= epsilon;\r\n      };\r\n      /**\r\n       * Calculates the distance to a point\r\n       * @param point - point to calculate distance to\r\n       * @returns the signed distance (float) from the given point to the Plane.\r\n       */\r\n      Plane.prototype.signedDistanceTo = function (point) {\r\n          return Vector3.Dot(point, this.normal) + this.d;\r\n      };\r\n      return Plane;\r\n  }());\n\n  /**\r\n   * Reprasents a camera frustum\r\n   * @public\r\n   */\r\n  var Frustum = /** @class */ (function () {\r\n      function Frustum() {\r\n      }\r\n      /**\r\n       * Gets the planes representing the frustum\r\n       * @param transform - matrix to be applied to the returned planes\r\n       * @returns a new array of 6 Frustum planes computed by the given transformation matrix.\r\n       */\r\n      Frustum.GetPlanes = function (transform) {\r\n          var frustumPlanes = [];\r\n          for (var index = 0; index < 6; index++) {\r\n              frustumPlanes.push(new Plane(0.0, 0.0, 0.0, 0.0));\r\n          }\r\n          Frustum.GetPlanesToRef(transform, frustumPlanes);\r\n          return frustumPlanes;\r\n      };\r\n      /**\r\n       * Gets the near frustum plane transformed by the transform matrix\r\n       * @param transform - transformation matrix to be applied to the resulting frustum plane\r\n       * @param frustumPlane - the resuling frustum plane\r\n       */\r\n      Frustum.GetNearPlaneToRef = function (transform, frustumPlane) {\r\n          var m = transform.m;\r\n          frustumPlane.normal.x = m[3] + m[2];\r\n          frustumPlane.normal.y = m[7] + m[6];\r\n          frustumPlane.normal.z = m[11] + m[10];\r\n          frustumPlane.d = m[15] + m[14];\r\n          frustumPlane.normalize();\r\n      };\r\n      /**\r\n       * Gets the far frustum plane transformed by the transform matrix\r\n       * @param transform - transformation matrix to be applied to the resulting frustum plane\r\n       * @param frustumPlane - the resuling frustum plane\r\n       */\r\n      Frustum.GetFarPlaneToRef = function (transform, frustumPlane) {\r\n          var m = transform.m;\r\n          frustumPlane.normal.x = m[3] - m[2];\r\n          frustumPlane.normal.y = m[7] - m[6];\r\n          frustumPlane.normal.z = m[11] - m[10];\r\n          frustumPlane.d = m[15] - m[14];\r\n          frustumPlane.normalize();\r\n      };\r\n      /**\r\n       * Gets the left frustum plane transformed by the transform matrix\r\n       * @param transform - transformation matrix to be applied to the resulting frustum plane\r\n       * @param frustumPlane - the resuling frustum plane\r\n       */\r\n      Frustum.GetLeftPlaneToRef = function (transform, frustumPlane) {\r\n          var m = transform.m;\r\n          frustumPlane.normal.x = m[3] + m[0];\r\n          frustumPlane.normal.y = m[7] + m[4];\r\n          frustumPlane.normal.z = m[11] + m[8];\r\n          frustumPlane.d = m[15] + m[12];\r\n          frustumPlane.normalize();\r\n      };\r\n      /**\r\n       * Gets the right frustum plane transformed by the transform matrix\r\n       * @param transform - transformation matrix to be applied to the resulting frustum plane\r\n       * @param frustumPlane - the resuling frustum plane\r\n       */\r\n      Frustum.GetRightPlaneToRef = function (transform, frustumPlane) {\r\n          var m = transform.m;\r\n          frustumPlane.normal.x = m[3] - m[0];\r\n          frustumPlane.normal.y = m[7] - m[4];\r\n          frustumPlane.normal.z = m[11] - m[8];\r\n          frustumPlane.d = m[15] - m[12];\r\n          frustumPlane.normalize();\r\n      };\r\n      /**\r\n       * Gets the top frustum plane transformed by the transform matrix\r\n       * @param transform - transformation matrix to be applied to the resulting frustum plane\r\n       * @param frustumPlane - the resuling frustum plane\r\n       */\r\n      Frustum.GetTopPlaneToRef = function (transform, frustumPlane) {\r\n          var m = transform.m;\r\n          frustumPlane.normal.x = m[3] - m[1];\r\n          frustumPlane.normal.y = m[7] - m[5];\r\n          frustumPlane.normal.z = m[11] - m[9];\r\n          frustumPlane.d = m[15] - m[13];\r\n          frustumPlane.normalize();\r\n      };\r\n      /**\r\n       * Gets the bottom frustum plane transformed by the transform matrix\r\n       * @param transform - transformation matrix to be applied to the resulting frustum plane\r\n       * @param frustumPlane - the resuling frustum plane\r\n       */\r\n      Frustum.GetBottomPlaneToRef = function (transform, frustumPlane) {\r\n          var m = transform.m;\r\n          frustumPlane.normal.x = m[3] + m[1];\r\n          frustumPlane.normal.y = m[7] + m[5];\r\n          frustumPlane.normal.z = m[11] + m[9];\r\n          frustumPlane.d = m[15] + m[13];\r\n          frustumPlane.normalize();\r\n      };\r\n      /**\r\n       * Sets the given array \"frustumPlanes\" with the 6 Frustum planes computed by the given transformation matrix.\r\n       * @param transform - transformation matrix to be applied to the resulting frustum planes\r\n       * @param frustumPlanes - the resuling frustum planes\r\n       */\r\n      Frustum.GetPlanesToRef = function (transform, frustumPlanes) {\r\n          // Near\r\n          Frustum.GetNearPlaneToRef(transform, frustumPlanes[0]);\r\n          // Far\r\n          Frustum.GetFarPlaneToRef(transform, frustumPlanes[1]);\r\n          // Left\r\n          Frustum.GetLeftPlaneToRef(transform, frustumPlanes[2]);\r\n          // Right\r\n          Frustum.GetRightPlaneToRef(transform, frustumPlanes[3]);\r\n          // Top\r\n          Frustum.GetTopPlaneToRef(transform, frustumPlanes[4]);\r\n          // Bottom\r\n          Frustum.GetBottomPlaneToRef(transform, frustumPlanes[5]);\r\n      };\r\n      return Frustum;\r\n  }());\n\n  /**\r\n   * Represents a 2D path made up of multiple 2D points\r\n   * @public\r\n   */\r\n  var Path2 = /** @class */ (function () {\r\n      /**\r\n       * Creates a Path2 object from the starting 2D coordinates x and y.\r\n       * @param x - the starting points x value\r\n       * @param y - the starting points y value\r\n       */\r\n      function Path2(x, y) {\r\n          /**\r\n           * If the path start and end point are the same\r\n           */\r\n          this.closed = false;\r\n          this._points = new Array();\r\n          this._length = 0.0;\r\n          this._points.push(new Vector2(x, y));\r\n      }\r\n      /**\r\n       * Creates a new path starting from an x and y position\r\n       * @param x - starting x value\r\n       * @param y - starting y value\r\n       * @returns a new Path2 starting at the coordinates (x, y).\r\n       */\r\n      Path2.StartingAt = function (x, y) {\r\n          return new Path2(x, y);\r\n      };\r\n      /**\r\n       * Adds a new segment until the given coordinates (x, y) to the current Path2.\r\n       * @param x - the added points x value\r\n       * @param y - the added points y value\r\n       * @returns the updated Path2.\r\n       */\r\n      Path2.prototype.addLineTo = function (x, y) {\r\n          if (this.closed) {\r\n              return this;\r\n          }\r\n          var newPoint = new Vector2(x, y);\r\n          var previousPoint = this._points[this._points.length - 1];\r\n          this._points.push(newPoint);\r\n          this._length += newPoint.subtract(previousPoint).length();\r\n          return this;\r\n      };\r\n      /**\r\n       * Adds _numberOfSegments_ segments according to the arc definition (middle point coordinates, end point coordinates, the arc start point being the current Path2 last point) to the current Path2.\r\n       * @param midX - middle point x value\r\n       * @param midY - middle point y value\r\n       * @param endX - end point x value\r\n       * @param endY - end point y value\r\n       * @param numberOfSegments - (default: 36)\r\n       * @returns the updated Path2.\r\n       */\r\n      Path2.prototype.addArcTo = function (midX, midY, endX, endY, numberOfSegments) {\r\n          if (numberOfSegments === void 0) { numberOfSegments = 36; }\r\n          if (this.closed) {\r\n              return this;\r\n          }\r\n          var startPoint = this._points[this._points.length - 1];\r\n          var midPoint = new Vector2(midX, midY);\r\n          var endPoint = new Vector2(endX, endY);\r\n          var arc = new Arc2(startPoint, midPoint, endPoint);\r\n          var increment = arc.angle.radians() / numberOfSegments;\r\n          if (arc.orientation === exports.Orientation.CW) {\r\n              increment *= -1;\r\n          }\r\n          var currentAngle = arc.startAngle.radians() + increment;\r\n          for (var i = 0; i < numberOfSegments; i++) {\r\n              var x = Math.cos(currentAngle) * arc.radius + arc.centerPoint.x;\r\n              var y = Math.sin(currentAngle) * arc.radius + arc.centerPoint.y;\r\n              this.addLineTo(x, y);\r\n              currentAngle += increment;\r\n          }\r\n          return this;\r\n      };\r\n      /**\r\n       * Closes the Path2.\r\n       * @returns the Path2.\r\n       */\r\n      Path2.prototype.close = function () {\r\n          this.closed = true;\r\n          return this;\r\n      };\r\n      /**\r\n       * Gets the sum of the distance between each sequential point in the path\r\n       * @returns the Path2 total length (float).\r\n       */\r\n      Path2.prototype.length = function () {\r\n          var result = this._length;\r\n          if (!this.closed) {\r\n              var lastPoint = this._points[this._points.length - 1];\r\n              var firstPoint = this._points[0];\r\n              result += firstPoint.subtract(lastPoint).length();\r\n          }\r\n          return result;\r\n      };\r\n      /**\r\n       * Gets the points which construct the path\r\n       * @returns the Path2 internal array of points.\r\n       */\r\n      Path2.prototype.getPoints = function () {\r\n          return this._points;\r\n      };\r\n      /**\r\n       * Retreives the point at the distance aways from the starting point\r\n       * @param normalizedLengthPosition - the length along the path to retreive the point from\r\n       * @returns a new Vector2 located at a percentage of the Path2 total length on this path.\r\n       */\r\n      Path2.prototype.getPointAtLengthPosition = function (normalizedLengthPosition) {\r\n          if (normalizedLengthPosition < 0 || normalizedLengthPosition > 1) {\r\n              return Vector2.Zero();\r\n          }\r\n          var lengthPosition = normalizedLengthPosition * this.length();\r\n          var previousOffset = 0;\r\n          for (var i = 0; i < this._points.length; i++) {\r\n              var j = (i + 1) % this._points.length;\r\n              var a = this._points[i];\r\n              var b = this._points[j];\r\n              var bToA = b.subtract(a);\r\n              var nextOffset = bToA.length() + previousOffset;\r\n              if (lengthPosition >= previousOffset && lengthPosition <= nextOffset) {\r\n                  var dir = bToA.normalize();\r\n                  var localOffset = lengthPosition - previousOffset;\r\n                  return new Vector2(a.x + dir.x * localOffset, a.y + dir.y * localOffset);\r\n              }\r\n              previousOffset = nextOffset;\r\n          }\r\n          return Vector2.Zero();\r\n      };\r\n      return Path2;\r\n  }());\n\n  /**\r\n   * Represents a 3D path made up of multiple 3D points\r\n   * @public\r\n   */\r\n  var Path3D = /** @class */ (function () {\r\n      /**\r\n       * new Path3D(path, normal, raw)\r\n       * Creates a Path3D. A Path3D is a logical math object, so not a mesh.\r\n       * please read the description in the tutorial :  http://doc.babylonjs.com/tutorials/How_to_use_Path3D\r\n       * @param path - an array of Vector3, the curve axis of the Path3D\r\n       * @param normal - (options) Vector3, the first wanted normal to the curve. Ex (0, 1, 0) for a vertical normal.\r\n       * @param raw - (optional, default false) : boolean, if true the returned Path3D isn't normalized. Useful to depict path acceleration or speed.\r\n       */\r\n      function Path3D(\r\n      /**\r\n       * an array of Vector3, the curve axis of the Path3D\r\n       */\r\n      path, firstNormal, raw) {\r\n          if (firstNormal === void 0) { firstNormal = null; }\r\n          this.path = path;\r\n          this._curve = new Array();\r\n          this._distances = new Array();\r\n          this._tangents = new Array();\r\n          this._normals = new Array();\r\n          this._binormals = new Array();\r\n          for (var p = 0; p < path.length; p++) {\r\n              this._curve[p] = path[p].clone(); // hard copy\r\n          }\r\n          this._raw = raw || false;\r\n          this._compute(firstNormal);\r\n      }\r\n      /**\r\n       * Returns the Path3D array of successive Vector3 designing its curve.\r\n       * @returns the Path3D array of successive Vector3 designing its curve.\r\n       */\r\n      Path3D.prototype.getCurve = function () {\r\n          return this._curve;\r\n      };\r\n      /**\r\n       * Returns an array populated with tangent vectors on each Path3D curve point.\r\n       * @returns an array populated with tangent vectors on each Path3D curve point.\r\n       */\r\n      Path3D.prototype.getTangents = function () {\r\n          return this._tangents;\r\n      };\r\n      /**\r\n       * Returns an array populated with normal vectors on each Path3D curve point.\r\n       * @returns an array populated with normal vectors on each Path3D curve point.\r\n       */\r\n      Path3D.prototype.getNormals = function () {\r\n          return this._normals;\r\n      };\r\n      /**\r\n       * Returns an array populated with binormal vectors on each Path3D curve point.\r\n       * @returns an array populated with binormal vectors on each Path3D curve point.\r\n       */\r\n      Path3D.prototype.getBinormals = function () {\r\n          return this._binormals;\r\n      };\r\n      /**\r\n       * Returns an array populated with distances (float) of the i-th point from the first curve point.\r\n       * @returns an array populated with distances (float) of the i-th point from the first curve point.\r\n       */\r\n      Path3D.prototype.getDistances = function () {\r\n          return this._distances;\r\n      };\r\n      /**\r\n       * Forces the Path3D tangent, normal, binormal and distance recomputation.\r\n       * @param path - path which all values are copied into the curves points\r\n       * @param firstNormal - which should be projected onto the curve\r\n       * @returns the same object updated.\r\n       */\r\n      Path3D.prototype.update = function (path, firstNormal) {\r\n          if (firstNormal === void 0) { firstNormal = null; }\r\n          for (var p = 0; p < path.length; p++) {\r\n              this._curve[p].x = path[p].x;\r\n              this._curve[p].y = path[p].y;\r\n              this._curve[p].z = path[p].z;\r\n          }\r\n          this._compute(firstNormal);\r\n          return this;\r\n      };\r\n      // private function compute() : computes tangents, normals and binormals\r\n      Path3D.prototype._compute = function (firstNormal) {\r\n          var l = this._curve.length;\r\n          // first and last tangents\r\n          this._tangents[0] = this._getFirstNonNullVector(0);\r\n          if (!this._raw) {\r\n              this._tangents[0].normalize();\r\n          }\r\n          this._tangents[l - 1] = this._curve[l - 1].subtract(this._curve[l - 2]);\r\n          if (!this._raw) {\r\n              this._tangents[l - 1].normalize();\r\n          }\r\n          // normals and binormals at first point : arbitrary vector with _normalVector()\r\n          var tg0 = this._tangents[0];\r\n          var pp0 = this._normalVector(this._curve[0], tg0, firstNormal);\r\n          this._normals[0] = pp0;\r\n          if (!this._raw) {\r\n              this._normals[0].normalize();\r\n          }\r\n          this._binormals[0] = Vector3.Cross(tg0, this._normals[0]);\r\n          if (!this._raw) {\r\n              this._binormals[0].normalize();\r\n          }\r\n          this._distances[0] = 0.0;\r\n          // normals and binormals : next points\r\n          var prev; // previous vector (segment)\r\n          var cur; // current vector (segment)\r\n          var curTang; // current tangent\r\n          // previous normal\r\n          var prevBinor; // previous binormal\r\n          for (var i = 1; i < l; i++) {\r\n              // tangents\r\n              prev = this._getLastNonNullVector(i);\r\n              if (i < l - 1) {\r\n                  cur = this._getFirstNonNullVector(i);\r\n                  this._tangents[i] = prev.add(cur);\r\n                  this._tangents[i].normalize();\r\n              }\r\n              this._distances[i] = this._distances[i - 1] + prev.length();\r\n              // normals and binormals\r\n              // http://www.cs.cmu.edu/afs/andrew/scs/cs/15-462/web/old/asst2camera.html\r\n              curTang = this._tangents[i];\r\n              prevBinor = this._binormals[i - 1];\r\n              this._normals[i] = Vector3.Cross(prevBinor, curTang);\r\n              if (!this._raw) {\r\n                  this._normals[i].normalize();\r\n              }\r\n              this._binormals[i] = Vector3.Cross(curTang, this._normals[i]);\r\n              if (!this._raw) {\r\n                  this._binormals[i].normalize();\r\n              }\r\n          }\r\n      };\r\n      // returns the first non null vector from index : curve[index + N].subtract(curve[index])\r\n      Path3D.prototype._getFirstNonNullVector = function (index) {\r\n          var i = 1;\r\n          var nNVector = this._curve[index + i].subtract(this._curve[index]);\r\n          while (nNVector.length() === 0 && index + i + 1 < this._curve.length) {\r\n              i++;\r\n              nNVector = this._curve[index + i].subtract(this._curve[index]);\r\n          }\r\n          return nNVector;\r\n      };\r\n      // returns the last non null vector from index : curve[index].subtract(curve[index - N])\r\n      Path3D.prototype._getLastNonNullVector = function (index) {\r\n          var i = 1;\r\n          var nLVector = this._curve[index].subtract(this._curve[index - i]);\r\n          while (nLVector.length() === 0 && index > i + 1) {\r\n              i++;\r\n              nLVector = this._curve[index].subtract(this._curve[index - i]);\r\n          }\r\n          return nLVector;\r\n      };\r\n      // private function normalVector(v0, vt, va) :\r\n      // returns an arbitrary point in the plane defined by the point v0 and the vector vt orthogonal to this plane\r\n      // if va is passed, it returns the va projection on the plane orthogonal to vt at the point v0\r\n      Path3D.prototype._normalVector = function (v0, vt, va) {\r\n          var normal0;\r\n          var tgl = vt.length();\r\n          if (tgl === 0.0) {\r\n              tgl = 1.0;\r\n          }\r\n          if (va === undefined || va === null) {\r\n              var point = void 0;\r\n              if (!Scalar.WithinEpsilon(Math.abs(vt.y) / tgl, 1.0, Epsilon)) {\r\n                  // search for a point in the plane\r\n                  point = new Vector3(0.0, -1.0, 0.0);\r\n              }\r\n              else if (!Scalar.WithinEpsilon(Math.abs(vt.x) / tgl, 1.0, Epsilon)) {\r\n                  point = new Vector3(1.0, 0.0, 0.0);\r\n              }\r\n              else if (!Scalar.WithinEpsilon(Math.abs(vt.z) / tgl, 1.0, Epsilon)) {\r\n                  point = new Vector3(0.0, 0.0, 1.0);\r\n              }\r\n              else {\r\n                  point = Vector3.Zero();\r\n              }\r\n              normal0 = Vector3.Cross(vt, point);\r\n          }\r\n          else {\r\n              normal0 = Vector3.Cross(vt, va);\r\n              Vector3.CrossToRef(normal0, vt, normal0);\r\n          }\r\n          normal0.normalize();\r\n          return normal0;\r\n      };\r\n      return Path3D;\r\n  }());\n\n  /**\r\n   * Size containing widht and height\r\n   * @public\r\n   */\r\n  var Size = /** @class */ (function () {\r\n      /**\r\n       * Creates a Size object from the given width and height (floats).\r\n       * @param width - width of the new size\r\n       * @param height - height of the new size\r\n       */\r\n      function Size(width, height) {\r\n          this.width = width;\r\n          this.height = height;\r\n      }\r\n      Object.defineProperty(Size.prototype, \"surface\", {\r\n          /**\r\n           * The surface of the Size : width * height (float).\r\n           */\r\n          get: function () {\r\n              return this.width * this.height;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      /**\r\n       * Create a new size of zero\r\n       * @returns a new Size set to (0.0, 0.0)\r\n       */\r\n      Size.Zero = function () {\r\n          return new Size(0.0, 0.0);\r\n      };\r\n      /**\r\n       * Creates a new Size set at the linear interpolation \"amount\" between \"start\" and \"end\"\r\n       * @param start - starting size to lerp between\r\n       * @param end - end size to lerp between\r\n       * @param amount - amount to lerp between the start and end values\r\n       * @returns a new Size set at the linear interpolation \"amount\" between \"start\" and \"end\"\r\n       */\r\n      Size.Lerp = function (start, end, amount) {\r\n          var w = start.width + (end.width - start.width) * amount;\r\n          var h = start.height + (end.height - start.height) * amount;\r\n          return new Size(w, h);\r\n      };\r\n      /**\r\n       * Returns a string with the Size width and height\r\n       * @returns a string with the Size width and height\r\n       */\r\n      Size.prototype.toString = function () {\r\n          return \"{W: \" + this.width + \", H: \" + this.height + \"}\";\r\n      };\r\n      /**\r\n       * \"Size\"\r\n       * @returns the string \"Size\"\r\n       */\r\n      Size.prototype.getClassName = function () {\r\n          return 'Size';\r\n      };\r\n      /**\r\n       * Returns the Size hash code.\r\n       * @returns a hash code for a unique width and height\r\n       */\r\n      Size.prototype.getHashCode = function () {\r\n          var hash = this.width || 0;\r\n          hash = (hash * 397) ^ (this.height || 0);\r\n          return hash;\r\n      };\r\n      /**\r\n       * Updates the current size from the given one.\r\n       * @param src - the given size\r\n       */\r\n      Size.prototype.copyFrom = function (src) {\r\n          this.width = src.width;\r\n          this.height = src.height;\r\n      };\r\n      /**\r\n       * Updates in place the current Size from the given floats.\r\n       * @param width - width of the new size\r\n       * @param height - height of the new size\r\n       * @returns the updated Size.\r\n       */\r\n      Size.prototype.copyFromFloats = function (width, height) {\r\n          this.width = width;\r\n          this.height = height;\r\n          return this;\r\n      };\r\n      /**\r\n       * Updates in place the current Size from the given floats.\r\n       * @param width - width to set\r\n       * @param height - height to set\r\n       * @returns the updated Size.\r\n       */\r\n      Size.prototype.set = function (width, height) {\r\n          return this.copyFromFloats(width, height);\r\n      };\r\n      /**\r\n       * Multiplies the width and height by numbers\r\n       * @param w - factor to multiple the width by\r\n       * @param h - factor to multiple the height by\r\n       * @returns a new Size set with the multiplication result of the current Size and the given floats.\r\n       */\r\n      Size.prototype.multiplyByFloats = function (w, h) {\r\n          return new Size(this.width * w, this.height * h);\r\n      };\r\n      /**\r\n       * Clones the size\r\n       * @returns a new Size copied from the given one.\r\n       */\r\n      Size.prototype.clone = function () {\r\n          return new Size(this.width, this.height);\r\n      };\r\n      /**\r\n       * True if the current Size and the given one width and height are strictly equal.\r\n       * @param other - the other size to compare against\r\n       * @returns True if the current Size and the given one width and height are strictly equal.\r\n       */\r\n      Size.prototype.equals = function (other) {\r\n          if (!other) {\r\n              return false;\r\n          }\r\n          return this.width === other.width && this.height === other.height;\r\n      };\r\n      /**\r\n       * Sums the width and height of two sizes\r\n       * @param otherSize - size to add to this size\r\n       * @returns a new Size set as the addition result of the current Size and the given one.\r\n       */\r\n      Size.prototype.add = function (otherSize) {\r\n          var r = new Size(this.width + otherSize.width, this.height + otherSize.height);\r\n          return r;\r\n      };\r\n      /**\r\n       * Subtracts the width and height of two\r\n       * @param otherSize - size to subtract to this size\r\n       * @returns a new Size set as the subtraction result of  the given one from the current Size.\r\n       */\r\n      Size.prototype.subtract = function (otherSize) {\r\n          var r = new Size(this.width - otherSize.width, this.height - otherSize.height);\r\n          return r;\r\n      };\r\n      return Size;\r\n  }());\n\n  var defaultParams = {\r\n      looping: true,\r\n      speed: 1.0,\r\n      weight: 1.0,\r\n      layer: 0\r\n  };\r\n  /**\r\n   * @public\r\n   */\r\n  var AnimationState = /** @class */ (function (_super) {\r\n      __extends(AnimationState, _super);\r\n      function AnimationState(clip, params) {\r\n          if (params === void 0) { params = defaultParams; }\r\n          var _this = _super.call(this) || this;\r\n          // @internal\r\n          _this.isAnimationClip = true;\r\n          /**\r\n           * Does the animation loop?, default: true\r\n           */\r\n          _this.looping = defaultParams.looping;\r\n          /**\r\n           * Weight of the animation, values from 0 to 1, used to blend several animations. default: 1\r\n           */\r\n          _this.weight = defaultParams.weight;\r\n          /**\r\n           * Is the animation playing? default: true\r\n           */\r\n          _this.playing = false;\r\n          /**\r\n           * Does any anyone asked to reset the animation? default: false\r\n           */\r\n          _this.shouldReset = false;\r\n          /**\r\n           * The animation speed\r\n           */\r\n          _this.speed = defaultParams.speed;\r\n          // @internal\r\n          _this.name = newId('AnimClip');\r\n          /**\r\n           * Layering allows you to have two or more levels of animation on an object's parameters at the same time\r\n           */\r\n          _this.layer = defaultParams.layer;\r\n          _this.clip = clip;\r\n          _this.setParams(__assign({}, params));\r\n          return _this;\r\n      }\r\n      /**\r\n       * Sets the clip parameters\r\n       */\r\n      AnimationState.prototype.setParams = function (params) {\r\n          this.looping = params.looping !== undefined ? params.looping : this.looping;\r\n          this.speed = params.speed || this.speed;\r\n          this.weight = params.weight || this.weight;\r\n          this.layer = params.layer || this.layer;\r\n          return this;\r\n      };\r\n      AnimationState.prototype.toJSON = function () {\r\n          var ret = JSON.parse(JSON.stringify(_super.prototype.toJSON.call(this)));\r\n          if (this.shouldReset) {\r\n              this.shouldReset = false;\r\n          }\r\n          return ret;\r\n      };\r\n      /**\r\n       * Starts the animation\r\n       */\r\n      AnimationState.prototype.play = function (reset) {\r\n          var _a;\r\n          if (reset === void 0) { reset = false; }\r\n          (_a = this.owner) === null || _a === void 0 ? void 0 : _a.play(this, reset);\r\n      };\r\n      /**\r\n       * Pauses the animation\r\n       */\r\n      AnimationState.prototype.pause = function () {\r\n          var _a;\r\n          (_a = this.owner) === null || _a === void 0 ? void 0 : _a.pause(this);\r\n      };\r\n      /**\r\n       * Resets the animation state to the frame 0\r\n       */\r\n      AnimationState.prototype.reset = function () {\r\n          this.shouldReset = true;\r\n      };\r\n      /**\r\n       * Resets and pauses the animation\r\n       */\r\n      AnimationState.prototype.stop = function () {\r\n          var _a;\r\n          (_a = this.owner) === null || _a === void 0 ? void 0 : _a.stop(this);\r\n      };\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], AnimationState.prototype, \"clip\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AnimationState.prototype, \"looping\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AnimationState.prototype, \"weight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AnimationState.prototype, \"playing\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AnimationState.prototype, \"shouldReset\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AnimationState.prototype, \"speed\", void 0);\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], AnimationState.prototype, \"name\", void 0);\r\n      return AnimationState;\r\n  }(ObservableComponent));\n\n  // tslint:disable:ter-indent\r\n  /**\r\n   * @public\r\n   */\r\n  exports.ActionButton = void 0;\r\n  (function (ActionButton) {\r\n      ActionButton[\"POINTER\"] = \"POINTER\";\r\n      ActionButton[\"PRIMARY\"] = \"PRIMARY\";\r\n      ActionButton[\"SECONDARY\"] = \"SECONDARY\";\r\n      ActionButton[\"ANY\"] = \"ANY\";\r\n  })(exports.ActionButton || (exports.ActionButton = {}));\r\n  /**\r\n   * @public\r\n   */\r\n  var PointerEventComponent = /** @class */ (function () {\r\n      function PointerEventComponent(callback) {\r\n          this.callback = callback;\r\n          if (!callback || !('apply' in callback) || !('call' in callback)) {\r\n              throw new Error('Callback is not a function');\r\n          }\r\n          // tslint:disable-next-line:no-use-before-declare\r\n          Input.ensureInstance();\r\n      }\r\n      return PointerEventComponent;\r\n  }());\r\n  /**\r\n   * @public\r\n   */\r\n  var GlobalPointerDown = /** @class */ (function (_super) {\r\n      __extends(GlobalPointerDown, _super);\r\n      function GlobalPointerDown() {\r\n          return _super !== null && _super.apply(this, arguments) || this;\r\n      }\r\n      GlobalPointerDown = __decorate([\r\n          Component('pointerDown')\r\n      ], GlobalPointerDown);\r\n      return GlobalPointerDown;\r\n  }(PointerEventComponent));\r\n  /**\r\n   * @public\r\n   */\r\n  var GlobalPointerUp = /** @class */ (function (_super) {\r\n      __extends(GlobalPointerUp, _super);\r\n      function GlobalPointerUp() {\r\n          return _super !== null && _super.apply(this, arguments) || this;\r\n      }\r\n      GlobalPointerUp = __decorate([\r\n          Component('pointerUp')\r\n      ], GlobalPointerUp);\r\n      return GlobalPointerUp;\r\n  }(PointerEventComponent));\r\n  /**\r\n   * @public\r\n   */\r\n  var Subscription = /** @class */ (function () {\r\n      function Subscription(fn, useRaycast) {\r\n          this.fn = fn;\r\n          this.useRaycast = useRaycast;\r\n      }\r\n      return Subscription;\r\n  }());\r\n  /**\r\n   * @public\r\n   */\r\n  var Input = /** @class */ (function () {\r\n      function Input() {\r\n          var _a, _b;\r\n          // @internal\r\n          this.subscriptions = (_a = {},\r\n              _a[exports.ActionButton.POINTER] = {\r\n                  BUTTON_DOWN: [],\r\n                  BUTTON_UP: []\r\n              },\r\n              _a[exports.ActionButton.PRIMARY] = {\r\n                  BUTTON_DOWN: [],\r\n                  BUTTON_UP: []\r\n              },\r\n              _a[exports.ActionButton.SECONDARY] = {\r\n                  BUTTON_DOWN: [],\r\n                  BUTTON_UP: []\r\n              },\r\n              _a[exports.ActionButton.ANY] = {\r\n                  BUTTON_DOWN: [],\r\n                  BUTTON_UP: []\r\n              },\r\n              _a);\r\n          this.internalState = (_b = {},\r\n              _b[exports.ActionButton.POINTER] = {\r\n                  BUTTON_DOWN: false\r\n              },\r\n              _b[exports.ActionButton.PRIMARY] = {\r\n                  BUTTON_DOWN: false\r\n              },\r\n              _b[exports.ActionButton.SECONDARY] = {\r\n                  BUTTON_DOWN: false\r\n              },\r\n              _b[exports.ActionButton.ANY] = {\r\n                  BUTTON_DOWN: false\r\n              },\r\n              _b);\r\n      }\r\n      Object.defineProperty(Input, \"instance\", {\r\n          get: function () {\r\n              Input.ensureInstance();\r\n              return Input._instance;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      Input.ensureInstance = function () {\r\n          if (!Input._instance) {\r\n              Input._instance = new Input();\r\n          }\r\n      };\r\n      /**\r\n       * Allows to know if a button is pressed\r\n       *\r\n       * Returns true if the button is pressed\r\n       * @param buttonId - The id of the button.\r\n       */\r\n      Input.prototype.isButtonPressed = function (buttonId) {\r\n          return this.internalState[buttonId];\r\n      };\r\n      /**\r\n       * Subscribes to an input event and triggers the provided callback.\r\n       *\r\n       * Returns a function that can be called to remove the subscription.\r\n       * @param eventName - The name of the event (see InputEventKind).\r\n       * @param buttonId - The id of the button.\r\n       * @param useRaycast - Enables getting raycast information.\r\n       * @param fn - A callback function to be called when the event is triggered.\r\n       */\r\n      Input.prototype.subscribe = function (eventName, buttonId, useRaycast, fn) {\r\n          var _this = this;\r\n          this.subscriptions[buttonId][eventName].push(new Subscription(fn, useRaycast));\r\n          return function () {\r\n              _this.unsubscribe(eventName, buttonId, fn);\r\n          };\r\n      };\r\n      /**\r\n       * Removes an existing input event subscription.\r\n       * @param eventName - The name of the event (see InputEventKind).\r\n       * @param buttonId - The id of the button.\r\n       * @param fn - The callback function used when subscribing to the event.\r\n       */\r\n      Input.prototype.unsubscribe = function (eventName, buttonId, fn) {\r\n          var index = this.getSubscriptionId(eventName, buttonId, fn);\r\n          if (index > -1) {\r\n              return this.subscriptions[buttonId][eventName].splice(index, 1);\r\n          }\r\n          return false;\r\n      };\r\n      Input.prototype.handlePointerEvent = function (data) {\r\n          var button = this.getPointerById(data.buttonId);\r\n          var eventResult = __assign(__assign({}, data), { button: button, direction: new Vector3().copyFrom(data.direction), origin: new Vector3().copyFrom(data.origin), hit: undefined });\r\n          var hit = data.hit\r\n              ? __assign(__assign({}, data.hit), { hitPoint: new Vector3().copyFrom(data.hit.hitPoint), normal: new Vector3().copyFrom(data.hit.normal), worldNormal: new Vector3().copyFrom(data.hit.worldNormal) }) : undefined;\r\n          if (data.type === exports.InputEventType.DOWN) {\r\n              this.internalState[button].BUTTON_DOWN = true;\r\n              for (var i = 0; i < this.subscriptions[button]['BUTTON_DOWN'].length; i++) {\r\n                  var subscription = this.subscriptions[button]['BUTTON_DOWN'][i];\r\n                  // remove hit information when raycast is disabled\r\n                  if (subscription.useRaycast) {\r\n                      eventResult.hit = hit;\r\n                  }\r\n                  else {\r\n                      eventResult.hit = undefined;\r\n                  }\r\n                  subscription.fn(eventResult);\r\n              }\r\n              if (hit && hit.entityId && DisposableComponent.engine) {\r\n                  var entity = DisposableComponent.engine.entities[hit.entityId];\r\n                  var handler = entity && entity.getComponentOrNull(GlobalPointerDown);\r\n                  if (handler) {\r\n                      eventResult.hit = hit;\r\n                      handler.callback(eventResult);\r\n                  }\r\n              }\r\n          }\r\n          else {\r\n              this.internalState[button].BUTTON_DOWN = false;\r\n              for (var i = 0; i < this.subscriptions[button]['BUTTON_UP'].length; i++) {\r\n                  var subscription = this.subscriptions[button]['BUTTON_UP'][i];\r\n                  // remove hit information when raycast is disabled\r\n                  if (subscription.useRaycast) {\r\n                      eventResult.hit = hit;\r\n                  }\r\n                  else {\r\n                      eventResult.hit = undefined;\r\n                  }\r\n                  subscription.fn(eventResult);\r\n              }\r\n              if (hit && hit.entityId && DisposableComponent.engine) {\r\n                  var entity = DisposableComponent.engine.entities[hit.entityId];\r\n                  var handler = entity && entity.getComponentOrNull(GlobalPointerUp);\r\n                  if (handler) {\r\n                      eventResult.hit = hit;\r\n                      handler.callback(eventResult);\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      Input.prototype.getSubscriptionId = function (eventName, buttonId, fn) {\r\n          for (var i = 0; i < this.subscriptions[buttonId][eventName].length; i++) {\r\n              if (this.subscriptions[buttonId][eventName][i].fn === fn) {\r\n                  return i;\r\n              }\r\n          }\r\n          return -1;\r\n      };\r\n      Input.prototype.getPointerById = function (id) {\r\n          if (id === 0)\r\n              return exports.ActionButton.POINTER;\r\n          else if (id === 1)\r\n              return exports.ActionButton.PRIMARY;\r\n          return exports.ActionButton.SECONDARY;\r\n      };\r\n      return Input;\r\n  }());\n\n  /**\r\n   * @internal\r\n   */\r\n  exports.CLASS_ID = void 0;\r\n  (function (CLASS_ID) {\r\n      CLASS_ID[CLASS_ID[\"TRANSFORM\"] = 1] = \"TRANSFORM\";\r\n      CLASS_ID[CLASS_ID[\"UUID_CALLBACK\"] = 8] = \"UUID_CALLBACK\";\r\n      CLASS_ID[CLASS_ID[\"BOX_SHAPE\"] = 16] = \"BOX_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"SPHERE_SHAPE\"] = 17] = \"SPHERE_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"PLANE_SHAPE\"] = 18] = \"PLANE_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"CONE_SHAPE\"] = 19] = \"CONE_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"CYLINDER_SHAPE\"] = 20] = \"CYLINDER_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"TEXT_SHAPE\"] = 21] = \"TEXT_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"NFT_SHAPE\"] = 22] = \"NFT_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"UI_WORLD_SPACE_SHAPE\"] = 23] = \"UI_WORLD_SPACE_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"UI_SCREEN_SPACE_SHAPE\"] = 24] = \"UI_SCREEN_SPACE_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"UI_CONTAINER_RECT\"] = 25] = \"UI_CONTAINER_RECT\";\r\n      CLASS_ID[CLASS_ID[\"UI_CONTAINER_STACK\"] = 26] = \"UI_CONTAINER_STACK\";\r\n      CLASS_ID[CLASS_ID[\"UI_TEXT_SHAPE\"] = 27] = \"UI_TEXT_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"UI_INPUT_TEXT_SHAPE\"] = 28] = \"UI_INPUT_TEXT_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"UI_IMAGE_SHAPE\"] = 29] = \"UI_IMAGE_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"UI_SLIDER_SHAPE\"] = 30] = \"UI_SLIDER_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"CIRCLE_SHAPE\"] = 31] = \"CIRCLE_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"BILLBOARD\"] = 32] = \"BILLBOARD\";\r\n      CLASS_ID[CLASS_ID[\"ANIMATION\"] = 33] = \"ANIMATION\";\r\n      CLASS_ID[CLASS_ID[\"FONT\"] = 34] = \"FONT\";\r\n      CLASS_ID[CLASS_ID[\"UI_FULLSCREEN_SHAPE\"] = 40] = \"UI_FULLSCREEN_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"UI_BUTTON_SHAPE\"] = 41] = \"UI_BUTTON_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"GLTF_SHAPE\"] = 54] = \"GLTF_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"OBJ_SHAPE\"] = 55] = \"OBJ_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"AVATAR_SHAPE\"] = 56] = \"AVATAR_SHAPE\";\r\n      CLASS_ID[CLASS_ID[\"BASIC_MATERIAL\"] = 64] = \"BASIC_MATERIAL\";\r\n      CLASS_ID[CLASS_ID[\"PBR_MATERIAL\"] = 65] = \"PBR_MATERIAL\";\r\n      CLASS_ID[CLASS_ID[\"HIGHLIGHT_ENTITY\"] = 66] = \"HIGHLIGHT_ENTITY\";\r\n      /** @deprecated */\r\n      CLASS_ID[CLASS_ID[\"SOUND\"] = 67] = \"SOUND\";\r\n      CLASS_ID[CLASS_ID[\"TEXTURE\"] = 68] = \"TEXTURE\";\r\n      CLASS_ID[CLASS_ID[\"VIDEO_CLIP\"] = 70] = \"VIDEO_CLIP\";\r\n      CLASS_ID[CLASS_ID[\"VIDEO_TEXTURE\"] = 71] = \"VIDEO_TEXTURE\";\r\n      CLASS_ID[CLASS_ID[\"AUDIO_CLIP\"] = 200] = \"AUDIO_CLIP\";\r\n      CLASS_ID[CLASS_ID[\"AUDIO_SOURCE\"] = 201] = \"AUDIO_SOURCE\";\r\n      CLASS_ID[CLASS_ID[\"AUDIO_STREAM\"] = 202] = \"AUDIO_STREAM\";\r\n      CLASS_ID[CLASS_ID[\"GIZMOS\"] = 203] = \"GIZMOS\";\r\n      CLASS_ID[CLASS_ID[\"SMART_ITEM\"] = 204] = \"SMART_ITEM\";\r\n      CLASS_ID[CLASS_ID[\"AVATAR_MODIFIER_AREA\"] = 205] = \"AVATAR_MODIFIER_AREA\";\r\n      // For state sync only\r\n      CLASS_ID[CLASS_ID[\"NAME\"] = 300] = \"NAME\";\r\n      CLASS_ID[CLASS_ID[\"LOCKED_ON_EDIT\"] = 301] = \"LOCKED_ON_EDIT\";\r\n      CLASS_ID[CLASS_ID[\"VISIBLE_ON_EDIT\"] = 302] = \"VISIBLE_ON_EDIT\";\r\n  })(exports.CLASS_ID || (exports.CLASS_ID = {}));\r\n  /** @public */\r\n  exports.AvatarModifiers = void 0;\r\n  (function (AvatarModifiers) {\r\n      AvatarModifiers[\"HIDE_AVATARS\"] = \"HIDE_AVATARS\";\r\n      AvatarModifiers[\"DISABLE_PASSPORTS\"] = \"DISABLE_PASSPORTS\";\r\n  })(exports.AvatarModifiers || (exports.AvatarModifiers = {}));\r\n  /**\r\n   * Define an area where avatars can be modified in some way\r\n   * @public\r\n   */\r\n  var AvatarModifierArea = /** @class */ (function (_super) {\r\n      __extends(AvatarModifierArea, _super);\r\n      function AvatarModifierArea(args) {\r\n          var _this = _super.call(this) || this;\r\n          _this.area = args.area;\r\n          _this.modifiers = args.modifiers;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AvatarModifierArea.prototype, \"area\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AvatarModifierArea.prototype, \"modifiers\", void 0);\r\n      AvatarModifierArea = __decorate([\r\n          Component('engine.avatarModifierArea', exports.CLASS_ID.AVATAR_MODIFIER_AREA)\r\n      ], AvatarModifierArea);\r\n      return AvatarModifierArea;\r\n  }(ObservableComponent));\r\n  /**\r\n   * @public\r\n   */\r\n  var Transform = /** @class */ (function (_super) {\r\n      __extends(Transform, _super);\r\n      function Transform(args) {\r\n          if (args === void 0) { args = {}; }\r\n          var _this = _super.call(this) || this;\r\n          _this.position = args.position || Vector3.Zero();\r\n          _this.rotation = args.rotation || Quaternion.Identity;\r\n          _this.scale = args.scale || new Vector3(1, 1, 1);\r\n          return _this;\r\n      }\r\n      Object.defineProperty(Transform.prototype, \"eulerAngles\", {\r\n          /**\r\n           * @public\r\n           * The rotation as Euler angles in degrees.\r\n           */\r\n          get: function () {\r\n              return this.rotation.eulerAngles;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      /**\r\n       * @public\r\n       * Rotates the transform so the forward vector points at target's current position.\r\n       */\r\n      Transform.prototype.lookAt = function (target, worldUp) {\r\n          if (worldUp === void 0) { worldUp = MathTmp.staticUp; }\r\n          var result = new Matrix();\r\n          Matrix.LookAtLHToRef(this.position, target, worldUp, result);\r\n          result.invert();\r\n          Quaternion.FromRotationMatrixToRef(result, this.rotation);\r\n          return this;\r\n      };\r\n      /**\r\n       * @public\r\n       * Applies a rotation of euler angles around the x, y and z axis.\r\n       */\r\n      Transform.prototype.rotate = function (axis, angle) {\r\n          this.rotation.multiplyInPlace(this.rotation.angleAxis(angle, axis));\r\n          return this;\r\n      };\r\n      /**\r\n       * @public\r\n       * Moves the transform in the direction and distance of translation.\r\n       */\r\n      Transform.prototype.translate = function (vec) {\r\n          this.position.addInPlace(vec);\r\n          return this;\r\n      };\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Transform.prototype, \"position\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Transform.prototype, \"rotation\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Transform.prototype, \"scale\", void 0);\r\n      Transform = __decorate([\r\n          Component('engine.transform', exports.CLASS_ID.TRANSFORM)\r\n      ], Transform);\r\n      return Transform;\r\n  }(ObservableComponent));\r\n  /**\r\n   * Billboard defines a behavior that makes the entity face the camera in any moment.\r\n   * @public\r\n   */\r\n  var Billboard = /** @class */ (function (_super) {\r\n      __extends(Billboard, _super);\r\n      function Billboard(x, y, z) {\r\n          if (x === void 0) { x = true; }\r\n          if (y === void 0) { y = true; }\r\n          if (z === void 0) { z = true; }\r\n          var _this = _super.call(this) || this;\r\n          _this.x = true;\r\n          _this.y = true;\r\n          _this.z = true;\r\n          _this.x = x;\r\n          _this.y = y;\r\n          _this.z = z;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Billboard.prototype, \"x\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Billboard.prototype, \"y\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Billboard.prototype, \"z\", void 0);\r\n      Billboard = __decorate([\r\n          Component('engine.billboard', exports.CLASS_ID.BILLBOARD)\r\n      ], Billboard);\r\n      return Billboard;\r\n  }(ObservableComponent));\r\n  /**\r\n   * @public\r\n   */\r\n  var Shape = /** @class */ (function (_super) {\r\n      __extends(Shape, _super);\r\n      function Shape() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          /**\r\n           * Set to true to turn on the collider for the entity.\r\n           */\r\n          _this.withCollisions = true;\r\n          /**\r\n           * Set to true to turn on the PointerEvents blocking for the entity.\r\n           */\r\n          _this.isPointerBlocker = true;\r\n          /**\r\n           * Defines if the entity and its children should be rendered\r\n           */\r\n          _this.visible = true;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Shape.prototype, \"withCollisions\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Shape.prototype, \"isPointerBlocker\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Shape.prototype, \"visible\", void 0);\r\n      return Shape;\r\n  }(ObservableComponent));\r\n  /**\r\n   * @public\r\n   */\r\n  var BoxShape = /** @class */ (function (_super) {\r\n      __extends(BoxShape, _super);\r\n      function BoxShape() {\r\n          return _super !== null && _super.apply(this, arguments) || this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], BoxShape.prototype, \"uvs\", void 0);\r\n      BoxShape = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.BOX_SHAPE)\r\n      ], BoxShape);\r\n      return BoxShape;\r\n  }(Shape));\r\n  /**\r\n   * @public\r\n   */\r\n  var SphereShape = /** @class */ (function (_super) {\r\n      __extends(SphereShape, _super);\r\n      function SphereShape() {\r\n          return _super !== null && _super.apply(this, arguments) || this;\r\n      }\r\n      SphereShape = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.SPHERE_SHAPE)\r\n      ], SphereShape);\r\n      return SphereShape;\r\n  }(Shape));\r\n  /**\r\n   * @public\r\n   */\r\n  var CircleShape = /** @class */ (function (_super) {\r\n      __extends(CircleShape, _super);\r\n      function CircleShape() {\r\n          return _super !== null && _super.apply(this, arguments) || this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], CircleShape.prototype, \"segments\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], CircleShape.prototype, \"arc\", void 0);\r\n      CircleShape = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.CIRCLE_SHAPE)\r\n      ], CircleShape);\r\n      return CircleShape;\r\n  }(Shape));\r\n  /**\r\n   * @public\r\n   */\r\n  var PlaneShape = /** @class */ (function (_super) {\r\n      __extends(PlaneShape, _super);\r\n      function PlaneShape() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          /**\r\n           * Sets the horizontal length of the plane. Defaults to 1.\r\n           */\r\n          _this.width = 1;\r\n          /**\r\n           * Sets the vertical length of the plane. Defaults to 1.\r\n           */\r\n          _this.height = 1;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], PlaneShape.prototype, \"width\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], PlaneShape.prototype, \"height\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], PlaneShape.prototype, \"uvs\", void 0);\r\n      PlaneShape = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.PLANE_SHAPE)\r\n      ], PlaneShape);\r\n      return PlaneShape;\r\n  }(Shape));\r\n  /**\r\n   * @public\r\n   */\r\n  var ConeShape = /** @class */ (function (_super) {\r\n      __extends(ConeShape, _super);\r\n      function ConeShape() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          /**\r\n           * The radius of the top of a truncated cone. Defaults to 0.\r\n           */\r\n          _this.radiusTop = 0;\r\n          /**\r\n           * The radius of the base of the cone. Defaults to 1.\r\n           */\r\n          _this.radiusBottom = 1;\r\n          /**\r\n           * Sets the number of rings along the cone height (positive integer). Defaults to 1.\r\n           */\r\n          _this.segmentsHeight = 1;\r\n          /**\r\n           * Sets the number of cone sides (positive integer). Defaults to 36.\r\n           */\r\n          _this.segmentsRadial = 36;\r\n          /**\r\n           * Adds two extra faces per subdivision to enclose the cone around its height axis.\r\n           * Defaults to false.\r\n           */\r\n          _this.openEnded = false;\r\n          /**\r\n           * Sets the radius of the top and bottom caps at once.\r\n           *\r\n           * Properties `radiusTop` and `radiusBottom` are prioritized over this one.\r\n           */\r\n          _this.radius = null;\r\n          /**\r\n           * Sets the ratio (max 1) to apply to the circumference to slice the cone. Defaults to 360.\r\n           */\r\n          _this.arc = 360;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], ConeShape.prototype, \"radiusTop\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], ConeShape.prototype, \"radiusBottom\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], ConeShape.prototype, \"segmentsHeight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], ConeShape.prototype, \"segmentsRadial\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], ConeShape.prototype, \"openEnded\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], ConeShape.prototype, \"radius\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], ConeShape.prototype, \"arc\", void 0);\r\n      ConeShape = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.CONE_SHAPE)\r\n      ], ConeShape);\r\n      return ConeShape;\r\n  }(Shape));\r\n  /**\r\n   * @public\r\n   */\r\n  var CylinderShape = /** @class */ (function (_super) {\r\n      __extends(CylinderShape, _super);\r\n      function CylinderShape() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          /**\r\n           * The radius of the top of the cylinder. Defaults to 0.\r\n           */\r\n          _this.radiusTop = 1;\r\n          /**\r\n           * The radius of the base of the cylinder. Defaults to 1.\r\n           */\r\n          _this.radiusBottom = 1;\r\n          /**\r\n           * Sets the number of rings along the cylinder height (positive integer). Defaults to 1.\r\n           */\r\n          _this.segmentsHeight = 1;\r\n          /**\r\n           * Sets the number of cylinder sides (positive integer). Defaults to 36.\r\n           */\r\n          _this.segmentsRadial = 36;\r\n          /**\r\n           * Adds two extra faces per subdivision to enclose the cylinder around its height axis.\r\n           * Defaults to false.\r\n           */\r\n          _this.openEnded = false;\r\n          /**\r\n           * Sets the radius of the top and bottom caps at once.\r\n           *\r\n           * Properties `radiusTop` and `radiusBottom` are prioritized over this one.\r\n           */\r\n          _this.radius = null;\r\n          /**\r\n           * Sets the ratio (max 1) to apply to the circumference to slice the cylinder. Defaults to 360.\r\n           */\r\n          _this.arc = 360;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], CylinderShape.prototype, \"radiusTop\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], CylinderShape.prototype, \"radiusBottom\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], CylinderShape.prototype, \"segmentsHeight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], CylinderShape.prototype, \"segmentsRadial\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], CylinderShape.prototype, \"openEnded\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], CylinderShape.prototype, \"radius\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], CylinderShape.prototype, \"arc\", void 0);\r\n      CylinderShape = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.CYLINDER_SHAPE)\r\n      ], CylinderShape);\r\n      return CylinderShape;\r\n  }(Shape));\r\n  /**\r\n   * @public\r\n   */\r\n  var GLTFShape = /** @class */ (function (_super) {\r\n      __extends(GLTFShape, _super);\r\n      function GLTFShape(src) {\r\n          var _this = _super.call(this) || this;\r\n          _this.src = src;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          Shape.readonly\r\n      ], GLTFShape.prototype, \"src\", void 0);\r\n      GLTFShape = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.GLTF_SHAPE)\r\n      ], GLTFShape);\r\n      return GLTFShape;\r\n  }(Shape));\r\n  /** @public */\r\n  exports.PictureFrameStyle = void 0;\r\n  (function (PictureFrameStyle) {\r\n      PictureFrameStyle[PictureFrameStyle[\"CLASSIC\"] = 0] = \"CLASSIC\";\r\n      PictureFrameStyle[PictureFrameStyle[\"BAROQUE_ORNAMENT\"] = 1] = \"BAROQUE_ORNAMENT\";\r\n      PictureFrameStyle[PictureFrameStyle[\"DIAMOND_ORNAMENT\"] = 2] = \"DIAMOND_ORNAMENT\";\r\n      PictureFrameStyle[PictureFrameStyle[\"MINIMAL_WIDE\"] = 3] = \"MINIMAL_WIDE\";\r\n      PictureFrameStyle[PictureFrameStyle[\"MINIMAL_GREY\"] = 4] = \"MINIMAL_GREY\";\r\n      PictureFrameStyle[PictureFrameStyle[\"BLOCKY\"] = 5] = \"BLOCKY\";\r\n      PictureFrameStyle[PictureFrameStyle[\"GOLD_EDGES\"] = 6] = \"GOLD_EDGES\";\r\n      PictureFrameStyle[PictureFrameStyle[\"GOLD_CARVED\"] = 7] = \"GOLD_CARVED\";\r\n      PictureFrameStyle[PictureFrameStyle[\"GOLD_WIDE\"] = 8] = \"GOLD_WIDE\";\r\n      PictureFrameStyle[PictureFrameStyle[\"GOLD_ROUNDED\"] = 9] = \"GOLD_ROUNDED\";\r\n      PictureFrameStyle[PictureFrameStyle[\"METAL_MEDIUM\"] = 10] = \"METAL_MEDIUM\";\r\n      PictureFrameStyle[PictureFrameStyle[\"METAL_WIDE\"] = 11] = \"METAL_WIDE\";\r\n      PictureFrameStyle[PictureFrameStyle[\"METAL_SLIM\"] = 12] = \"METAL_SLIM\";\r\n      PictureFrameStyle[PictureFrameStyle[\"METAL_ROUNDED\"] = 13] = \"METAL_ROUNDED\";\r\n      PictureFrameStyle[PictureFrameStyle[\"PINS\"] = 14] = \"PINS\";\r\n      PictureFrameStyle[PictureFrameStyle[\"MINIMAL_BLACK\"] = 15] = \"MINIMAL_BLACK\";\r\n      PictureFrameStyle[PictureFrameStyle[\"MINIMAL_WHITE\"] = 16] = \"MINIMAL_WHITE\";\r\n      PictureFrameStyle[PictureFrameStyle[\"TAPE\"] = 17] = \"TAPE\";\r\n      PictureFrameStyle[PictureFrameStyle[\"WOOD_SLIM\"] = 18] = \"WOOD_SLIM\";\r\n      PictureFrameStyle[PictureFrameStyle[\"WOOD_WIDE\"] = 19] = \"WOOD_WIDE\";\r\n      PictureFrameStyle[PictureFrameStyle[\"WOOD_TWIGS\"] = 20] = \"WOOD_TWIGS\";\r\n      PictureFrameStyle[PictureFrameStyle[\"CANVAS\"] = 21] = \"CANVAS\";\r\n      PictureFrameStyle[PictureFrameStyle[\"NONE\"] = 22] = \"NONE\";\r\n  })(exports.PictureFrameStyle || (exports.PictureFrameStyle = {}));\r\n  /**\r\n   * @public\r\n   */\r\n  var NFTShape = /** @class */ (function (_super) {\r\n      __extends(NFTShape, _super);\r\n      function NFTShape(src, args) {\r\n          if (args === void 0) { args = {}; }\r\n          var _this = _super.call(this) || this;\r\n          _this.src = src;\r\n          var color = new Color3(0.6404918, 0.611472, 0.8584906);\r\n          var style = exports.PictureFrameStyle.CLASSIC;\r\n          // check if args is color (backwards compatibility)\r\n          if ('r' in args) {\r\n              color = args;\r\n          }\r\n          else if (args != null) {\r\n              if (args.color)\r\n                  color = args.color;\r\n              if (args.style)\r\n                  style = args.style;\r\n          }\r\n          _this.color = color;\r\n          _this.style = style;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          Shape.readonly\r\n      ], NFTShape.prototype, \"src\", void 0);\r\n      __decorate([\r\n          Shape.readonly\r\n      ], NFTShape.prototype, \"style\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], NFTShape.prototype, \"color\", void 0);\r\n      NFTShape = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.NFT_SHAPE)\r\n      ], NFTShape);\r\n      return NFTShape;\r\n  }(Shape));\r\n  /**\r\n   * @public\r\n   */\r\n  var Texture = /** @class */ (function (_super) {\r\n      __extends(Texture, _super);\r\n      function Texture(src, opts) {\r\n          var _this = _super.call(this) || this;\r\n          _this.src = src;\r\n          if (opts) {\r\n              for (var i in opts) {\r\n                  var that = _this;\r\n                  that[i] = opts[i];\r\n              }\r\n          }\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], Texture.prototype, \"src\", void 0);\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], Texture.prototype, \"samplingMode\", void 0);\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], Texture.prototype, \"wrap\", void 0);\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], Texture.prototype, \"hasAlpha\", void 0);\r\n      Texture = __decorate([\r\n          DisposableComponent('engine.texture', exports.CLASS_ID.TEXTURE)\r\n      ], Texture);\r\n      return Texture;\r\n  }(ObservableComponent));\r\n  /**\r\n   * @public\r\n   */\r\n  var Animator = /** @class */ (function (_super) {\r\n      __extends(Animator, _super);\r\n      function Animator() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          _this.states = [];\r\n          return _this;\r\n      }\r\n      /**\r\n       * Adds an AnimationState to the animation lists.\r\n       */\r\n      Animator.prototype.addClip = function (clip) {\r\n          var _this = this;\r\n          this.states.push(clip);\r\n          clip.onChange(function () {\r\n              _this.dirty = true;\r\n          });\r\n          clip.owner = this;\r\n          return this;\r\n      };\r\n      /**\r\n       * Gets the animation clip instance for the specified clip name.\r\n       * If the clip doesn't exist a new one will be created.\r\n       */\r\n      Animator.prototype.getClip = function (clipName) {\r\n          for (var i = 0; i < this.states.length; i++) {\r\n              var clip = this.states[i];\r\n              if (clip.clip === clipName) {\r\n                  return clip;\r\n              }\r\n          }\r\n          var newClip = new AnimationState(clipName);\r\n          this.addClip(newClip);\r\n          return newClip;\r\n      };\r\n      /**\r\n       * Resets and pauses the animation state, if the clip is null it will stop all animations on this animator\r\n       */\r\n      Animator.prototype.stop = function (clip) {\r\n          if (clip) {\r\n              clip.playing = false;\r\n              clip.shouldReset = true;\r\n          }\r\n          else {\r\n              for (var i = 0; i < this.states.length; i++) {\r\n                  var animationState = this.states[i];\r\n                  this.stop(animationState);\r\n              }\r\n          }\r\n      };\r\n      /**\r\n       * Starts the animation\r\n       */\r\n      Animator.prototype.play = function (clip, reset) {\r\n          if (reset === void 0) { reset = false; }\r\n          for (var i = 0; i < this.states.length; i++) {\r\n              var animationState = this.states[i];\r\n              if (animationState.layer === clip.layer && clip !== animationState) {\r\n                  this.pause(animationState);\r\n              }\r\n          }\r\n          if (reset)\r\n              clip.shouldReset = true;\r\n          clip.playing = true;\r\n          clip.dirty = true;\r\n          clip.data.nonce = Math.random();\r\n      };\r\n      /**\r\n       * Pauses the animation state, if the clip is null it will pause all animations on this animator\r\n       */\r\n      Animator.prototype.pause = function (clip) {\r\n          if (clip) {\r\n              clip.playing = false;\r\n          }\r\n          else {\r\n              for (var i = 0; i < this.states.length; i++) {\r\n                  var animationState = this.states[i];\r\n                  this.pause(animationState);\r\n              }\r\n          }\r\n      };\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], Animator.prototype, \"states\", void 0);\r\n      Animator = __decorate([\r\n          Component('engine.animator', exports.CLASS_ID.ANIMATION)\r\n      ], Animator);\r\n      return Animator;\r\n  }(Shape));\r\n  /**\r\n   * @public\r\n   */\r\n  var OBJShape = /** @class */ (function (_super) {\r\n      __extends(OBJShape, _super);\r\n      function OBJShape(src) {\r\n          var _this = _super.call(this) || this;\r\n          _this.src = src;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], OBJShape.prototype, \"src\", void 0);\r\n      OBJShape = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.OBJ_SHAPE)\r\n      ], OBJShape);\r\n      return OBJShape;\r\n  }(Shape));\r\n  /**\r\n   * @public\r\n   */\r\n  var Font = /** @class */ (function (_super) {\r\n      __extends(Font, _super);\r\n      function Font(src) {\r\n          if (src === void 0) { src = ''; }\r\n          var _this = _super.call(this) || this;\r\n          _this.src = src;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], Font.prototype, \"src\", void 0);\r\n      Font = __decorate([\r\n          DisposableComponent('engine.font', exports.CLASS_ID.FONT)\r\n      ], Font);\r\n      return Font;\r\n  }(ObservableComponent));\r\n  /** @alpha */\r\n  exports.Fonts = void 0;\r\n  (function (Fonts) {\r\n      Fonts[\"SanFrancisco\"] = \"builtin:SF-UI-Text-Regular SDF\";\r\n      Fonts[\"SanFrancisco_Heavy\"] = \"builtin:SF-UI-Text-Heavy SDF\";\r\n      Fonts[\"SanFrancisco_Semibold\"] = \"builtin:SF-UI-Text-Semibold SDF\";\r\n      Fonts[\"LiberationSans\"] = \"builtin:LiberationSans SDF\";\r\n  })(exports.Fonts || (exports.Fonts = {}));\r\n  /**\r\n   * @public\r\n   */\r\n  var TextShape = /** @class */ (function (_super) {\r\n      __extends(TextShape, _super);\r\n      function TextShape(value) {\r\n          var _this = _super.call(this) || this;\r\n          _this.outlineWidth = 0;\r\n          _this.outlineColor = new Color3(1, 1, 1);\r\n          _this.color = new Color3(1, 1, 1);\r\n          _this.fontSize = 10;\r\n          _this.fontWeight = 'normal';\r\n          _this.opacity = 1.0;\r\n          _this.value = '';\r\n          _this.lineSpacing = '0px';\r\n          _this.lineCount = 0;\r\n          _this.resizeToFit = false;\r\n          _this.textWrapping = false;\r\n          _this.shadowBlur = 0;\r\n          _this.shadowOffsetX = 0;\r\n          _this.shadowOffsetY = 0;\r\n          _this.shadowColor = new Color3(1, 1, 1);\r\n          _this.zIndex = 0;\r\n          _this.hTextAlign = 'center';\r\n          _this.vTextAlign = 'center';\r\n          _this.width = 1;\r\n          _this.height = 1;\r\n          _this.paddingTop = 0;\r\n          _this.paddingRight = 0;\r\n          _this.paddingBottom = 0;\r\n          _this.paddingLeft = 0;\r\n          _this.isPickable = false;\r\n          _this.billboard = false;\r\n          _this.visible = true;\r\n          if (value) {\r\n              _this.value = value;\r\n          }\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"outlineWidth\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"outlineColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"color\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"fontSize\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"fontWeight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.component\r\n      ], TextShape.prototype, \"font\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"opacity\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"value\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"lineSpacing\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"lineCount\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"resizeToFit\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"textWrapping\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"shadowBlur\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"shadowOffsetX\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"shadowOffsetY\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"shadowColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"zIndex\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"hTextAlign\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"vTextAlign\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"width\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"height\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"paddingTop\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"paddingRight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"paddingBottom\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"paddingLeft\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"isPickable\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"billboard\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], TextShape.prototype, \"visible\", void 0);\r\n      TextShape = __decorate([\r\n          Component('engine.text', exports.CLASS_ID.TEXT_SHAPE)\r\n      ], TextShape);\r\n      return TextShape;\r\n  }(ObservableComponent));\r\n  /**\r\n   * @public\r\n   */\r\n  exports.TransparencyMode = void 0;\r\n  (function (TransparencyMode) {\r\n      TransparencyMode[TransparencyMode[\"OPAQUE\"] = 0] = \"OPAQUE\";\r\n      TransparencyMode[TransparencyMode[\"ALPHA_TEST\"] = 1] = \"ALPHA_TEST\";\r\n      TransparencyMode[TransparencyMode[\"ALPHA_BLEND\"] = 2] = \"ALPHA_BLEND\";\r\n      TransparencyMode[TransparencyMode[\"ALPHA_TEST_AND_BLEND\"] = 3] = \"ALPHA_TEST_AND_BLEND\";\r\n      TransparencyMode[TransparencyMode[\"AUTO\"] = 4] = \"AUTO\";\r\n  })(exports.TransparencyMode || (exports.TransparencyMode = {}));\r\n  /**\r\n   * @public\r\n   */\r\n  var Material = /** @class */ (function (_super) {\r\n      __extends(Material, _super);\r\n      function Material() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          /**\r\n           * Cutoff level for ALPHATEST mode. Range is between 0 and 1.\r\n           * Defaults to 0.5\r\n           */\r\n          _this.alphaTest = 0.5;\r\n          /**\r\n           * Allow the material to cast shadows over other objects\r\n           */\r\n          _this.castShadows = true;\r\n          /**\r\n           * Sets the transparency mode of the material.\r\n           * Defaults to -1.\r\n           *\r\n           * | Value | Type                                           |\r\n           * | ----- | ---------------------------------------------- |\r\n           * | 0     | OPAQUE  (default)                              |\r\n           * | 1     | ALPHATEST                                      |\r\n           * | 2     | ALPHABLEND                                     |\r\n           * | 3     | ALPHATESTANDBLEND                              |\r\n           * | 4     | AUTO (ALPHABLEND if alpha OPAQUE otherwise     |\r\n           */\r\n          _this.transparencyMode = exports.TransparencyMode.AUTO;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Material.prototype, \"alphaTest\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Material.prototype, \"albedoColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Material.prototype, \"emissiveColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Material.prototype, \"metallic\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Material.prototype, \"roughness\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Material.prototype, \"ambientColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Material.prototype, \"reflectionColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Material.prototype, \"reflectivityColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Material.prototype, \"directIntensity\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Material.prototype, \"microSurface\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Material.prototype, \"emissiveIntensity\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Material.prototype, \"environmentIntensity\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Material.prototype, \"specularIntensity\", void 0);\r\n      __decorate([\r\n          ObservableComponent.component\r\n      ], Material.prototype, \"albedoTexture\", void 0);\r\n      __decorate([\r\n          ObservableComponent.component\r\n      ], Material.prototype, \"alphaTexture\", void 0);\r\n      __decorate([\r\n          ObservableComponent.component\r\n      ], Material.prototype, \"emissiveTexture\", void 0);\r\n      __decorate([\r\n          ObservableComponent.component\r\n      ], Material.prototype, \"bumpTexture\", void 0);\r\n      __decorate([\r\n          ObservableComponent.component\r\n      ], Material.prototype, \"refractionTexture\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Material.prototype, \"castShadows\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Material.prototype, \"transparencyMode\", void 0);\r\n      Material = __decorate([\r\n          DisposableComponent('engine.material', exports.CLASS_ID.PBR_MATERIAL)\r\n      ], Material);\r\n      return Material;\r\n  }(ObservableComponent));\r\n  /**\r\n   * @public\r\n   */\r\n  var BasicMaterial = /** @class */ (function (_super) {\r\n      __extends(BasicMaterial, _super);\r\n      function BasicMaterial() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          /**\r\n           * A number between 0 and 1.\r\n           * Any pixel with an alpha lower than this value will be shown as transparent.\r\n           */\r\n          _this.alphaTest = 0.5;\r\n          /**\r\n           * Allow the material to cast shadows over other objects\r\n           */\r\n          _this.castShadows = true;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.component\r\n      ], BasicMaterial.prototype, \"texture\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], BasicMaterial.prototype, \"alphaTest\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], BasicMaterial.prototype, \"castShadows\", void 0);\r\n      BasicMaterial = __decorate([\r\n          DisposableComponent('engine.material', exports.CLASS_ID.BASIC_MATERIAL)\r\n      ], BasicMaterial);\r\n      return BasicMaterial;\r\n  }(ObservableComponent));\r\n  /**\r\n   * @public\r\n   */\r\n  var OnUUIDEvent = /** @class */ (function (_super) {\r\n      __extends(OnUUIDEvent, _super);\r\n      function OnUUIDEvent(callback) {\r\n          var _this = _super.call(this) || this;\r\n          _this.uuid = newId('UUID');\r\n          if (!callback || !('apply' in callback) || !('call' in callback)) {\r\n              throw new Error('Callback is not a function');\r\n          }\r\n          _this.callback = callback;\r\n          return _this;\r\n      }\r\n      OnUUIDEvent.uuidEvent = function (target, propertyKey) {\r\n          if (delete target[propertyKey]) {\r\n              var componentSymbol_1 = propertyKey + '_' + Math.random();\r\n              target[componentSymbol_1] = undefined;\r\n              Object.defineProperty(target, componentSymbol_1, __assign(__assign({}, Object.getOwnPropertyDescriptor(target, componentSymbol_1)), { enumerable: false }));\r\n              Object.defineProperty(target, propertyKey.toString(), {\r\n                  get: function () {\r\n                      return this[componentSymbol_1];\r\n                  },\r\n                  set: function (value) {\r\n                      var oldValue = this[componentSymbol_1];\r\n                      if (value) {\r\n                          if (value instanceof OnUUIDEvent) {\r\n                              this.data[propertyKey] = value.uuid;\r\n                          }\r\n                          else {\r\n                              throw new Error('value is not an OnUUIDEvent');\r\n                          }\r\n                      }\r\n                      else {\r\n                          this.data[propertyKey] = null;\r\n                      }\r\n                      this[componentSymbol_1] = value;\r\n                      if (value !== oldValue) {\r\n                          this.dirty = true;\r\n                          for (var i = 0; i < this.subscriptions.length; i++) {\r\n                              this.subscriptions[i](propertyKey, value, oldValue);\r\n                          }\r\n                      }\r\n                  },\r\n                  enumerable: true\r\n              });\r\n          }\r\n      };\r\n      OnUUIDEvent.prototype.toJSON = function () {\r\n          return { uuid: this.uuid, type: this.type };\r\n      };\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], OnUUIDEvent.prototype, \"callback\", void 0);\r\n      return OnUUIDEvent;\r\n  }(ObservableComponent));\r\n  /**\r\n   * @public\r\n   */\r\n  var OnPointerUUIDEvent = /** @class */ (function (_super) {\r\n      __extends(OnPointerUUIDEvent, _super);\r\n      function OnPointerUUIDEvent() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          _this.button = exports.ActionButton.ANY;\r\n          _this.hoverText = 'Interact';\r\n          _this.distance = 10;\r\n          _this.showFeedback = true;\r\n          return _this;\r\n      }\r\n      OnPointerUUIDEvent.prototype.toJSON = function () {\r\n          return {\r\n              uuid: this.uuid,\r\n              type: this.type,\r\n              button: this.button,\r\n              hoverText: this.hoverText,\r\n              distance: this.distance,\r\n              showFeedback: this.showFeedback\r\n          };\r\n      };\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], OnPointerUUIDEvent.prototype, \"button\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], OnPointerUUIDEvent.prototype, \"hoverText\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], OnPointerUUIDEvent.prototype, \"distance\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], OnPointerUUIDEvent.prototype, \"showFeedback\", void 0);\r\n      return OnPointerUUIDEvent;\r\n  }(OnUUIDEvent));\r\n  /**\r\n   * @internal\r\n   */\r\n  var OnPointerLock = /** @class */ (function (_super) {\r\n      __extends(OnPointerLock, _super);\r\n      function OnPointerLock() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          _this.type = 'onPointerLock';\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], OnPointerLock.prototype, \"type\", void 0);\r\n      OnPointerLock = __decorate([\r\n          Component('engine.onPointerLock', exports.CLASS_ID.UUID_CALLBACK)\r\n      ], OnPointerLock);\r\n      return OnPointerLock;\r\n  }(OnUUIDEvent));\r\n  /**\r\n   * @public\r\n   */\r\n  var OnAnimationEnd = /** @class */ (function (_super) {\r\n      __extends(OnAnimationEnd, _super);\r\n      function OnAnimationEnd() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          _this.type = 'onAnimationEnd';\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], OnAnimationEnd.prototype, \"type\", void 0);\r\n      OnAnimationEnd = __decorate([\r\n          Component('engine.onAnimationEnd', exports.CLASS_ID.UUID_CALLBACK)\r\n      ], OnAnimationEnd);\r\n      return OnAnimationEnd;\r\n  }(OnUUIDEvent));\r\n  /**\r\n   * @internal\r\n   */\r\n  var SmartItem = /** @class */ (function (_super) {\r\n      __extends(SmartItem, _super);\r\n      function SmartItem() {\r\n          return _super !== null && _super.apply(this, arguments) || this;\r\n      }\r\n      SmartItem = __decorate([\r\n          Component('engine.smartItem', exports.CLASS_ID.SMART_ITEM)\r\n      ], SmartItem);\r\n      return SmartItem;\r\n  }(ObservableComponent));\r\n  /**\r\n   * @public\r\n   */\r\n  var VideoClip = /** @class */ (function (_super) {\r\n      __extends(VideoClip, _super);\r\n      function VideoClip(url) {\r\n          var _this = _super.call(this) || this;\r\n          _this.url = url;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], VideoClip.prototype, \"url\", void 0);\r\n      VideoClip = __decorate([\r\n          DisposableComponent('engine.VideoClip', exports.CLASS_ID.VIDEO_CLIP)\r\n      ], VideoClip);\r\n      return VideoClip;\r\n  }(ObservableComponent));\r\n  /**\r\n   * @public\r\n   */\r\n  var VideoTexture = /** @class */ (function (_super) {\r\n      __extends(VideoTexture, _super);\r\n      function VideoTexture(videoClip, opts) {\r\n          var _this = _super.call(this) || this;\r\n          _this.volume = 1;\r\n          _this.playbackRate = 1;\r\n          _this.loop = false;\r\n          _this.seek = -1;\r\n          /**\r\n           * Is this VideoTexture playing?\r\n           */\r\n          _this.playing = false;\r\n          if (!(videoClip instanceof VideoClip)) {\r\n              throw new Error(\"Trying to create VideoTexture(VideoClip) with an invalid VideoClip\");\r\n          }\r\n          _this.videoClipId = getComponentId(videoClip);\r\n          if (opts) {\r\n              for (var i in opts) {\r\n                  var that = _this;\r\n                  that[i] = opts[i];\r\n              }\r\n          }\r\n          return _this;\r\n      }\r\n      VideoTexture.prototype.play = function () {\r\n          this.playing = true;\r\n      };\r\n      VideoTexture.prototype.pause = function () {\r\n          this.playing = false;\r\n      };\r\n      VideoTexture.prototype.reset = function () {\r\n          this.seekTime(0);\r\n          this.pause();\r\n      };\r\n      VideoTexture.prototype.seekTime = function (seconds) {\r\n          this.seek = seconds;\r\n          this.dirty = true;\r\n          this.data.nonce = Math.random();\r\n      };\r\n      VideoTexture.prototype.toJSON = function () {\r\n          if (this.seek >= 0) {\r\n              // the seek value was changed/used\r\n              var ret = JSON.parse(JSON.stringify(_super.prototype.toJSON.call(this)));\r\n              this.seek = -1;\r\n              return ret;\r\n          }\r\n          return _super.prototype.toJSON.call(this);\r\n      };\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], VideoTexture.prototype, \"videoClipId\", void 0);\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], VideoTexture.prototype, \"samplingMode\", void 0);\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], VideoTexture.prototype, \"wrap\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], VideoTexture.prototype, \"volume\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], VideoTexture.prototype, \"playbackRate\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], VideoTexture.prototype, \"loop\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], VideoTexture.prototype, \"seek\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], VideoTexture.prototype, \"playing\", void 0);\r\n      VideoTexture = __decorate([\r\n          DisposableComponent('engine.VideoTexture', exports.CLASS_ID.VIDEO_TEXTURE)\r\n      ], VideoTexture);\r\n      return VideoTexture;\r\n  }(ObservableComponent));\n\n  /**\r\n   * @public\r\n   */\r\n  var Camera = /** @class */ (function () {\r\n      function Camera() {\r\n          var _this = this;\r\n          /** Camera position, relative to the parcel. */\r\n          this.position = new Vector3();\r\n          /** Camera rotation */\r\n          this.rotation = new Quaternion();\r\n          /** Feet position, relative to the parcel.  */\r\n          this.feetPosition = new Vector3();\r\n          /** Camera position, absolute. */\r\n          this.worldPosition = new Vector3();\r\n          // @internal\r\n          this.lastEventPosition = { x: 0, y: 0, z: 0 };\r\n          // @internal\r\n          this.lastEventWorldPosition = { x: 0, y: 0, z: 0 };\r\n          // @internal\r\n          this.lastEventRotation = { x: 0, y: 0, z: 0, w: 1.0 };\r\n          // @internal\r\n          this._playerHeight = 1.6;\r\n          // @internal\r\n          this._cameraMode = exports.CameraMode.FirstPerson;\r\n          if (typeof dcl !== 'undefined') {\r\n              dcl.subscribe('positionChanged');\r\n              dcl.subscribe('rotationChanged');\r\n              dcl.subscribe('cameraModeChanged');\r\n              dcl.onEvent(function (event) {\r\n                  switch (event.type) {\r\n                      case 'positionChanged':\r\n                          _this.positionChanged(event.data);\r\n                          break;\r\n                      case 'rotationChanged':\r\n                          _this.rotationChanged(event.data);\r\n                          break;\r\n                      case 'cameraModeChanged':\r\n                          _this.cameraModeChanged(event.data);\r\n                          break;\r\n                  }\r\n              });\r\n          }\r\n          Object.defineProperty(this.position, 'x', {\r\n              get: function () { return _this.lastEventPosition.x; }\r\n          });\r\n          Object.defineProperty(this.position, 'y', {\r\n              get: function () { return _this.lastEventPosition.y; }\r\n          });\r\n          Object.defineProperty(this.position, 'z', {\r\n              get: function () { return _this.lastEventPosition.z; }\r\n          });\r\n          Object.defineProperty(this.worldPosition, 'x', {\r\n              get: function () { return _this.lastEventWorldPosition.x; }\r\n          });\r\n          Object.defineProperty(this.worldPosition, 'y', {\r\n              get: function () { return _this.lastEventWorldPosition.y; }\r\n          });\r\n          Object.defineProperty(this.worldPosition, 'z', {\r\n              get: function () { return _this.lastEventWorldPosition.z; }\r\n          });\r\n          Object.defineProperty(this.feetPosition, 'x', {\r\n              get: function () { return _this.lastEventPosition.x; }\r\n          });\r\n          Object.defineProperty(this.feetPosition, 'y', {\r\n              get: function () { return _this.lastEventPosition.y - _this.playerHeight; }\r\n          });\r\n          Object.defineProperty(this.feetPosition, 'z', {\r\n              get: function () { return _this.lastEventPosition.z; }\r\n          });\r\n          Object.defineProperty(this.rotation, 'x', {\r\n              get: function () { return _this.lastEventRotation.x; }\r\n          });\r\n          Object.defineProperty(this.rotation, 'y', {\r\n              get: function () { return _this.lastEventRotation.y; }\r\n          });\r\n          Object.defineProperty(this.rotation, 'z', {\r\n              get: function () { return _this.lastEventRotation.z; }\r\n          });\r\n          Object.defineProperty(this.rotation, 'w', {\r\n              get: function () { return _this.lastEventRotation.w; }\r\n          });\r\n      }\r\n      Object.defineProperty(Camera, \"instance\", {\r\n          get: function () {\r\n              if (!Camera._instance) {\r\n                  Camera._instance = new Camera();\r\n              }\r\n              return Camera._instance;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(Camera.prototype, \"playerHeight\", {\r\n          /** Player height. */\r\n          get: function () {\r\n              return this._playerHeight;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(Camera.prototype, \"cameraMode\", {\r\n          /** Get Camera Mode. */\r\n          get: function () {\r\n              return this._cameraMode;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      // @internal\r\n      Camera.prototype.positionChanged = function (e) {\r\n          this.lastEventPosition = e.position;\r\n          this.lastEventWorldPosition = e.cameraPosition;\r\n          this._playerHeight = e.playerHeight;\r\n      };\r\n      // @internal\r\n      Camera.prototype.rotationChanged = function (e) {\r\n          this.lastEventRotation = e.quaternion;\r\n      };\r\n      // @internal\r\n      Camera.prototype.cameraModeChanged = function (e) {\r\n          this._cameraMode = e.cameraMode;\r\n      };\r\n      return Camera;\r\n  }());\n\n  /**\r\n   * @internal\r\n   */\r\n  var QueryPrefix;\r\n  (function (QueryPrefix) {\r\n      QueryPrefix[\"HitFirst\"] = \"rqhf\";\r\n      QueryPrefix[\"HitAll\"] = \"rqha\";\r\n  })(QueryPrefix || (QueryPrefix = {}));\r\n  /**\r\n   * @public\r\n   */\r\n  var PhysicsCast = /** @class */ (function () {\r\n      function PhysicsCast() {\r\n          this.queries = {};\r\n      }\r\n      Object.defineProperty(PhysicsCast, \"instance\", {\r\n          get: function () {\r\n              PhysicsCast.ensureInstance();\r\n              return PhysicsCast._instance;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      PhysicsCast.ensureInstance = function () {\r\n          if (!PhysicsCast._instance) {\r\n              PhysicsCast._instance = new PhysicsCast();\r\n          }\r\n      };\r\n      PhysicsCast.prototype.getRayFromCamera = function (distance) {\r\n          var rotation = Camera.instance.rotation;\r\n          var rotationMat = Matrix.Identity();\r\n          rotation.toRotationMatrix(rotationMat);\r\n          var direction = Vector3.TransformCoordinates(Vector3.Forward(), rotationMat);\r\n          var ray = {\r\n              origin: Camera.instance.position,\r\n              direction: direction,\r\n              distance: distance\r\n          };\r\n          return ray;\r\n      };\r\n      PhysicsCast.prototype.getRayFromPositions = function (from, to) {\r\n          var direction = to.subtract(from);\r\n          var length = direction.length();\r\n          var ray = {\r\n              origin: from,\r\n              direction: direction.normalize(),\r\n              distance: length\r\n          };\r\n          return ray;\r\n      };\r\n      PhysicsCast.prototype.hitFirst = function (ray, hitCallback, id) {\r\n          var queryId = typeof id === 'number' ? QueryPrefix.HitFirst + id : uuid();\r\n          this.queries[queryId] = hitCallback;\r\n          if (typeof dcl != 'undefined') {\r\n              dcl.query('raycast', { queryId: queryId, queryType: 'HitFirst', ray: ray });\r\n          }\r\n      };\r\n      PhysicsCast.prototype.hitAll = function (ray, hitCallback, id) {\r\n          var queryId = typeof id === 'number' ? QueryPrefix.HitAll + id : uuid();\r\n          this.queries[queryId] = hitCallback;\r\n          if (typeof dcl != 'undefined') {\r\n              dcl.query('raycast', { queryId: queryId, queryType: 'HitAll', ray: ray });\r\n          }\r\n      };\r\n      PhysicsCast.prototype.hitFirstAvatar = function (ray, hitCallback) {\r\n          log('not implemented yet');\r\n      };\r\n      PhysicsCast.prototype.hitAllAvatars = function (ray, hitCallback) {\r\n          log('not implemented yet');\r\n      };\r\n      PhysicsCast.prototype.handleRaycastHitFirstResponse = function (response) {\r\n          this.queries[response.payload.queryId](response.payload.payload);\r\n          delete this.queries[response.payload.queryId];\r\n      };\r\n      PhysicsCast.prototype.handleRaycastHitAllResponse = function (response) {\r\n          this.queries[response.payload.queryId](response.payload.payload);\r\n          delete this.queries[response.payload.queryId];\r\n      };\r\n      return PhysicsCast;\r\n  }());\n\n  /**\r\n   * @public\r\n   */\r\n  var RaycastEventSystem = /** @class */ (function () {\r\n      function RaycastEventSystem() {\r\n      }\r\n      RaycastEventSystem.prototype.activate = function (engine) {\r\n          engine.eventManager.addListener(RaycastResponse, this, function (event) {\r\n              if (event.payload.queryType === 'HitFirst') {\r\n                  PhysicsCast.instance.handleRaycastHitFirstResponse(event);\r\n              }\r\n              else if (event.payload.queryType === 'HitAll') {\r\n                  PhysicsCast.instance.handleRaycastHitAllResponse(event);\r\n              }\r\n          });\r\n          if (typeof dcl !== 'undefined') {\r\n              dcl.subscribe('raycastResponse');\r\n          }\r\n      };\r\n      RaycastEventSystem.prototype.deactivate = function () {\r\n          if (typeof dcl !== 'undefined') {\r\n              dcl.unsubscribe('raycastResponse');\r\n          }\r\n      };\r\n      return RaycastEventSystem;\r\n  }());\r\n  /** @internal */\r\n  var raycastEventSystem = new RaycastEventSystem();\r\n  /**\r\n   * @public\r\n   */\r\n  var PointerEventSystem = /** @class */ (function () {\r\n      function PointerEventSystem() {\r\n      }\r\n      PointerEventSystem.prototype.activate = function (engine) {\r\n          engine.eventManager.addListener(PointerEvent, this, function (event) {\r\n              Input.instance.handlePointerEvent(event.payload);\r\n          });\r\n          if (typeof dcl !== 'undefined') {\r\n              dcl.subscribe('pointerUp');\r\n              dcl.subscribe('pointerDown');\r\n              dcl.subscribe('pointerEvent');\r\n          }\r\n      };\r\n      PointerEventSystem.prototype.deactivate = function () {\r\n          if (typeof dcl !== 'undefined') {\r\n              dcl.unsubscribe('pointerUp');\r\n              dcl.unsubscribe('pointerDown');\r\n              dcl.unsubscribe('pointerEvent');\r\n          }\r\n      };\r\n      return PointerEventSystem;\r\n  }());\r\n  /** @internal */\r\n  var pointerEventSystem = new PointerEventSystem();\r\n  /**\r\n   * @public\r\n   */\r\n  var UUIDEventSystem = /** @class */ (function () {\r\n      function UUIDEventSystem() {\r\n          this.handlerMap = {};\r\n      }\r\n      UUIDEventSystem.prototype.activate = function (engine) {\r\n          engine.eventManager.addListener(UUIDEvent, this, this.handleEvent);\r\n          engine.eventManager.addListener(ComponentAdded, this, this.componentAdded);\r\n          engine.eventManager.addListener(ComponentRemoved, this, this.componentRemoved);\r\n          if (typeof dcl !== 'undefined') {\r\n              dcl.subscribe('uuidEvent');\r\n          }\r\n      };\r\n      UUIDEventSystem.prototype.deactivate = function () {\r\n          if (typeof dcl !== 'undefined') {\r\n              dcl.unsubscribe('uuidEvent');\r\n          }\r\n      };\r\n      UUIDEventSystem.prototype.onAddEntity = function (entity) {\r\n          for (var componentName in entity.components) {\r\n              var component = entity.components[componentName];\r\n              if (component instanceof OnUUIDEvent) {\r\n                  this.handlerMap[component.uuid] = component;\r\n              }\r\n          }\r\n      };\r\n      UUIDEventSystem.prototype.onRemoveEntity = function (entity) {\r\n          for (var componentName in entity.components) {\r\n              var component = entity.components[componentName];\r\n              if (component instanceof OnUUIDEvent) {\r\n                  delete this.handlerMap[component.uuid];\r\n              }\r\n          }\r\n      };\r\n      UUIDEventSystem.prototype.componentAdded = function (event) {\r\n          if (event.entity.isAddedToEngine()) {\r\n              var component = event.entity.components[event.componentName];\r\n              if (component instanceof OnUUIDEvent) {\r\n                  this.handlerMap[component.uuid] = component;\r\n              }\r\n          }\r\n      };\r\n      UUIDEventSystem.prototype.componentRemoved = function (event) {\r\n          if (event.entity.isAddedToEngine()) {\r\n              if (event.component instanceof OnUUIDEvent) {\r\n                  delete this.handlerMap[event.component.uuid];\r\n              }\r\n          }\r\n      };\r\n      UUIDEventSystem.prototype.handleEvent = function (event) {\r\n          if (event.uuid in this.handlerMap) {\r\n              var handler = this.handlerMap[event.uuid];\r\n              if (handler) {\r\n                  if (handler.callback && 'call' in handler.callback) {\r\n                      handler.callback(event.payload);\r\n                  }\r\n              }\r\n          }\r\n      };\r\n      return UUIDEventSystem;\r\n  }());\r\n  /** @internal */\r\n  var uuidEventSystem = new UUIDEventSystem();\n\n  /**\r\n   * @public\r\n   */\r\n  var AudioClip = /** @class */ (function (_super) {\r\n      __extends(AudioClip, _super);\r\n      function AudioClip(url) {\r\n          var _this = _super.call(this) || this;\r\n          /**\r\n           * Is this clip looping by default?\r\n           */\r\n          _this.loop = false;\r\n          /**\r\n           * Clip's master volume. This volume affects all the AudioSources.\r\n           * Valid ranges from 0 to 1\r\n           */\r\n          _this.volume = 1;\r\n          _this.url = url;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], AudioClip.prototype, \"url\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AudioClip.prototype, \"loop\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AudioClip.prototype, \"loadingCompleteEventId\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AudioClip.prototype, \"volume\", void 0);\r\n      AudioClip = __decorate([\r\n          DisposableComponent('engine.AudioClip', exports.CLASS_ID.AUDIO_CLIP)\r\n      ], AudioClip);\r\n      return AudioClip;\r\n  }(ObservableComponent));\r\n  /**\r\n   * @public\r\n   */\r\n  var AudioSource = /** @class */ (function (_super) {\r\n      __extends(AudioSource, _super);\r\n      function AudioSource(audioClip) {\r\n          var _this = _super.call(this) || this;\r\n          _this.audioClip = audioClip;\r\n          /**\r\n           * Is this clip looping by default?\r\n           */\r\n          _this.loop = false;\r\n          /**\r\n           * Clip's master volume. This volume affects all the AudioSources.\r\n           * Valid ranges from 0 to 1\r\n           */\r\n          _this.volume = 1;\r\n          /**\r\n           * Is this AudioSource playing?\r\n           */\r\n          _this.playing = false;\r\n          /**\r\n           * Pitch, default: 1.0, range from 0.0 to MaxFloat\r\n           */\r\n          _this.pitch = 1.0;\r\n          /**\r\n           * Timestamp of when the playOnce was executed to see if we need to start over the audio\r\n           */\r\n          _this.playedAtTimestamp = Date.now();\r\n          if (!(audioClip instanceof AudioClip)) {\r\n              throw new Error(\"Trying to create AudioSource(AudioClip) with an invalid AudioClip\");\r\n          }\r\n          _this.audioClipId = getComponentId(audioClip);\r\n          return _this;\r\n      }\r\n      /**\r\n       * Disables the looping and plays the current source once.\r\n       * If the sound was playing, it stops and starts over.\r\n       */\r\n      AudioSource.prototype.playOnce = function () {\r\n          this.playing = true;\r\n          this.dirty = true;\r\n          this.playedAtTimestamp = Date.now();\r\n          this.data.nonce = Math.random();\r\n          return this;\r\n      };\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], AudioSource.prototype, \"audioClipId\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AudioSource.prototype, \"loop\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AudioSource.prototype, \"volume\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AudioSource.prototype, \"playing\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AudioSource.prototype, \"pitch\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AudioSource.prototype, \"playedAtTimestamp\", void 0);\r\n      AudioSource = __decorate([\r\n          Component('engine.AudioSource', exports.CLASS_ID.AUDIO_SOURCE)\r\n      ], AudioSource);\r\n      return AudioSource;\r\n  }(ObservableComponent));\r\n  /**\r\n   * @public\r\n   */\r\n  var AudioStream = /** @class */ (function (_super) {\r\n      __extends(AudioStream, _super);\r\n      function AudioStream(url) {\r\n          var _this = _super.call(this) || this;\r\n          _this.playing = false;\r\n          _this.volume = 1;\r\n          _this.url = url;\r\n          _this.playing = true;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], AudioStream.prototype, \"url\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AudioStream.prototype, \"playing\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AudioStream.prototype, \"volume\", void 0);\r\n      AudioStream = __decorate([\r\n          Component('engine.AudioStream', exports.CLASS_ID.AUDIO_STREAM)\r\n      ], AudioStream);\r\n      return AudioStream;\r\n  }(ObservableComponent));\n\n  /**\r\n   * Gizmo identifiers\r\n   * @public\r\n   */\r\n  exports.Gizmo = void 0;\r\n  (function (Gizmo) {\r\n      Gizmo[\"MOVE\"] = \"MOVE\";\r\n      Gizmo[\"ROTATE\"] = \"ROTATE\";\r\n      Gizmo[\"SCALE\"] = \"SCALE\";\r\n      Gizmo[\"NONE\"] = \"NONE\";\r\n  })(exports.Gizmo || (exports.Gizmo = {}));\r\n  /**\r\n   * This event is triggered after the user finalizes dragging a gizmo.\r\n   * @public\r\n   */\r\n  var OnGizmoEvent = /** @class */ (function (_super) {\r\n      __extends(OnGizmoEvent, _super);\r\n      function OnGizmoEvent() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          _this.type = 'gizmoEvent';\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], OnGizmoEvent.prototype, \"type\", void 0);\r\n      OnGizmoEvent = __decorate([\r\n          Component('engine.gizmoEvent', exports.CLASS_ID.UUID_CALLBACK)\r\n      ], OnGizmoEvent);\r\n      return OnGizmoEvent;\r\n  }(OnUUIDEvent));\r\n  /**\r\n   * Enables gizmos in the entity. Gizmos only work in EDITOR, PREVIEW or DEBUG modes.\r\n   * @public\r\n   */\r\n  var Gizmos = /** @class */ (function (_super) {\r\n      __extends(Gizmos, _super);\r\n      function Gizmos() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          /**\r\n           * Enable position gizmo\r\n           */\r\n          _this.position = true;\r\n          /**\r\n           * Enable rotation gizmo\r\n           */\r\n          _this.rotation = true;\r\n          /**\r\n           * Enable scale gizmo\r\n           */\r\n          _this.scale = true;\r\n          /**\r\n           * Cycle through gizmos using click.\r\n           */\r\n          _this.cycle = true;\r\n          /**\r\n           * Align the gizmos to match the local reference system\r\n           */\r\n          _this.localReference = false;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Gizmos.prototype, \"position\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Gizmos.prototype, \"rotation\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Gizmos.prototype, \"scale\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Gizmos.prototype, \"cycle\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Gizmos.prototype, \"selectedGizmo\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], Gizmos.prototype, \"localReference\", void 0);\r\n      Gizmos = __decorate([\r\n          Component('engine.gizmos', exports.CLASS_ID.GIZMOS)\r\n      ], Gizmos);\r\n      return Gizmos;\r\n  }(ObservableComponent));\n\n  /**\r\n   * @public\r\n   */\r\n  var UIShape = /** @class */ (function (_super) {\r\n      __extends(UIShape, _super);\r\n      function UIShape(parent) {\r\n          var _this = _super.call(this) || this;\r\n          /**\r\n           * Defines if the entity and its children should be rendered\r\n           */\r\n          _this.name = null;\r\n          _this.visible = true;\r\n          _this.opacity = 1;\r\n          _this.hAlign = 'center';\r\n          _this.vAlign = 'center';\r\n          _this.width = '100px';\r\n          _this.height = '50px';\r\n          _this.positionX = '0px';\r\n          _this.positionY = '0px';\r\n          _this.isPointerBlocker = true;\r\n          if (parent) {\r\n              _this._parent = parent;\r\n              _this.data.parentComponent = getComponentId(parent);\r\n          }\r\n          return _this;\r\n      }\r\n      Object.defineProperty(UIShape.prototype, \"parent\", {\r\n          get: function () {\r\n              return this._parent;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      Object.defineProperty(UIShape.prototype, \"parentComponent\", {\r\n          // @internal\r\n          get: function () {\r\n              return this.data.parentComponent;\r\n          },\r\n          enumerable: false,\r\n          configurable: true\r\n      });\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIShape.prototype, \"name\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIShape.prototype, \"visible\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIShape.prototype, \"opacity\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIShape.prototype, \"hAlign\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIShape.prototype, \"vAlign\", void 0);\r\n      __decorate([\r\n          ObservableComponent.uiValue\r\n      ], UIShape.prototype, \"width\", void 0);\r\n      __decorate([\r\n          ObservableComponent.uiValue\r\n      ], UIShape.prototype, \"height\", void 0);\r\n      __decorate([\r\n          ObservableComponent.uiValue\r\n      ], UIShape.prototype, \"positionX\", void 0);\r\n      __decorate([\r\n          ObservableComponent.uiValue\r\n      ], UIShape.prototype, \"positionY\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIShape.prototype, \"isPointerBlocker\", void 0);\r\n      return UIShape;\r\n  }(ObservableComponent));\r\n  /**\r\n   * @internal\r\n   * NOTE(Brian): this should be deprecated\r\n   */\r\n  var UIFullScreen = /** @class */ (function (_super) {\r\n      __extends(UIFullScreen, _super);\r\n      function UIFullScreen() {\r\n          return _super.call(this, null) || this;\r\n      }\r\n      UIFullScreen = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.UI_FULLSCREEN_SHAPE)\r\n      ], UIFullScreen);\r\n      return UIFullScreen;\r\n  }(UIShape));\r\n  /**\r\n   * @internal\r\n   * NOTE(Brian): this should be deprecated\r\n   */\r\n  var UIWorldSpace = /** @class */ (function (_super) {\r\n      __extends(UIWorldSpace, _super);\r\n      function UIWorldSpace() {\r\n          return _super.call(this, null) || this;\r\n      }\r\n      UIWorldSpace = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.UI_WORLD_SPACE_SHAPE)\r\n      ], UIWorldSpace);\r\n      return UIWorldSpace;\r\n  }(UIShape));\r\n  /**\r\n   * @public\r\n   */\r\n  var UICanvas = /** @class */ (function (_super) {\r\n      __extends(UICanvas, _super);\r\n      function UICanvas() {\r\n          return _super.call(this, null) || this;\r\n      }\r\n      UICanvas = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.UI_SCREEN_SPACE_SHAPE)\r\n      ], UICanvas);\r\n      return UICanvas;\r\n  }(UIShape));\r\n  /**\r\n   * @public\r\n   */\r\n  var UIContainerRect = /** @class */ (function (_super) {\r\n      __extends(UIContainerRect, _super);\r\n      function UIContainerRect() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          _this.adaptWidth = false;\r\n          _this.adaptHeight = false;\r\n          _this.thickness = 0;\r\n          _this.color = Color4.Clear();\r\n          _this.alignmentUsesSize = true;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIContainerRect.prototype, \"adaptWidth\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIContainerRect.prototype, \"adaptHeight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIContainerRect.prototype, \"thickness\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIContainerRect.prototype, \"color\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIContainerRect.prototype, \"alignmentUsesSize\", void 0);\r\n      UIContainerRect = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.UI_CONTAINER_RECT)\r\n      ], UIContainerRect);\r\n      return UIContainerRect;\r\n  }(UIShape));\r\n  /**\r\n   * @public\r\n   */\r\n  exports.UIStackOrientation = void 0;\r\n  (function (UIStackOrientation) {\r\n      UIStackOrientation[UIStackOrientation[\"VERTICAL\"] = 0] = \"VERTICAL\";\r\n      UIStackOrientation[UIStackOrientation[\"HORIZONTAL\"] = 1] = \"HORIZONTAL\";\r\n  })(exports.UIStackOrientation || (exports.UIStackOrientation = {}));\r\n  /**\r\n   * @public\r\n   */\r\n  var UIContainerStack = /** @class */ (function (_super) {\r\n      __extends(UIContainerStack, _super);\r\n      function UIContainerStack() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          _this.adaptWidth = true;\r\n          _this.adaptHeight = true;\r\n          _this.color = Color4.Clear();\r\n          _this.stackOrientation = exports.UIStackOrientation.VERTICAL;\r\n          _this.spacing = 0;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIContainerStack.prototype, \"adaptWidth\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIContainerStack.prototype, \"adaptHeight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIContainerStack.prototype, \"color\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIContainerStack.prototype, \"stackOrientation\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIContainerStack.prototype, \"spacing\", void 0);\r\n      UIContainerStack = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.UI_CONTAINER_STACK)\r\n      ], UIContainerStack);\r\n      return UIContainerStack;\r\n  }(UIShape));\r\n  /**\r\n   * @public\r\n   */\r\n  var UIButton = /** @class */ (function (_super) {\r\n      __extends(UIButton, _super);\r\n      function UIButton() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          _this.fontSize = 10;\r\n          _this.fontWeight = 'normal';\r\n          _this.thickness = 0;\r\n          _this.cornerRadius = 0;\r\n          _this.color = Color4.White();\r\n          _this.background = Color4.White();\r\n          _this.paddingTop = 0;\r\n          _this.paddingRight = 0;\r\n          _this.paddingBottom = 0;\r\n          _this.paddingLeft = 0;\r\n          _this.shadowBlur = 0;\r\n          _this.shadowOffsetX = 0;\r\n          _this.shadowOffsetY = 0;\r\n          _this.shadowColor = Color4.Black();\r\n          _this.text = 'button';\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIButton.prototype, \"fontSize\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIButton.prototype, \"fontWeight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIButton.prototype, \"thickness\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIButton.prototype, \"cornerRadius\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIButton.prototype, \"color\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIButton.prototype, \"background\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIButton.prototype, \"paddingTop\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIButton.prototype, \"paddingRight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIButton.prototype, \"paddingBottom\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIButton.prototype, \"paddingLeft\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIButton.prototype, \"shadowBlur\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIButton.prototype, \"shadowOffsetX\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIButton.prototype, \"shadowOffsetY\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIButton.prototype, \"shadowColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIButton.prototype, \"text\", void 0);\r\n      UIButton = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.UI_BUTTON_SHAPE)\r\n      ], UIButton);\r\n      return UIButton;\r\n  }(UIShape));\r\n  /**\r\n   * @public\r\n   */\r\n  var UIText = /** @class */ (function (_super) {\r\n      __extends(UIText, _super);\r\n      function UIText() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          _this.outlineWidth = 0;\r\n          _this.outlineColor = Color4.White();\r\n          _this.color = Color4.White();\r\n          _this.fontSize = 10;\r\n          _this.fontAutoSize = false;\r\n          _this.fontWeight = 'normal';\r\n          _this.value = '';\r\n          _this.lineSpacing = 0;\r\n          _this.lineCount = 0;\r\n          _this.adaptWidth = false;\r\n          _this.adaptHeight = false;\r\n          _this.textWrapping = false;\r\n          _this.shadowBlur = 0;\r\n          _this.shadowOffsetX = 0;\r\n          _this.shadowOffsetY = 0;\r\n          _this.shadowColor = Color4.Black();\r\n          _this.hTextAlign = 'left';\r\n          _this.vTextAlign = 'bottom';\r\n          _this.paddingTop = 0;\r\n          _this.paddingRight = 0;\r\n          _this.paddingBottom = 0;\r\n          _this.paddingLeft = 0;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"outlineWidth\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"outlineColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"color\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"fontSize\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"fontAutoSize\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"fontWeight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.component\r\n      ], UIText.prototype, \"font\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"value\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"lineSpacing\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"lineCount\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"adaptWidth\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"adaptHeight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"textWrapping\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"shadowBlur\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"shadowOffsetX\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"shadowOffsetY\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"shadowColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"hTextAlign\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"vTextAlign\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"paddingTop\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"paddingRight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"paddingBottom\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIText.prototype, \"paddingLeft\", void 0);\r\n      UIText = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.UI_TEXT_SHAPE)\r\n      ], UIText);\r\n      return UIText;\r\n  }(UIShape));\r\n  /**\r\n   * @public\r\n   */\r\n  var UIInputText = /** @class */ (function (_super) {\r\n      __extends(UIInputText, _super);\r\n      function UIInputText() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          _this.outlineWidth = 0;\r\n          _this.outlineColor = Color4.Black();\r\n          _this.color = Color4.Clear();\r\n          _this.thickness = 1;\r\n          _this.fontSize = 10;\r\n          _this.fontWeight = 'normal';\r\n          _this.value = '';\r\n          _this.placeholderColor = Color4.White();\r\n          _this.placeholder = '';\r\n          _this.margin = 10;\r\n          _this.maxWidth = 100;\r\n          _this.hTextAlign = 'left';\r\n          _this.vTextAlign = 'bottom';\r\n          _this.autoStretchWidth = true;\r\n          _this.background = Color4.Black();\r\n          _this.focusedBackground = Color4.Black();\r\n          _this.textWrapping = false;\r\n          _this.shadowBlur = 0;\r\n          _this.shadowOffsetX = 0;\r\n          _this.shadowOffsetY = 0;\r\n          _this.shadowColor = Color4.White();\r\n          _this.paddingTop = 0;\r\n          _this.paddingRight = 0;\r\n          _this.paddingBottom = 0;\r\n          _this.paddingLeft = 0;\r\n          _this.onTextSubmit = null;\r\n          _this.onChanged = null;\r\n          _this.onFocus = null;\r\n          _this.onBlur = null;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"outlineWidth\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"outlineColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"color\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"thickness\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"fontSize\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"fontWeight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.component\r\n      ], UIInputText.prototype, \"font\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"value\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"placeholderColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"placeholder\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"margin\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"maxWidth\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"hTextAlign\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"vTextAlign\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"autoStretchWidth\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"background\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"focusedBackground\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"textWrapping\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"shadowBlur\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"shadowOffsetX\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"shadowOffsetY\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"shadowColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"paddingTop\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"paddingRight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"paddingBottom\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIInputText.prototype, \"paddingLeft\", void 0);\r\n      __decorate([\r\n          OnUUIDEvent.uuidEvent\r\n      ], UIInputText.prototype, \"onTextSubmit\", void 0);\r\n      __decorate([\r\n          OnUUIDEvent.uuidEvent\r\n      ], UIInputText.prototype, \"onChanged\", void 0);\r\n      __decorate([\r\n          OnUUIDEvent.uuidEvent\r\n      ], UIInputText.prototype, \"onFocus\", void 0);\r\n      __decorate([\r\n          OnUUIDEvent.uuidEvent\r\n      ], UIInputText.prototype, \"onBlur\", void 0);\r\n      UIInputText = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.UI_INPUT_TEXT_SHAPE)\r\n      ], UIInputText);\r\n      return UIInputText;\r\n  }(UIShape));\r\n  /**\r\n   * @public\r\n   */\r\n  var UIImage = /** @class */ (function (_super) {\r\n      __extends(UIImage, _super);\r\n      function UIImage(parent, source) {\r\n          var _this = _super.call(this, parent) || this;\r\n          _this.sourceLeft = 0;\r\n          _this.sourceTop = 0;\r\n          _this.sourceWidth = 1;\r\n          _this.sourceHeight = 1;\r\n          _this.paddingTop = 0;\r\n          _this.paddingRight = 0;\r\n          _this.paddingBottom = 0;\r\n          _this.paddingLeft = 0;\r\n          _this.sizeInPixels = true;\r\n          _this.onClick = null;\r\n          _this.source = source;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIImage.prototype, \"sourceLeft\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIImage.prototype, \"sourceTop\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIImage.prototype, \"sourceWidth\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIImage.prototype, \"sourceHeight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.component\r\n      ], UIImage.prototype, \"source\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIImage.prototype, \"paddingTop\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIImage.prototype, \"paddingRight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIImage.prototype, \"paddingBottom\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIImage.prototype, \"paddingLeft\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIImage.prototype, \"sizeInPixels\", void 0);\r\n      __decorate([\r\n          OnUUIDEvent.uuidEvent\r\n      ], UIImage.prototype, \"onClick\", void 0);\r\n      UIImage = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.UI_IMAGE_SHAPE)\r\n      ], UIImage);\r\n      return UIImage;\r\n  }(UIShape));\r\n  /**\r\n   * @public\r\n   */\r\n  var UIScrollRect = /** @class */ (function (_super) {\r\n      __extends(UIScrollRect, _super);\r\n      function UIScrollRect() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          _this.valueX = 0;\r\n          _this.valueY = 0;\r\n          _this.borderColor = Color4.White();\r\n          _this.backgroundColor = Color4.Clear();\r\n          _this.isHorizontal = false;\r\n          _this.isVertical = false;\r\n          _this.paddingTop = 0;\r\n          _this.paddingRight = 0;\r\n          _this.paddingBottom = 0;\r\n          _this.paddingLeft = 0;\r\n          _this.onChanged = null;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIScrollRect.prototype, \"valueX\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIScrollRect.prototype, \"valueY\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIScrollRect.prototype, \"borderColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIScrollRect.prototype, \"backgroundColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIScrollRect.prototype, \"isHorizontal\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIScrollRect.prototype, \"isVertical\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIScrollRect.prototype, \"paddingTop\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIScrollRect.prototype, \"paddingRight\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIScrollRect.prototype, \"paddingBottom\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], UIScrollRect.prototype, \"paddingLeft\", void 0);\r\n      __decorate([\r\n          OnUUIDEvent.uuidEvent\r\n      ], UIScrollRect.prototype, \"onChanged\", void 0);\r\n      UIScrollRect = __decorate([\r\n          DisposableComponent('engine.shape', exports.CLASS_ID.UI_SLIDER_SHAPE)\r\n      ], UIScrollRect);\r\n      return UIScrollRect;\r\n  }(UIShape));\n\n  /**\r\n   * @public\r\n   */\r\n  var AvatarShape = /** @class */ (function (_super) {\r\n      __extends(AvatarShape, _super);\r\n      function AvatarShape() {\r\n          var _this = _super !== null && _super.apply(this, arguments) || this;\r\n          _this.useDummyModel = false;\r\n          _this.talking = false;\r\n          return _this;\r\n      }\r\n      AvatarShape_1 = AvatarShape;\r\n      AvatarShape.Dummy = function () {\r\n          var avatarShape = new AvatarShape_1();\r\n          avatarShape.useDummyModel = true;\r\n          return avatarShape;\r\n      };\r\n      var AvatarShape_1;\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AvatarShape.prototype, \"id\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AvatarShape.prototype, \"name\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AvatarShape.prototype, \"expressionTriggerId\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AvatarShape.prototype, \"expressionTriggerTimestamp\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AvatarShape.prototype, \"bodyShape\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AvatarShape.prototype, \"wearables\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AvatarShape.prototype, \"skinColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AvatarShape.prototype, \"hairColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AvatarShape.prototype, \"eyeColor\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AvatarShape.prototype, \"useDummyModel\", void 0);\r\n      __decorate([\r\n          ObservableComponent.field\r\n      ], AvatarShape.prototype, \"talking\", void 0);\r\n      AvatarShape = AvatarShape_1 = __decorate([\r\n          Component('engine.avatarShape', exports.CLASS_ID.AVATAR_SHAPE)\r\n      ], AvatarShape);\r\n      return AvatarShape;\r\n  }(ObservableComponent));\n\n  /**\r\n   * @public\r\n   */\r\n  var OnFocus = /** @class */ (function (_super) {\r\n      __extends(OnFocus, _super);\r\n      function OnFocus(callback) {\r\n          var _this = _super.call(this, callback) || this;\r\n          _this.type = 'onFocus';\r\n          // This injection is necessary ONLY in events that are ALWAYS turned on and are\r\n          // not assignable to entities. Like events for the UI elements\r\n          // TODO(Brian): This will be removed when UI gets back to the entity parenting.\r\n          uuidEventSystem.handlerMap[_this.uuid] = _this;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], OnFocus.prototype, \"type\", void 0);\r\n      OnFocus = __decorate([\r\n          Component('engine.onFocus', exports.CLASS_ID.UUID_CALLBACK)\r\n      ], OnFocus);\r\n      return OnFocus;\r\n  }(OnUUIDEvent));\r\n  /**\r\n   * @public\r\n   */\r\n  var OnTextSubmit = /** @class */ (function (_super) {\r\n      __extends(OnTextSubmit, _super);\r\n      function OnTextSubmit(callback) {\r\n          var _this = _super.call(this, callback) || this;\r\n          _this.type = 'onTextSubmit';\r\n          // This injection is necessary ONLY in events that are ALWAYS turned on and are\r\n          // not assignable to entities. Like events for the UI elements\r\n          // TODO(Brian): This will be removed when UI gets back to the entity parenting.\r\n          uuidEventSystem.handlerMap[_this.uuid] = _this;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], OnTextSubmit.prototype, \"type\", void 0);\r\n      OnTextSubmit = __decorate([\r\n          Component('engine.onTextSubmit', exports.CLASS_ID.UUID_CALLBACK)\r\n      ], OnTextSubmit);\r\n      return OnTextSubmit;\r\n  }(OnUUIDEvent));\r\n  /**\r\n   * @public\r\n   */\r\n  var OnBlur = /** @class */ (function (_super) {\r\n      __extends(OnBlur, _super);\r\n      function OnBlur(callback) {\r\n          var _this = _super.call(this, callback) || this;\r\n          _this.type = 'onBlur';\r\n          // This injection is necessary ONLY in events that are ALWAYS turned on and are\r\n          // not assignable to entities. Like events for the UI elements\r\n          // TODO(Brian): This will be removed when UI gets back to the entity parenting.\r\n          uuidEventSystem.handlerMap[_this.uuid] = _this;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], OnBlur.prototype, \"type\", void 0);\r\n      OnBlur = __decorate([\r\n          Component('engine.onBlur', exports.CLASS_ID.UUID_CALLBACK)\r\n      ], OnBlur);\r\n      return OnBlur;\r\n  }(OnUUIDEvent));\r\n  /**\r\n   * @public\r\n   */\r\n  var OnEnter = /** @class */ (function (_super) {\r\n      __extends(OnEnter, _super);\r\n      function OnEnter(callback) {\r\n          var _this = _super.call(this, callback) || this;\r\n          _this.type = 'onEnter';\r\n          // This injection is necessary ONLY in events that are ALWAYS turned on and are\r\n          // not assignable to entities. Like events for the UI elements\r\n          // TODO(Brian): This will be removed when UI gets back to the entity parenting.\r\n          uuidEventSystem.handlerMap[_this.uuid] = _this;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], OnEnter.prototype, \"type\", void 0);\r\n      OnEnter = __decorate([\r\n          Component('engine.onEnter', exports.CLASS_ID.UUID_CALLBACK)\r\n      ], OnEnter);\r\n      return OnEnter;\r\n  }(OnUUIDEvent));\r\n  /**\r\n   * @public\r\n   */\r\n  var OnChanged = /** @class */ (function (_super) {\r\n      __extends(OnChanged, _super);\r\n      function OnChanged(callback) {\r\n          var _this = _super.call(this, callback) || this;\r\n          _this.type = 'onChange';\r\n          // This injection is necessary ONLY in events that are ALWAYS turned on and are\r\n          // not assignable to entities. Like events for the UI elements\r\n          // TODO(Brian): This will be removed when UI gets back to the entity parenting.\r\n          uuidEventSystem.handlerMap[_this.uuid] = _this;\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], OnChanged.prototype, \"type\", void 0);\r\n      OnChanged = __decorate([\r\n          Component('engine.onChange', exports.CLASS_ID.UUID_CALLBACK)\r\n      ], OnChanged);\r\n      return OnChanged;\r\n  }(OnUUIDEvent));\r\n  /**\r\n   * @public\r\n   */\r\n  var OnClick = /** @class */ (function (_super) {\r\n      __extends(OnClick, _super);\r\n      function OnClick(callback, options) {\r\n          var _this = _super.call(this, callback) || this;\r\n          _this.type = 'onClick';\r\n          // This injection is necessary ONLY in events that are ALWAYS turned on and are\r\n          // not assignable to entities. Like events for the UI elements\r\n          // TODO(Brian): This will be removed when UI gets back to the entity parenting.\r\n          uuidEventSystem.handlerMap[_this.uuid] = _this;\r\n          if (options) {\r\n              _this.showFeedback = !(options.showFeedback === false);\r\n              if (options.button) {\r\n                  _this.button = options.button;\r\n              }\r\n              if (options.hoverText) {\r\n                  _this.hoverText = options.hoverText;\r\n              }\r\n              if (options.distance) {\r\n                  _this.distance = options.distance;\r\n              }\r\n          }\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], OnClick.prototype, \"type\", void 0);\r\n      OnClick = __decorate([\r\n          Component('engine.onClick', exports.CLASS_ID.UUID_CALLBACK)\r\n      ], OnClick);\r\n      return OnClick;\r\n  }(OnPointerUUIDEvent));\r\n  /**\r\n   * @public\r\n   */\r\n  var OnPointerDown = /** @class */ (function (_super) {\r\n      __extends(OnPointerDown, _super);\r\n      function OnPointerDown(callback, options) {\r\n          var _this = _super.call(this, callback) || this;\r\n          _this.type = 'pointerDown';\r\n          // This injection is necessary ONLY in events that are ALWAYS turned on and are\r\n          // not assignable to entities. Like events for the UI elements\r\n          // TODO(Brian): This will be removed when UI gets back to the entity parenting.\r\n          uuidEventSystem.handlerMap[_this.uuid] = _this;\r\n          if (options) {\r\n              _this.showFeedback = !(options.showFeedback === false);\r\n              if (options.button) {\r\n                  _this.button = options.button;\r\n              }\r\n              if (options.hoverText) {\r\n                  _this.hoverText = options.hoverText;\r\n              }\r\n              if (options.distance) {\r\n                  _this.distance = options.distance;\r\n              }\r\n          }\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], OnPointerDown.prototype, \"type\", void 0);\r\n      OnPointerDown = __decorate([\r\n          Component('engine.pointerDown', exports.CLASS_ID.UUID_CALLBACK)\r\n      ], OnPointerDown);\r\n      return OnPointerDown;\r\n  }(OnPointerUUIDEvent));\r\n  /**\r\n   * @public\r\n   */\r\n  var OnPointerUp = /** @class */ (function (_super) {\r\n      __extends(OnPointerUp, _super);\r\n      function OnPointerUp(callback, options) {\r\n          var _this = _super.call(this, callback) || this;\r\n          _this.type = 'pointerUp';\r\n          // This injection is necessary ONLY in events that are ALWAYS turned on and are\r\n          // not assignable to entities. Like events for the UI elements\r\n          // TODO(Brian): This will be removed when UI gets back to the entity parenting.\r\n          uuidEventSystem.handlerMap[_this.uuid] = _this;\r\n          if (options) {\r\n              _this.showFeedback = !(options.showFeedback === false);\r\n              if (options.button) {\r\n                  _this.button = options.button;\r\n              }\r\n              if (options.hoverText) {\r\n                  _this.hoverText = options.hoverText;\r\n              }\r\n              if (options.distance) {\r\n                  _this.distance = options.distance;\r\n              }\r\n          }\r\n          return _this;\r\n      }\r\n      __decorate([\r\n          ObservableComponent.readonly\r\n      ], OnPointerUp.prototype, \"type\", void 0);\r\n      OnPointerUp = __decorate([\r\n          Component('engine.pointerUp', exports.CLASS_ID.UUID_CALLBACK)\r\n      ], OnPointerUp);\r\n      return OnPointerUp;\r\n  }(OnPointerUUIDEvent));\n\n  var communicationsController = null;\r\n  var communicationsControllerPromise = null;\r\n  var _messageObserver = null;\r\n  /**\r\n   * @internal\r\n   */\r\n  function getMessageObserver() {\r\n      if (!_messageObserver) {\r\n          _messageObserver = new Observable();\r\n      }\r\n      return _messageObserver;\r\n  }\r\n  function ensureCommunicationsController() {\r\n      if (!communicationsControllerPromise) {\r\n          communicationsControllerPromise = dcl.loadModule('@decentraland/CommunicationsController', {});\r\n          communicationsControllerPromise.then(function ($) {\r\n              communicationsController = $;\r\n          });\r\n          var observer_1 = getMessageObserver();\r\n          dcl.subscribe('comms');\r\n          dcl.onEvent(function (event) {\r\n              if (event.type === 'comms') {\r\n                  observer_1.notifyObservers(event.data);\r\n              }\r\n          });\r\n      }\r\n      return communicationsControllerPromise;\r\n  }\r\n  /**\r\n   * @public\r\n   */\r\n  var MessageBus = /** @class */ (function () {\r\n      function MessageBus() {\r\n          var _this = this;\r\n          this.messageQueue = [];\r\n          this.connected = false;\r\n          this.flushing = false;\r\n          ensureCommunicationsController().then(function ($) {\r\n              _this.connected = true;\r\n              _this.flush();\r\n          });\r\n      }\r\n      MessageBus.prototype.on = function (message, callback) {\r\n          return getMessageObserver().add(function (e) {\r\n              try {\r\n                  var m = JSON.parse(e.message);\r\n                  if (m.message === message) {\r\n                      callback(m.payload, e.sender);\r\n                  }\r\n              }\r\n              catch (e) {\r\n                  dcl.error('Error parsing comms message ' + e.message, e);\r\n              }\r\n          });\r\n      };\r\n      // @internal\r\n      MessageBus.prototype.sendRaw = function (message) {\r\n          this.messageQueue.push(message);\r\n          if (this.connected) {\r\n              this.flush();\r\n          }\r\n      };\r\n      MessageBus.prototype.emit = function (message, payload) {\r\n          var messageToSend = JSON.stringify({ message: message, payload: payload });\r\n          this.sendRaw(messageToSend);\r\n          getMessageObserver().notifyObservers({ message: messageToSend, sender: 'self' });\r\n      };\r\n      MessageBus.prototype.flush = function () {\r\n          var _this = this;\r\n          if (this.messageQueue.length === 0)\r\n              return;\r\n          if (!this.connected)\r\n              return;\r\n          if (!communicationsController)\r\n              return;\r\n          if (this.flushing)\r\n              return;\r\n          var message = this.messageQueue.shift();\r\n          this.flushing = true;\r\n          dcl.callRpc(communicationsController.rpcHandle, 'send', [message]).then(function (_) {\r\n              _this.flushing = false;\r\n              _this.flush();\r\n          }, function (e) {\r\n              _this.flushing = false;\r\n              error('Error flushing MessageBus', e);\r\n          });\r\n      };\r\n      return MessageBus;\r\n  }());\n\n  // CORE DEPENDENCIES\r\n  var entity = new Entity('scene');\r\n  entity.uuid = '0';\r\n  // Initialize engine\r\n  /** @public */\r\n  var engine = new Engine(entity);\r\n  DisposableComponent.engine = engine;\r\n  // Initialize Decentraland interface\r\n  if (typeof dcl !== 'undefined') {\r\n      engine.addSystem(new DecentralandSynchronizationSystem(dcl), Infinity);\r\n      _initEventObservables(dcl);\r\n  }\r\n  // Initialize UUID Events system\r\n  engine.addSystem(uuidEventSystem);\r\n  // Initialize Pointer Events System\r\n  engine.addSystem(pointerEventSystem);\r\n  // Initialize Raycast Events System\r\n  engine.addSystem(raycastEventSystem);\n\n  exports.AVATAR_OBSERVABLE = AVATAR_OBSERVABLE;\n  exports.Angle = Angle;\n  exports.AnimationState = AnimationState;\n  exports.Animator = Animator;\n  exports.Arc2 = Arc2;\n  exports.Attachable = Attachable;\n  exports.AudioClip = AudioClip;\n  exports.AudioSource = AudioSource;\n  exports.AudioStream = AudioStream;\n  exports.AvatarModifierArea = AvatarModifierArea;\n  exports.AvatarShape = AvatarShape;\n  exports.Axis = Axis;\n  exports.BasicMaterial = BasicMaterial;\n  exports.BezierCurve = BezierCurve;\n  exports.Billboard = Billboard;\n  exports.BoxShape = BoxShape;\n  exports.Camera = Camera;\n  exports.CircleShape = CircleShape;\n  exports.Color3 = Color3;\n  exports.Color4 = Color4;\n  exports.Component = Component;\n  exports.ComponentAdded = ComponentAdded;\n  exports.ComponentGroup = ComponentGroup;\n  exports.ComponentRemoved = ComponentRemoved;\n  exports.ConeShape = ConeShape;\n  exports.Curve3 = Curve3;\n  exports.CylinderShape = CylinderShape;\n  exports.DEG2RAD = DEG2RAD;\n  exports.DisposableComponent = DisposableComponent;\n  exports.DisposableComponentCreated = DisposableComponentCreated;\n  exports.DisposableComponentRemoved = DisposableComponentRemoved;\n  exports.DisposableComponentUpdated = DisposableComponentUpdated;\n  exports.Engine = Engine;\n  exports.Entity = Entity;\n  exports.Epsilon = Epsilon;\n  exports.EventConstructor = EventConstructor;\n  exports.EventManager = EventManager;\n  exports.Font = Font;\n  exports.Frustum = Frustum;\n  exports.GLTFShape = GLTFShape;\n  exports.Gizmos = Gizmos;\n  exports.GlobalPointerDown = GlobalPointerDown;\n  exports.GlobalPointerUp = GlobalPointerUp;\n  exports.Input = Input;\n  exports.Material = Material;\n  exports.MathTmp = MathTmp;\n  exports.Matrix = Matrix;\n  exports.MessageBus = MessageBus;\n  exports.MultiObserver = MultiObserver;\n  exports.NFTShape = NFTShape;\n  exports.OBJShape = OBJShape;\n  exports.Observable = Observable;\n  exports.ObservableComponent = ObservableComponent;\n  exports.Observer = Observer;\n  exports.ObserverEventState = ObserverEventState;\n  exports.OnAnimationEnd = OnAnimationEnd;\n  exports.OnBlur = OnBlur;\n  exports.OnChanged = OnChanged;\n  exports.OnClick = OnClick;\n  exports.OnEnter = OnEnter;\n  exports.OnFocus = OnFocus;\n  exports.OnGizmoEvent = OnGizmoEvent;\n  exports.OnPointerDown = OnPointerDown;\n  exports.OnPointerLock = OnPointerLock;\n  exports.OnPointerUUIDEvent = OnPointerUUIDEvent;\n  exports.OnPointerUp = OnPointerUp;\n  exports.OnTextSubmit = OnTextSubmit;\n  exports.OnUUIDEvent = OnUUIDEvent;\n  exports.ParentChanged = ParentChanged;\n  exports.Path2 = Path2;\n  exports.Path3D = Path3D;\n  exports.PhysicsCast = PhysicsCast;\n  exports.Plane = Plane;\n  exports.PlaneShape = PlaneShape;\n  exports.PointerEvent = PointerEvent;\n  exports.PointerEventComponent = PointerEventComponent;\n  exports.PointerEventSystem = PointerEventSystem;\n  exports.Quaternion = Quaternion;\n  exports.RAD2DEG = RAD2DEG;\n  exports.RaycastEventSystem = RaycastEventSystem;\n  exports.RaycastResponse = RaycastResponse;\n  exports.Scalar = Scalar;\n  exports.Shape = Shape;\n  exports.Size = Size;\n  exports.SmartItem = SmartItem;\n  exports.SphereShape = SphereShape;\n  exports.Subscription = Subscription;\n  exports.TextShape = TextShape;\n  exports.Texture = Texture;\n  exports.ToGammaSpace = ToGammaSpace;\n  exports.ToLinearSpace = ToLinearSpace;\n  exports.Transform = Transform;\n  exports.UIButton = UIButton;\n  exports.UICanvas = UICanvas;\n  exports.UIContainerRect = UIContainerRect;\n  exports.UIContainerStack = UIContainerStack;\n  exports.UIFullScreen = UIFullScreen;\n  exports.UIImage = UIImage;\n  exports.UIInputText = UIInputText;\n  exports.UIScrollRect = UIScrollRect;\n  exports.UIShape = UIShape;\n  exports.UIText = UIText;\n  exports.UIValue = UIValue;\n  exports.UIWorldSpace = UIWorldSpace;\n  exports.UUIDEvent = UUIDEvent;\n  exports.UUIDEventSystem = UUIDEventSystem;\n  exports.Vector2 = Vector2;\n  exports.Vector3 = Vector3;\n  exports.Vector4 = Vector4;\n  exports.VideoClip = VideoClip;\n  exports.VideoTexture = VideoTexture;\n  exports._initEventObservables = _initEventObservables;\n  exports.buildArray = buildArray;\n  exports.engine = engine;\n  exports.error = error;\n  exports.executeTask = executeTask;\n  exports.getComponentClassId = getComponentClassId;\n  exports.getComponentId = getComponentId;\n  exports.getComponentName = getComponentName;\n  exports.getMessageObserver = getMessageObserver;\n  exports.isDisposableComponent = isDisposableComponent;\n  exports.log = log;\n  exports.newId = newId;\n  exports.onCameraModeChangedObservable = onCameraModeChangedObservable;\n  exports.onEnterScene = onEnterScene;\n  exports.onEnterSceneObservable = onEnterSceneObservable;\n  exports.onIdleStateChangedObservable = onIdleStateChangedObservable;\n  exports.onLeaveScene = onLeaveScene;\n  exports.onLeaveSceneObservable = onLeaveSceneObservable;\n  exports.onPlayerExpressionObservable = onPlayerExpressionObservable;\n  exports.onSceneReadyObservable = onSceneReadyObservable;\n  exports.openExternalURL = openExternalURL;\n  exports.openNFTDialog = openNFTDialog;\n  exports.pointerEventSystem = pointerEventSystem;\n  exports.raycastEventSystem = raycastEventSystem;\n  exports.teleportTo = teleportTo;\n  exports.uuid = uuid;\n  exports.uuidEventSystem = uuidEventSystem;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}(this.self = this.self || {}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n//# sourceURL=dcl://node_modules/decentraland-ecs/dist/src/index.js")
/*! "node_modules/decentraland-transactions/index.js" e8d5902031e9bac11a0924fe2cf7844e58021565d79f250611adb23335209c30 */ eval("!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define(\"decentraland-transactions\",[\"exports\"],t):t((e=\"undefined\"!=typeof globalThis?globalThis:e||self)[\"decentraland-transactions\"]={})}(this,(function(e){\"use strict\";var t;e.ContractName=void 0,(t=e.ContractName||(e.ContractName={})).Bid=\"Bid\",t.CollectionFactory=\"CollectionFactory\",t.CollectionManager=\"CollectionManager\",t.CollectionStore=\"CollectionStore\",t.Committee=\"Committee\",t.ERC20=\"ERC20\",t.ERC721=\"ERC721\",t.ERC721CollectionV2=\"ERC721CollectionV2\",t.Forwarder=\"Forwarder\",t.MANAToken=\"MANAToken\",t.Marketplace=\"Marketplace\",t.Rarities=\"Rarities\";const n=[{name:\"name\",type:\"string\"},{name:\"version\",type:\"string\"},{name:\"verifyingContract\",type:\"address\"},{name:\"salt\",type:\"bytes32\"}],a=[{name:\"nonce\",type:\"uint256\"},{name:\"from\",type:\"address\"},{name:\"functionSignature\",type:\"bytes\"}];function r(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}function s(e,t){return e(t={exports:{}},t.exports),t.exports}function i(e){return e&&e.default||e}var o=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.getRules=t.isJSONType=void 0;const n=new Set([\"string\",\"number\",\"integer\",\"boolean\",\"null\",\"object\",\"array\"]);t.isJSONType=function(e){return\"string\"==typeof e&&n.has(e)},t.getRules=function(){const e={number:{type:\"number\",rules:[]},string:{type:\"string\",rules:[]},array:{type:\"array\",rules:[]},object:{type:\"object\",rules:[]}};return{types:{...e,integer:!0,boolean:!0,null:!0},rules:[{rules:[]},e.number,e.string,e.array,e.object],post:{rules:[]},all:{},keywords:{}}}}));r(o),o.getRules,o.isJSONType;var p=s((function(e,t){function n(e,t){return t.rules.some((t=>a(e,t)))}function a(e,t){var n;return void 0!==e[t.keyword]||(null===(n=t.definition.implements)||void 0===n?void 0:n.some((t=>void 0!==e[t])))}Object.defineProperty(t,\"__esModule\",{value:!0}),t.shouldUseRule=t.shouldUseGroup=t.schemaHasRulesForType=void 0,t.schemaHasRulesForType=function({schema:e,self:t},a){const r=t.RULES.types[a];return r&&!0!==r&&n(e,r)},t.shouldUseGroup=n,t.shouldUseRule=a}));r(p),p.shouldUseRule,p.shouldUseGroup,p.schemaHasRulesForType;var u=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.getProperty=t.safeStringify=t.stringify=t.strConcat=t.addCodeArg=t.str=t._=t.nil=t._Code=t.Name=t.IDENTIFIER=t._CodeOrName=void 0;class n{}t._CodeOrName=n,t.IDENTIFIER=/^[a-z$_][a-z$_0-9]*$/i;class a extends n{constructor(e){if(super(),!t.IDENTIFIER.test(e))throw new Error(\"CodeGen: name must be a valid identifier\");this.str=e}toString(){return this.str}emptyStr(){return!1}get names(){return{[this.str]:1}}}t.Name=a;class r extends n{constructor(e){super(),this._items=\"string\"==typeof e?[e]:e}toString(){return this.str}emptyStr(){if(this._items.length>1)return!1;const e=this._items[0];return\"\"===e||'\"\"'===e}get str(){var e;return null!==(e=this._str)&&void 0!==e?e:this._str=this._items.reduce(((e,t)=>`${e}${t}`),\"\")}get names(){var e;return null!==(e=this._names)&&void 0!==e?e:this._names=this._items.reduce(((e,t)=>(t instanceof a&&(e[t.str]=(e[t.str]||0)+1),e)),{})}}function s(e,...t){const n=[e[0]];let a=0;for(;a<t.length;)p(n,t[a]),n.push(e[++a]);return new r(n)}t._Code=r,t.nil=new r(\"\"),t._=s;const i=new r(\"+\");function o(e,...t){const n=[d(e[0])];let a=0;for(;a<t.length;)n.push(i),p(n,t[a]),n.push(i,d(e[++a]));return function(e){let t=1;for(;t<e.length-1;){if(e[t]===i){const n=u(e[t-1],e[t+1]);if(void 0!==n){e.splice(t-1,3,n);continue}e[t++]=\"+\"}t++}}(n),new r(n)}function p(e,t){var n;t instanceof r?e.push(...t._items):t instanceof a?e.push(t):e.push(\"number\"==typeof(n=t)||\"boolean\"==typeof n||null===n?n:d(Array.isArray(n)?n.join(\",\"):n))}function u(e,t){if('\"\"'===t)return e;if('\"\"'===e)return t;if(\"string\"==typeof e){if(t instanceof a||'\"'!==e[e.length-1])return;return\"string\"!=typeof t?`${e.slice(0,-1)}${t}\"`:'\"'===t[0]?e.slice(0,-1)+t.slice(1):void 0}return\"string\"!=typeof t||'\"'!==t[0]||e instanceof a?void 0:`\"${e}${t.slice(1)}`}function d(e){return JSON.stringify(e).replace(/\\u2028/g,\"\\\\u2028\").replace(/\\u2029/g,\"\\\\u2029\")}t.str=o,t.addCodeArg=p,t.strConcat=function(e,t){return t.emptyStr()?e:e.emptyStr()?t:o`${e}${t}`},t.stringify=function(e){return new r(d(e))},t.safeStringify=d,t.getProperty=function(e){return\"string\"==typeof e&&t.IDENTIFIER.test(e)?new r(`.${e}`):s`[${e}]`}}));r(u),u.getProperty,u.safeStringify,u.stringify,u.strConcat,u.addCodeArg,u.str,u._,u.nil,u._Code,u.Name,u.IDENTIFIER,u._CodeOrName;var d=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ValueScope=t.ValueScopeName=t.Scope=t.varKinds=t.UsedValueState=void 0;class n extends Error{constructor(e){super(`CodeGen: \"code\" for ${e} not defined`),this.value=e.value}}var a;!function(e){e[e.Started=0]=\"Started\",e[e.Completed=1]=\"Completed\"}(a=t.UsedValueState||(t.UsedValueState={})),t.varKinds={const:new u.Name(\"const\"),let:new u.Name(\"let\"),var:new u.Name(\"var\")};class r{constructor({prefixes:e,parent:t}={}){this._names={},this._prefixes=e,this._parent=t}toName(e){return e instanceof u.Name?e:this.name(e)}name(e){return new u.Name(this._newName(e))}_newName(e){return`${e}${(this._names[e]||this._nameGroup(e)).index++}`}_nameGroup(e){var t,n;if((null===(n=null===(t=this._parent)||void 0===t?void 0:t._prefixes)||void 0===n?void 0:n.has(e))||this._prefixes&&!this._prefixes.has(e))throw new Error(`CodeGen: prefix \"${e}\" is not allowed in this scope`);return this._names[e]={prefix:e,index:0}}}t.Scope=r;class s extends u.Name{constructor(e,t){super(t),this.prefix=e}setValue(e,{property:t,itemIndex:n}){this.value=e,this.scopePath=u._`.${new u.Name(t)}[${n}]`}}t.ValueScopeName=s;const i=u._`\\n`;t.ValueScope=class extends r{constructor(e){super(e),this._values={},this._scope=e.scope,this.opts={...e,_n:e.lines?i:u.nil}}get(){return this._scope}name(e){return new s(e,this._newName(e))}value(e,t){var n;if(void 0===t.ref)throw new Error(\"CodeGen: ref must be passed in value\");const a=this.toName(e),{prefix:r}=a,s=null!==(n=t.key)&&void 0!==n?n:t.ref;let i=this._values[r];if(i){const e=i.get(s);if(e)return e}else i=this._values[r]=new Map;i.set(s,a);const o=this._scope[r]||(this._scope[r]=[]),p=o.length;return o[p]=t.ref,a.setValue(t,{property:r,itemIndex:p}),a}getValue(e,t){const n=this._values[e];if(n)return n.get(t)}scopeRefs(e,t=this._values){return this._reduceValues(t,(t=>{if(void 0===t.scopePath)throw new Error(`CodeGen: name \"${t}\" has no value`);return u._`${e}${t.scopePath}`}))}scopeCode(e=this._values,t,n){return this._reduceValues(e,(e=>{if(void 0===e.value)throw new Error(`CodeGen: name \"${e}\" has no value`);return e.value.code}),t,n)}_reduceValues(e,r,s={},i){let o=u.nil;for(const p in e){const d=e[p];if(!d)continue;const l=s[p]=s[p]||new Map;d.forEach((e=>{if(l.has(e))return;l.set(e,a.Started);let s=r(e);if(s){const n=this.opts.es5?t.varKinds.var:t.varKinds.const;o=u._`${o}${n} ${e} = ${s};${this.opts._n}`}else{if(!(s=null==i?void 0:i(e)))throw new n(e);o=u._`${o}${s}${this.opts._n}`}l.set(e,a.Completed)}))}return o}}}));r(d),d.ValueScope,d.ValueScopeName,d.Scope,d.varKinds,d.UsedValueState;var l=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.or=t.and=t.not=t.CodeGen=t.operators=t.varKinds=t.ValueScopeName=t.ValueScope=t.Scope=t.Name=t.stringify=t.getProperty=t.nil=t.strConcat=t.str=t._=void 0;var n=u;Object.defineProperty(t,\"_\",{enumerable:!0,get:function(){return n._}}),Object.defineProperty(t,\"str\",{enumerable:!0,get:function(){return n.str}}),Object.defineProperty(t,\"strConcat\",{enumerable:!0,get:function(){return n.strConcat}}),Object.defineProperty(t,\"nil\",{enumerable:!0,get:function(){return n.nil}}),Object.defineProperty(t,\"getProperty\",{enumerable:!0,get:function(){return n.getProperty}}),Object.defineProperty(t,\"stringify\",{enumerable:!0,get:function(){return n.stringify}}),Object.defineProperty(t,\"Name\",{enumerable:!0,get:function(){return n.Name}});var a=d;Object.defineProperty(t,\"Scope\",{enumerable:!0,get:function(){return a.Scope}}),Object.defineProperty(t,\"ValueScope\",{enumerable:!0,get:function(){return a.ValueScope}}),Object.defineProperty(t,\"ValueScopeName\",{enumerable:!0,get:function(){return a.ValueScopeName}}),Object.defineProperty(t,\"varKinds\",{enumerable:!0,get:function(){return a.varKinds}}),t.operators={GT:new u._Code(\">\"),GTE:new u._Code(\">=\"),LT:new u._Code(\"<\"),LTE:new u._Code(\"<=\"),EQ:new u._Code(\"===\"),NEQ:new u._Code(\"!==\"),NOT:new u._Code(\"!\"),OR:new u._Code(\"||\"),AND:new u._Code(\"&&\"),ADD:new u._Code(\"+\")};class r{optimizeNodes(){return this}optimizeNames(e,t){return this}}class s extends r{constructor(e,t,n){super(),this.varKind=e,this.name=t,this.rhs=n}render({es5:e,_n:t}){const n=e?d.varKinds.var:this.varKind,a=void 0===this.rhs?\"\":` = ${this.rhs}`;return`${n} ${this.name}${a};`+t}optimizeNames(e,t){if(e[this.name.str])return this.rhs&&(this.rhs=A(this.rhs,e,t)),this}get names(){return this.rhs instanceof u._CodeOrName?this.rhs.names:{}}}class i extends r{constructor(e,t,n){super(),this.lhs=e,this.rhs=t,this.sideEffects=n}render({_n:e}){return`${this.lhs} = ${this.rhs};`+e}optimizeNames(e,t){if(!(this.lhs instanceof u.Name)||e[this.lhs.str]||this.sideEffects)return this.rhs=A(this.rhs,e,t),this}get names(){return S(this.lhs instanceof u.Name?{}:{...this.lhs.names},this.rhs)}}class o extends i{constructor(e,t,n,a){super(e,n,a),this.op=t}render({_n:e}){return`${this.lhs} ${this.op}= ${this.rhs};`+e}}class p extends r{constructor(e){super(),this.label=e,this.names={}}render({_n:e}){return`${this.label}:`+e}}class l extends r{constructor(e){super(),this.label=e,this.names={}}render({_n:e}){return`break${this.label?` ${this.label}`:\"\"};`+e}}class c extends r{constructor(e){super(),this.error=e}render({_n:e}){return`throw ${this.error};`+e}get names(){return this.error.names}}class y extends r{constructor(e){super(),this.code=e}render({_n:e}){return`${this.code};`+e}optimizeNodes(){return`${this.code}`?this:void 0}optimizeNames(e,t){return this.code=A(this.code,e,t),this}get names(){return this.code instanceof u._CodeOrName?this.code.names:{}}}class m extends r{constructor(e=[]){super(),this.nodes=e}render(e){return this.nodes.reduce(((t,n)=>t+n.render(e)),\"\")}optimizeNodes(){const{nodes:e}=this;let t=e.length;for(;t--;){const n=e[t].optimizeNodes();Array.isArray(n)?e.splice(t,1,...n):n?e[t]=n:e.splice(t,1)}return e.length>0?this:void 0}optimizeNames(e,t){const{nodes:n}=this;let a=n.length;for(;a--;){const r=n[a];r.optimizeNames(e,t)||(x(e,r.names),n.splice(a,1))}return n.length>0?this:void 0}get names(){return this.nodes.reduce(((e,t)=>N(e,t.names)),{})}}class f extends m{render(e){return\"{\"+e._n+super.render(e)+\"}\"+e._n}}class h extends m{}class b extends f{}b.kind=\"else\";class v extends f{constructor(e,t){super(t),this.condition=e}render(e){let t=`if(${this.condition})`+super.render(e);return this.else&&(t+=\"else \"+this.else.render(e)),t}optimizeNodes(){super.optimizeNodes();const e=this.condition;if(!0===e)return this.nodes;let t=this.else;if(t){const e=t.optimizeNodes();t=this.else=Array.isArray(e)?new b(e):e}return t?!1===e?t instanceof v?t:t.nodes:this.nodes.length?this:new v(P(e),t instanceof v?[t]:t.nodes):!1!==e&&this.nodes.length?this:void 0}optimizeNames(e,t){var n;if(this.else=null===(n=this.else)||void 0===n?void 0:n.optimizeNames(e,t),super.optimizeNames(e,t)||this.else)return this.condition=A(this.condition,e,t),this}get names(){const e=super.names;return S(e,this.condition),this.else&&N(e,this.else.names),e}}v.kind=\"if\";class g extends f{}g.kind=\"for\";class _ extends g{constructor(e){super(),this.iteration=e}render(e){return`for(${this.iteration})`+super.render(e)}optimizeNames(e,t){if(super.optimizeNames(e,t))return this.iteration=A(this.iteration,e,t),this}get names(){return N(super.names,this.iteration.names)}}class T extends g{constructor(e,t,n,a){super(),this.varKind=e,this.name=t,this.from=n,this.to=a}render(e){const t=e.es5?d.varKinds.var:this.varKind,{name:n,from:a,to:r}=this;return`for(${t} ${n}=${a}; ${n}<${r}; ${n}++)`+super.render(e)}get names(){const e=S(super.names,this.from);return S(e,this.to)}}class w extends g{constructor(e,t,n,a){super(),this.loop=e,this.varKind=t,this.name=n,this.iterable=a}render(e){return`for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})`+super.render(e)}optimizeNames(e,t){if(super.optimizeNames(e,t))return this.iterable=A(this.iterable,e,t),this}get names(){return N(super.names,this.iterable.names)}}class $ extends f{constructor(e,t,n){super(),this.name=e,this.args=t,this.async=n}render(e){return`${this.async?\"async \":\"\"}function ${this.name}(${this.args})`+super.render(e)}}$.kind=\"func\";class E extends m{render(e){return\"return \"+super.render(e)}}E.kind=\"return\";class M extends f{render(e){let t=\"try\"+super.render(e);return this.catch&&(t+=this.catch.render(e)),this.finally&&(t+=this.finally.render(e)),t}optimizeNodes(){var e,t;return super.optimizeNodes(),null===(e=this.catch)||void 0===e||e.optimizeNodes(),null===(t=this.finally)||void 0===t||t.optimizeNodes(),this}optimizeNames(e,t){var n,a;return super.optimizeNames(e,t),null===(n=this.catch)||void 0===n||n.optimizeNames(e,t),null===(a=this.finally)||void 0===a||a.optimizeNames(e,t),this}get names(){const e=super.names;return this.catch&&N(e,this.catch.names),this.finally&&N(e,this.finally.names),e}}class C extends f{constructor(e){super(),this.error=e}render(e){return`catch(${this.error})`+super.render(e)}}C.kind=\"catch\";class I extends f{render(e){return\"finally\"+super.render(e)}}I.kind=\"finally\";function N(e,t){for(const n in t)e[n]=(e[n]||0)+(t[n]||0);return e}function S(e,t){return t instanceof u._CodeOrName?N(e,t.names):e}function A(e,t,n){return e instanceof u.Name?r(e):(a=e)instanceof u._Code&&a._items.some((e=>e instanceof u.Name&&1===t[e.str]&&void 0!==n[e.str]))?new u._Code(e._items.reduce(((e,t)=>(t instanceof u.Name&&(t=r(t)),t instanceof u._Code?e.push(...t._items):e.push(t),e)),[])):e;var a;function r(e){const a=n[e.str];return void 0===a||1!==t[e.str]?e:(delete t[e.str],a)}}function x(e,t){for(const n in t)e[n]=(e[n]||0)-(t[n]||0)}function P(e){return\"boolean\"==typeof e||\"number\"==typeof e||null===e?!e:u._`!${j(e)}`}t.CodeGen=class{constructor(e,t={}){this._values={},this._blockStarts=[],this._constants={},this.opts={...t,_n:t.lines?\"\\n\":\"\"},this._extScope=e,this._scope=new d.Scope({parent:e}),this._nodes=[new h]}toString(){return this._root.render(this.opts)}name(e){return this._scope.name(e)}scopeName(e){return this._extScope.name(e)}scopeValue(e,t){const n=this._extScope.value(e,t);return(this._values[n.prefix]||(this._values[n.prefix]=new Set)).add(n),n}getScopeValue(e,t){return this._extScope.getValue(e,t)}scopeRefs(e){return this._extScope.scopeRefs(e,this._values)}scopeCode(){return this._extScope.scopeCode(this._values)}_def(e,t,n,a){const r=this._scope.toName(t);return void 0!==n&&a&&(this._constants[r.str]=n),this._leafNode(new s(e,r,n)),r}const(e,t,n){return this._def(d.varKinds.const,e,t,n)}let(e,t,n){return this._def(d.varKinds.let,e,t,n)}var(e,t,n){return this._def(d.varKinds.var,e,t,n)}assign(e,t,n){return this._leafNode(new i(e,t,n))}add(e,n){return this._leafNode(new o(e,t.operators.ADD,n))}code(e){return\"function\"==typeof e?e():e!==u.nil&&this._leafNode(new y(e)),this}object(...e){const t=[\"{\"];for(const[n,a]of e)t.length>1&&t.push(\",\"),t.push(n),(n!==a||this.opts.es5)&&(t.push(\":\"),u.addCodeArg(t,a));return t.push(\"}\"),new u._Code(t)}if(e,t,n){if(this._blockNode(new v(e)),t&&n)this.code(t).else().code(n).endIf();else if(t)this.code(t).endIf();else if(n)throw new Error('CodeGen: \"else\" body without \"then\" body');return this}elseIf(e){return this._elseNode(new v(e))}else(){return this._elseNode(new b)}endIf(){return this._endBlockNode(v,b)}_for(e,t){return this._blockNode(e),t&&this.code(t).endFor(),this}for(e,t){return this._for(new _(e),t)}forRange(e,t,n,a,r=(this.opts.es5?d.varKinds.var:d.varKinds.let)){const s=this._scope.toName(e);return this._for(new T(r,s,t,n),(()=>a(s)))}forOf(e,t,n,a=d.varKinds.const){const r=this._scope.toName(e);if(this.opts.es5){const e=t instanceof u.Name?t:this.var(\"_arr\",t);return this.forRange(\"_i\",0,u._`${e}.length`,(t=>{this.var(r,u._`${e}[${t}]`),n(r)}))}return this._for(new w(\"of\",a,r,t),(()=>n(r)))}forIn(e,t,n,a=(this.opts.es5?d.varKinds.var:d.varKinds.const)){if(this.opts.ownProperties)return this.forOf(e,u._`Object.keys(${t})`,n);const r=this._scope.toName(e);return this._for(new w(\"in\",a,r,t),(()=>n(r)))}endFor(){return this._endBlockNode(g)}label(e){return this._leafNode(new p(e))}break(e){return this._leafNode(new l(e))}return(e){const t=new E;if(this._blockNode(t),this.code(e),1!==t.nodes.length)throw new Error('CodeGen: \"return\" should have one node');return this._endBlockNode(E)}try(e,t,n){if(!t&&!n)throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"');const a=new M;if(this._blockNode(a),this.code(e),t){const e=this.name(\"e\");this._currNode=a.catch=new C(e),t(e)}return n&&(this._currNode=a.finally=new I,this.code(n)),this._endBlockNode(C,I)}throw(e){return this._leafNode(new c(e))}block(e,t){return this._blockStarts.push(this._nodes.length),e&&this.code(e).endBlock(t),this}endBlock(e){const t=this._blockStarts.pop();if(void 0===t)throw new Error(\"CodeGen: not in self-balancing block\");const n=this._nodes.length-t;if(n<0||void 0!==e&&n!==e)throw new Error(`CodeGen: wrong number of nodes: ${n} vs ${e} expected`);return this._nodes.length=t,this}func(e,t=u.nil,n,a){return this._blockNode(new $(e,t,n)),a&&this.code(a).endFunc(),this}endFunc(){return this._endBlockNode($)}optimize(e=1){for(;e-- >0;)this._root.optimizeNodes(),this._root.optimizeNames(this._root.names,this._constants)}_leafNode(e){return this._currNode.nodes.push(e),this}_blockNode(e){this._currNode.nodes.push(e),this._nodes.push(e)}_endBlockNode(e,t){const n=this._currNode;if(n instanceof e||t&&n instanceof t)return this._nodes.pop(),this;throw new Error(`CodeGen: not in block \"${t?`${e.kind}/${t.kind}`:e.kind}\"`)}_elseNode(e){const t=this._currNode;if(!(t instanceof v))throw new Error('CodeGen: \"else\" without \"if\"');return this._currNode=t.else=e,this}get _root(){return this._nodes[0]}get _currNode(){const e=this._nodes;return e[e.length-1]}set _currNode(e){const t=this._nodes;t[t.length-1]=e}},t.not=P;const O=k(t.operators.AND);t.and=function(...e){return e.reduce(O)};const R=k(t.operators.OR);function k(e){return(t,n)=>t===u.nil?n:n===u.nil?t:u._`${j(t)} ${e} ${j(n)}`}function j(e){return e instanceof u.Name?e:u._`(${e})`}t.or=function(...e){return e.reduce(R)}}));r(l),l.or,l.and,l.not,l.CodeGen,l.operators,l.varKinds,l.ValueScopeName,l.ValueScope,l.Scope,l.Name,l.stringify,l.getProperty,l.nil,l.strConcat,l.str,l._;var c=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={data:new l.Name(\"data\"),valCxt:new l.Name(\"valCxt\"),dataPath:new l.Name(\"dataPath\"),parentData:new l.Name(\"parentData\"),parentDataProperty:new l.Name(\"parentDataProperty\"),rootData:new l.Name(\"rootData\"),dynamicAnchors:new l.Name(\"dynamicAnchors\"),vErrors:new l.Name(\"vErrors\"),errors:new l.Name(\"errors\"),this:new l.Name(\"this\"),self:new l.Name(\"self\"),scope:new l.Name(\"scope\"),json:new l.Name(\"json\"),jsonPos:new l.Name(\"jsonPos\"),jsonLen:new l.Name(\"jsonLen\"),jsonPart:new l.Name(\"jsonPart\")};t.default=n}));r(c);var y=s((function(e,t){function n(e,t){const n=e.const(\"err\",t);e.if(l._`${c.default.vErrors} === null`,(()=>e.assign(c.default.vErrors,l._`[${n}]`)),l._`${c.default.vErrors}.push(${n})`),e.code(l._`${c.default.errors}++`)}function a(e,t){const{gen:n,validateName:a,schemaEnv:r}=e;r.$async?n.throw(l._`new ${e.ValidationError}(${t})`):(n.assign(l._`${a}.errors`,t),n.return(!1))}Object.defineProperty(t,\"__esModule\",{value:!0}),t.extendErrors=t.resetErrorsCount=t.reportExtraError=t.reportError=t.keyword$DataError=t.keywordError=void 0,t.keywordError={message:({keyword:e})=>l.str`should pass \"${e}\" keyword validation`},t.keyword$DataError={message:({keyword:e,schemaType:t})=>t?l.str`\"${e}\" keyword must be ${t} ($data)`:l.str`\"${e}\" keyword is invalid ($data)`},t.reportError=function(e,r=t.keywordError,i){const{it:o}=e,{gen:p,compositeRule:u,allErrors:d}=o,c=s(e,r);(null!=i?i:u||d)?n(p,c):a(o,l._`[${c}]`)},t.reportExtraError=function(e,r=t.keywordError){const{it:i}=e,{gen:o,compositeRule:p,allErrors:u}=i;n(o,s(e,r)),p||u||a(i,c.default.vErrors)},t.resetErrorsCount=function(e,t){e.assign(c.default.errors,t),e.if(l._`${c.default.vErrors} !== null`,(()=>e.if(t,(()=>e.assign(l._`${c.default.vErrors}.length`,t)),(()=>e.assign(c.default.vErrors,null)))))},t.extendErrors=function({gen:e,keyword:t,schemaValue:n,data:a,errsCount:r,it:s}){if(void 0===r)throw new Error(\"ajv implementation error\");const i=e.name(\"err\");e.forRange(\"i\",r,c.default.errors,(r=>{e.const(i,l._`${c.default.vErrors}[${r}]`),e.if(l._`${i}.dataPath === undefined`,(()=>e.assign(l._`${i}.dataPath`,l.strConcat(c.default.dataPath,s.errorPath)))),e.assign(l._`${i}.schemaPath`,l.str`${s.errSchemaPath}/${t}`),s.opts.verbose&&(e.assign(l._`${i}.schema`,n),e.assign(l._`${i}.data`,a))}))};const r={keyword:new l.Name(\"keyword\"),schemaPath:new l.Name(\"schemaPath\"),params:new l.Name(\"params\"),propertyName:new l.Name(\"propertyName\"),message:new l.Name(\"message\"),schema:new l.Name(\"schema\"),parentSchema:new l.Name(\"parentSchema\"),instancePath:new l.Name(\"instancePath\")};function s(e,t){const{createErrors:n,opts:a}=e.it;return!1===n?l._`{}`:(a.jtd&&!a.ajvErrors?i:o)(e,t)}function i(e,{message:t}){const{gen:n,keyword:a,it:s}=e,{errorPath:i,errSchemaPath:o,opts:p}=s,u=[[r.instancePath,l.strConcat(c.default.dataPath,i)],[r.schemaPath,l.str`${o}/${a}`]];return p.messages&&u.push([r.message,\"function\"==typeof t?t(e):t]),n.object(...u)}function o(e,t){const{gen:n,keyword:a,data:s,schemaValue:i,it:o}=e,{topSchemaRef:p,schemaPath:u,errorPath:d,errSchemaPath:y,propertyName:m,opts:f}=o,{params:h,message:b}=t,v=[[r.keyword,a],[c.default.dataPath,l.strConcat(c.default.dataPath,d)],[r.schemaPath,l.str`${y}/${a}`],[r.params,\"function\"==typeof h?h(e):h||l._`{}`]];return m&&v.push([r.propertyName,m]),f.messages&&v.push([r.message,\"function\"==typeof b?b(e):b]),f.verbose&&v.push([r.schema,i],[r.parentSchema,l._`${p}${u}`],[c.default.data,s]),n.object(...v)}}));r(y),y.extendErrors,y.resetErrorsCount,y.reportExtraError,y.reportError,y.keyword$DataError,y.keywordError;var m=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.boolOrEmptySchema=t.topBoolOrEmptySchema=void 0;const n={message:\"boolean schema is false\"};function a(e,t){const{gen:a,data:r}=e,s={gen:a,keyword:\"false schema\",data:r,schema:!1,schemaCode:!1,schemaValue:!1,params:{},it:e};y.reportError(s,n,t)}t.topBoolOrEmptySchema=function(e){const{gen:t,schema:n,validateName:r}=e;!1===n?a(e,!1):\"object\"==typeof n&&!0===n.$async?t.return(c.default.data):(t.assign(l._`${r}.errors`,null),t.return(!0))},t.boolOrEmptySchema=function(e,t){const{gen:n,schema:r}=e;!1===r?(n.var(t,!1),a(e)):n.var(t,!0)}}));r(m),m.boolOrEmptySchema,m.topBoolOrEmptySchema;var f=s((function(e,t){function n(e,t,n){const{gen:a,compositeRule:r,data:s,opts:i}=e;if(void 0===n)return;const o=l._`${s}${l.getProperty(t)}`;if(r)return void E.checkStrictMode(e,`default is ignored for: ${o}`);let p=l._`${o} === undefined`;\"empty\"===i.useDefaults&&(p=l._`${p} || ${o} === null || ${o} === \"\"`),a.if(p,l._`${o} = ${l.stringify(n)}`)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.assignDefaults=void 0,t.assignDefaults=function(e,t){const{properties:a,items:r}=e.schema;if(\"object\"===t&&a)for(const t in a)n(e,t,a[t].default);else\"array\"===t&&Array.isArray(r)&&r.forEach(((t,a)=>n(e,a,t.default)))}}));r(f),f.assignDefaults;var h=s((function(e,t){var n;Object.defineProperty(t,\"__esModule\",{value:!0}),t.applySubschema=t.Type=void 0,function(e){e[e.Num=0]=\"Num\",e[e.Str=1]=\"Str\"}(n=t.Type||(t.Type={})),t.applySubschema=function(e,t,a){const r=function(e,{keyword:t,schemaProp:n,schema:a,schemaPath:r,errSchemaPath:s,topSchemaRef:i}){if(void 0!==t&&void 0!==a)throw new Error('both \"keyword\" and \"schema\" passed, only one allowed');if(void 0!==t){const a=e.schema[t];return void 0===n?{schema:a,schemaPath:l._`${e.schemaPath}${l.getProperty(t)}`,errSchemaPath:`${e.errSchemaPath}/${t}`}:{schema:a[n],schemaPath:l._`${e.schemaPath}${l.getProperty(t)}${l.getProperty(n)}`,errSchemaPath:`${e.errSchemaPath}/${t}/${M.escapeFragment(n)}`}}if(void 0!==a){if(void 0===r||void 0===s||void 0===i)throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"');return{schema:a,schemaPath:r,topSchemaRef:i,errSchemaPath:s}}throw new Error('either \"keyword\" or \"schema\" must be passed')}(e,t);!function(e,t,{dataProp:a,dataPropType:r,data:s,dataTypes:i,propertyName:o}){if(void 0!==s&&void 0!==a)throw new Error('both \"data\" and \"dataProp\" passed, only one allowed');const{gen:p}=t;if(void 0!==a){const{errorPath:s,dataPathArr:i,opts:o}=t;u(p.let(\"data\",l._`${t.data}${l.getProperty(a)}`,!0)),e.errorPath=l.str`${s}${function(e,t,a){if(e instanceof l.Name){const r=t===n.Num;return a?r?l._`\"[\" + ${e} + \"]\"`:l._`\"['\" + ${e} + \"']\"`:r?l._`\"/\" + ${e}`:l._`\"/\" + ${e}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")`}return a?l.getProperty(e).toString():\"/\"+M.escapeJsonPointer(e)}(a,r,o.jsPropertySyntax)}`,e.parentDataProperty=l._`${a}`,e.dataPathArr=[...i,e.parentDataProperty]}if(void 0!==s){u(s instanceof l.Name?s:p.let(\"data\",s,!0)),void 0!==o&&(e.propertyName=o)}i&&(e.dataTypes=i);function u(n){e.data=n,e.dataLevel=t.dataLevel+1,e.dataTypes=[],t.definedProperties=new Set,e.parentData=t.data,e.dataNames=[...t.dataNames,n]}}(r,e,t),function(e,{jtdDiscriminator:t,jtdMetadata:n,compositeRule:a,createErrors:r,allErrors:s}){void 0!==a&&(e.compositeRule=a);void 0!==r&&(e.createErrors=r);void 0!==s&&(e.allErrors=s);e.jtdDiscriminator=t,e.jtdMetadata=n}(r,t);const s={...e,...r,items:void 0,props:void 0};return E.subschemaCode(s,a),s}}));r(h),h.applySubschema,h.Type;var b=s((function(e,t){function n(e){return e.scopeValue(\"func\",{ref:Object.prototype.hasOwnProperty,code:l._`Object.prototype.hasOwnProperty`})}function a(e,t,a){return l._`${n(e)}.call(${t}, ${a})`}function r(e,t,n,r){const s=l._`${t}${l.getProperty(n)} === undefined`;return r?l.or(s,l.not(a(e,t,n))):s}function s(e){return e?Object.keys(e).filter((e=>\"__proto__\"!==e)):[]}Object.defineProperty(t,\"__esModule\",{value:!0}),t.validateUnion=t.validateArray=t.usePattern=t.callValidateCode=t.schemaProperties=t.allSchemaProperties=t.noPropertyInData=t.propertyInData=t.isOwnProperty=t.hasPropFunc=t.reportMissingProp=t.checkMissingProp=t.checkReportMissingProp=void 0,t.checkReportMissingProp=function(e,t){const{gen:n,data:a,it:s}=e;n.if(r(n,a,t,s.opts.ownProperties),(()=>{e.setParams({missingProperty:l._`${t}`},!0),e.error()}))},t.checkMissingProp=function({gen:e,data:t,it:{opts:n}},a,s){return l.or(...a.map((a=>l.and(r(e,t,a,n.ownProperties),l._`${s} = ${a}`))))},t.reportMissingProp=function(e,t){e.setParams({missingProperty:t},!0),e.error()},t.hasPropFunc=n,t.isOwnProperty=a,t.propertyInData=function(e,t,n,r){const s=l._`${t}${l.getProperty(n)} !== undefined`;return r?l._`${s} && ${a(e,t,n)}`:s},t.noPropertyInData=r,t.allSchemaProperties=s,t.schemaProperties=function(e,t){return s(t).filter((n=>!M.alwaysValidSchema(e,t[n])))},t.callValidateCode=function({schemaCode:e,data:t,it:{gen:n,topSchemaRef:a,schemaPath:r,errorPath:s},it:i},o,p,u){const d=u?l._`${e}, ${t}, ${a}${r}`:t,y=[[c.default.dataPath,l.strConcat(c.default.dataPath,s)],[c.default.parentData,i.parentData],[c.default.parentDataProperty,i.parentDataProperty],[c.default.rootData,c.default.rootData]];i.opts.dynamicRef&&y.push([c.default.dynamicAnchors,c.default.dynamicAnchors]);const m=l._`${d}, ${n.object(...y)}`;return p!==l.nil?l._`${o}.call(${p}, ${m})`:l._`${o}(${m})`},t.usePattern=function(e,t){return e.scopeValue(\"pattern\",{key:t,ref:new RegExp(t,\"u\"),code:l._`new RegExp(${t}, \"u\")`})},t.validateArray=function(e){const{gen:t,data:n,keyword:a,it:r}=e,s=t.name(\"valid\");if(r.allErrors){const e=t.let(\"valid\",!0);return i((()=>t.assign(e,!1))),e}return t.var(s,!0),i((()=>t.break())),s;function i(r){const i=t.const(\"len\",l._`${n}.length`);t.forRange(\"i\",0,i,(n=>{e.subschema({keyword:a,dataProp:n,dataPropType:h.Type.Num},s),t.if(l.not(s),r)}))}},t.validateUnion=function(e){const{gen:t,schema:n,keyword:a,it:r}=e;if(!Array.isArray(n))throw new Error(\"ajv implementation error\");if(n.some((e=>M.alwaysValidSchema(r,e)))&&!r.opts.unevaluated)return;const s=t.let(\"valid\",!1),i=t.name(\"_valid\");t.block((()=>n.forEach(((n,r)=>{const o=e.subschema({keyword:a,schemaProp:r,compositeRule:!0},i);t.assign(s,l._`${s} || ${i}`);e.mergeValidEvaluated(o,i)||t.if(l.not(s))})))),e.result(s,(()=>e.reset()),(()=>e.error(!0)))}}));r(b),b.validateUnion,b.validateArray,b.usePattern,b.callValidateCode,b.schemaProperties,b.allSchemaProperties,b.noPropertyInData,b.propertyInData,b.isOwnProperty,b.hasPropFunc,b.reportMissingProp,b.checkMissingProp,b.checkReportMissingProp;var v=s((function(e,t){function n(e,t){var n;const{gen:s,keyword:i,schema:o,parentSchema:p,$data:u,it:d}=e;!function({schemaEnv:e},t){if(t.async&&!e.$async)throw new Error(\"async keyword in sync schema\")}(d,t);const m=!u&&t.compile?t.compile.call(d.self,o,p,d):t.validate,f=r(s,i,m),h=s.let(\"valid\");function v(n=(t.async?l._`await `:l.nil)){const a=d.opts.passContext?c.default.this:c.default.self,r=!(\"compile\"in t&&!u||!1===t.schema);s.assign(h,l._`${n}${b.callValidateCode(e,f,a,r)}`,t.modifying)}function g(e){var n;s.if(l.not(null!==(n=t.valid)&&void 0!==n?n:h),e)}e.block$data(h,(function(){if(!1===t.errors)v(),t.modifying&&a(e),g((()=>e.error()));else{const n=t.async?function(){const e=s.let(\"ruleErrs\",null);return s.try((()=>v(l._`await `)),(t=>s.assign(h,!1).if(l._`${t} instanceof ${d.ValidationError}`,(()=>s.assign(e,l._`${t}.errors`)),(()=>s.throw(t))))),e}():function(){const e=l._`${f}.errors`;return s.assign(e,null),v(l.nil),e}();t.modifying&&a(e),g((()=>function(e,t){const{gen:n}=e;n.if(l._`Array.isArray(${t})`,(()=>{n.assign(c.default.vErrors,l._`${c.default.vErrors} === null ? ${t} : ${c.default.vErrors}.concat(${t})`).assign(c.default.errors,l._`${c.default.vErrors}.length`),y.extendErrors(e)}),(()=>e.error()))}(e,n)))}})),e.ok(null!==(n=t.valid)&&void 0!==n?n:h)}function a(e){const{gen:t,data:n,it:a}=e;t.if(a.parentData,(()=>t.assign(n,l._`${a.parentData}[${a.parentDataProperty}]`)))}function r(e,t,n){if(void 0===n)throw new Error(`keyword \"${t}\" failed to compile`);return e.scopeValue(\"keyword\",\"function\"==typeof n?{ref:n}:{ref:n,code:l.stringify(n)})}Object.defineProperty(t,\"__esModule\",{value:!0}),t.keywordCode=void 0,t.keywordCode=function(e,t,a,s){const i=new I.default(e,a,t);\"code\"in a?a.code(i,s):i.$data&&a.validate?n(i,a):\"macro\"in a?function(e,t){const{gen:n,keyword:a,schema:s,parentSchema:i,it:o}=e,p=t.macro.call(o.self,s,i,o),u=r(n,a,p);!1!==o.opts.validateSchema&&o.self.validateSchema(p,!0);const d=n.name(\"valid\");e.subschema({schema:p,schemaPath:l.nil,errSchemaPath:`${o.errSchemaPath}/${a}`,topSchemaRef:u,compositeRule:!0},d),e.pass(d,(()=>e.error(!0)))}(i,a):(a.compile||a.validate)&&n(i,a)}}));r(v),v.keywordCode;var g=s((function(e,t){function n(e,t){const{gen:n,schema:a,opts:{useDefaults:r}}=e;r&&f.assignDefaults(e,t.type),n.block((()=>{for(const n of t.rules)p.shouldUseRule(a,n)&&v.keywordCode(e,n.keyword,n.definition,t.type)}))}function a(e,t){return e.includes(t)||\"number\"===t&&e.includes(\"integer\")}function r(e,t){return e.includes(t)||\"integer\"===t&&e.includes(\"number\")}function s(e,t){t+=` at \"${e.schemaEnv.baseId+e.errSchemaPath}\" (strictTypes)`,E.checkStrictMode(e,t,e.opts.strictTypes)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.schemaKeywords=void 0,t.schemaKeywords=function(e,t,i,o){const{gen:u,schema:d,data:y,allErrors:m,opts:f,self:h}=e,{RULES:b}=h;function g(a){p.shouldUseGroup(d,a)&&(a.type?(u.if(C.checkDataType(a.type,y,f.strict)),n(e,a),1===t.length&&t[0]===a.type&&i&&(u.else(),C.reportTypeError(e)),u.endIf()):n(e,a),m||u.if(l._`${c.default.errors} === ${o||0}`))}!d.$ref||!f.ignoreKeywordsWithRef&&M.schemaHasRulesButRef(d,b)?(f.jtd||function(e,t){if(e.schemaEnv.meta||!e.opts.strictTypes)return;(function(e,t){if(!t.length)return;if(!e.dataTypes.length)return void(e.dataTypes=t);t.forEach((t=>{r(e.dataTypes,t)||s(e,`type \"${t}\" not allowed by context \"${e.dataTypes.join(\",\")}\"`)})),e.dataTypes=e.dataTypes.filter((e=>r(t,e)))})(e,t),e.opts.allowUnionTypes||function(e,t){t.length>1&&(2!==t.length||!t.includes(\"null\"))&&s(e,\"use allowUnionTypes to allow union type keyword\")}(e,t);!function(e,t){const n=e.self.RULES.all;for(const r in n){const i=n[r];if(\"object\"==typeof i&&p.shouldUseRule(e.schema,i)){const{type:n}=i.definition;n.length&&!n.some((e=>a(t,e)))&&s(e,`missing type \"${n.join(\",\")}\" for keyword \"${r}\"`)}}}(e,e.dataTypes)}(e,t),u.block((()=>{for(const e of b.rules)g(e);g(b.post)}))):u.block((()=>v.keywordCode(e,\"$ref\",b.all.$ref.definition)))}}));r(g),g.schemaKeywords;var _=function e(t,n){if(t===n)return!0;if(t&&n&&\"object\"==typeof t&&\"object\"==typeof n){if(t.constructor!==n.constructor)return!1;var a,r,s;if(Array.isArray(t)){if((a=t.length)!=n.length)return!1;for(r=a;0!=r--;)if(!e(t[r],n[r]))return!1;return!0}if(t.constructor===RegExp)return t.source===n.source&&t.flags===n.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===n.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===n.toString();if((a=(s=Object.keys(t)).length)!==Object.keys(n).length)return!1;for(r=a;0!=r--;)if(!Object.prototype.hasOwnProperty.call(n,s[r]))return!1;for(r=a;0!=r--;){var i=s[r];if(!e(t[i],n[i]))return!1}return!0}return t!=t&&n!=n},T=s((function(e){var t=e.exports=function(e,t,a){\"function\"==typeof t&&(a=t,t={}),n(t,\"function\"==typeof(a=t.cb||a)?a:a.pre||function(){},a.post||function(){},e,\"\",e)};function n(e,a,r,s,i,o,p,u,d,l){if(s&&\"object\"==typeof s&&!Array.isArray(s)){for(var c in a(s,i,o,p,u,d,l),s){var y=s[c];if(Array.isArray(y)){if(c in t.arrayKeywords)for(var m=0;m<y.length;m++)n(e,a,r,y[m],i+\"/\"+c+\"/\"+m,o,i,c,s,m)}else if(c in t.propsKeywords){if(y&&\"object\"==typeof y)for(var f in y)n(e,a,r,y[f],i+\"/\"+c+\"/\"+f.replace(/~/g,\"~0\").replace(/\\//g,\"~1\"),o,i,c,s,f)}else(c in t.keywords||e.allKeys&&!(c in t.skipKeywords))&&n(e,a,r,y,i+\"/\"+c,o,i,c,s)}r(s,i,o,p,u,d,l)}}t.keywords={additionalItems:!0,items:!0,contains:!0,additionalProperties:!0,propertyNames:!0,not:!0,if:!0,then:!0,else:!0},t.arrayKeywords={items:!0,allOf:!0,anyOf:!0,oneOf:!0},t.propsKeywords={$defs:!0,definitions:!0,properties:!0,patternProperties:!0,dependencies:!0},t.skipKeywords={default:!0,enum:!0,const:!0,required:!0,maximum:!0,minimum:!0,exclusiveMaximum:!0,exclusiveMinimum:!0,multipleOf:!0,maxLength:!0,minLength:!0,pattern:!0,format:!0,maxItems:!0,minItems:!0,uniqueItems:!0,maxProperties:!0,minProperties:!0}})),w=s((function(e,t){\n/** @license URI.js v4.4.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */\n!function(e){function t(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];if(t.length>1){t[0]=t[0].slice(0,-1);for(var a=t.length-1,r=1;r<a;++r)t[r]=t[r].slice(1,-1);return t[a]=t[a].slice(1),t.join(\"\")}return t[0]}function n(e){return\"(?:\"+e+\")\"}function a(e){return void 0===e?\"undefined\":null===e?\"null\":Object.prototype.toString.call(e).split(\" \").pop().split(\"]\").shift().toLowerCase()}function r(e){return e.toUpperCase()}function s(e){return null!=e?e instanceof Array?e:\"number\"!=typeof e.length||e.split||e.setInterval||e.call?[e]:Array.prototype.slice.call(e):[]}function i(e,t){var n=e;if(t)for(var a in t)n[a]=t[a];return n}function o(e){var a=\"[A-Za-z]\",r=\"[0-9]\",s=t(r,\"[A-Fa-f]\"),i=n(n(\"%[EFef]\"+s+\"%\"+s+s+\"%\"+s+s)+\"|\"+n(\"%[89A-Fa-f]\"+s+\"%\"+s+s)+\"|\"+n(\"%\"+s+s)),o=\"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",p=t(\"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",o),u=e?\"[\\\\uE000-\\\\uF8FF]\":\"[]\",d=t(a,r,\"[\\\\-\\\\.\\\\_\\\\~]\",e?\"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\":\"[]\");n(a+t(a,r,\"[\\\\+\\\\-\\\\.]\")+\"*\"),n(n(i+\"|\"+t(d,o,\"[\\\\:]\"))+\"*\");var l=n(n(\"25[0-5]\")+\"|\"+n(\"2[0-4]\"+r)+\"|\"+n(\"1\"+r+r)+\"|\"+n(\"0?[1-9]\"+r)+\"|0?0?\"+r),c=n(l+\"\\\\.\"+l+\"\\\\.\"+l+\"\\\\.\"+l),y=n(s+\"{1,4}\"),m=n(n(y+\"\\\\:\"+y)+\"|\"+c),f=n(n(y+\"\\\\:\")+\"{6}\"+m),h=n(\"\\\\:\\\\:\"+n(y+\"\\\\:\")+\"{5}\"+m),b=n(n(y)+\"?\\\\:\\\\:\"+n(y+\"\\\\:\")+\"{4}\"+m),v=n(n(n(y+\"\\\\:\")+\"{0,1}\"+y)+\"?\\\\:\\\\:\"+n(y+\"\\\\:\")+\"{3}\"+m),g=n(n(n(y+\"\\\\:\")+\"{0,2}\"+y)+\"?\\\\:\\\\:\"+n(y+\"\\\\:\")+\"{2}\"+m),_=n(n(n(y+\"\\\\:\")+\"{0,3}\"+y)+\"?\\\\:\\\\:\"+y+\"\\\\:\"+m),T=n(n(n(y+\"\\\\:\")+\"{0,4}\"+y)+\"?\\\\:\\\\:\"+m),w=n(n(n(y+\"\\\\:\")+\"{0,5}\"+y)+\"?\\\\:\\\\:\"+y),$=n(n(n(y+\"\\\\:\")+\"{0,6}\"+y)+\"?\\\\:\\\\:\"),E=n([f,h,b,v,g,_,T,w,$].join(\"|\")),M=n(n(d+\"|\"+i)+\"+\");n(\"[vV]\"+s+\"+\\\\.\"+t(d,o,\"[\\\\:]\")+\"+\"),n(n(i+\"|\"+t(d,o))+\"*\");var C=n(i+\"|\"+t(d,o,\"[\\\\:\\\\@]\"));return n(n(i+\"|\"+t(d,o,\"[\\\\@]\"))+\"+\"),n(n(C+\"|\"+t(\"[\\\\/\\\\?]\",u))+\"*\"),{NOT_SCHEME:new RegExp(t(\"[^]\",a,r,\"[\\\\+\\\\-\\\\.]\"),\"g\"),NOT_USERINFO:new RegExp(t(\"[^\\\\%\\\\:]\",d,o),\"g\"),NOT_HOST:new RegExp(t(\"[^\\\\%\\\\[\\\\]\\\\:]\",d,o),\"g\"),NOT_PATH:new RegExp(t(\"[^\\\\%\\\\/\\\\:\\\\@]\",d,o),\"g\"),NOT_PATH_NOSCHEME:new RegExp(t(\"[^\\\\%\\\\/\\\\@]\",d,o),\"g\"),NOT_QUERY:new RegExp(t(\"[^\\\\%]\",d,o,\"[\\\\:\\\\@\\\\/\\\\?]\",u),\"g\"),NOT_FRAGMENT:new RegExp(t(\"[^\\\\%]\",d,o,\"[\\\\:\\\\@\\\\/\\\\?]\"),\"g\"),ESCAPE:new RegExp(t(\"[^]\",d,o),\"g\"),UNRESERVED:new RegExp(d,\"g\"),OTHER_CHARS:new RegExp(t(\"[^\\\\%]\",d,p),\"g\"),PCT_ENCODED:new RegExp(i,\"g\"),IPV4ADDRESS:new RegExp(\"^(\"+c+\")$\"),IPV6ADDRESS:new RegExp(\"^\\\\[?(\"+E+\")\"+n(n(\"\\\\%25|\\\\%(?!\"+s+\"{2})\")+\"(\"+M+\")\")+\"?\\\\]?$\")}}var p=o(!1),u=o(!0),d=function(){function e(e,t){var n=[],a=!0,r=!1,s=void 0;try{for(var i,o=e[Symbol.iterator]();!(a=(i=o.next()).done)&&(n.push(i.value),!t||n.length!==t);a=!0);}catch(e){r=!0,s=e}finally{try{!a&&o.return&&o.return()}finally{if(r)throw s}}return n}return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,n);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),l=function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)},c=2147483647,y=36,m=1,f=26,h=38,b=700,v=72,g=128,_=\"-\",T=/^xn--/,w=/[^\\0-\\x7E]/,$=/[\\x2E\\u3002\\uFF0E\\uFF61]/g,E={overflow:\"Overflow: input needs wider integers to process\",\"not-basic\":\"Illegal input >= 0x80 (not a basic code point)\",\"invalid-input\":\"Invalid input\"},M=y-m,C=Math.floor,I=String.fromCharCode;function N(e){throw new RangeError(E[e])}function S(e,t){for(var n=[],a=e.length;a--;)n[a]=t(e[a]);return n}function A(e,t){var n=e.split(\"@\"),a=\"\";return n.length>1&&(a=n[0]+\"@\",e=n[1]),a+S((e=e.replace($,\".\")).split(\".\"),t).join(\".\")}function x(e){for(var t=[],n=0,a=e.length;n<a;){var r=e.charCodeAt(n++);if(r>=55296&&r<=56319&&n<a){var s=e.charCodeAt(n++);56320==(64512&s)?t.push(((1023&r)<<10)+(1023&s)+65536):(t.push(r),n--)}else t.push(r)}return t}var P=function(e){return e-48<10?e-22:e-65<26?e-65:e-97<26?e-97:y},O=function(e,t){return e+22+75*(e<26)-((0!=t)<<5)},R=function(e,t,n){var a=0;for(e=n?C(e/b):e>>1,e+=C(e/t);e>M*f>>1;a+=y)e=C(e/M);return C(a+(M+1)*e/(e+h))},k=function(e){var t=[],n=e.length,a=0,r=g,s=v,i=e.lastIndexOf(_);i<0&&(i=0);for(var o=0;o<i;++o)e.charCodeAt(o)>=128&&N(\"not-basic\"),t.push(e.charCodeAt(o));for(var p=i>0?i+1:0;p<n;){for(var u=a,d=1,l=y;;l+=y){p>=n&&N(\"invalid-input\");var h=P(e.charCodeAt(p++));(h>=y||h>C((c-a)/d))&&N(\"overflow\"),a+=h*d;var b=l<=s?m:l>=s+f?f:l-s;if(h<b)break;var T=y-b;d>C(c/T)&&N(\"overflow\"),d*=T}var w=t.length+1;s=R(a-u,w,0==u),C(a/w)>c-r&&N(\"overflow\"),r+=C(a/w),a%=w,t.splice(a++,0,r)}return String.fromCodePoint.apply(String,t)},j=function(e){var t=[],n=(e=x(e)).length,a=g,r=0,s=v,i=!0,o=!1,p=void 0;try{for(var u,d=e[Symbol.iterator]();!(i=(u=d.next()).done);i=!0){var l=u.value;l<128&&t.push(I(l))}}catch(e){o=!0,p=e}finally{try{!i&&d.return&&d.return()}finally{if(o)throw p}}var h=t.length,b=h;for(h&&t.push(_);b<n;){var T=c,w=!0,$=!1,E=void 0;try{for(var M,S=e[Symbol.iterator]();!(w=(M=S.next()).done);w=!0){var A=M.value;A>=a&&A<T&&(T=A)}}catch(e){$=!0,E=e}finally{try{!w&&S.return&&S.return()}finally{if($)throw E}}var P=b+1;T-a>C((c-r)/P)&&N(\"overflow\"),r+=(T-a)*P,a=T;var k=!0,j=!1,D=void 0;try{for(var U,V=e[Symbol.iterator]();!(k=(U=V.next()).done);k=!0){var F=U.value;if(F<a&&++r>c&&N(\"overflow\"),F==a){for(var B=r,H=y;;H+=y){var L=H<=s?m:H>=s+f?f:H-s;if(B<L)break;var K=B-L,z=y-L;t.push(I(O(L+K%z,0))),B=C(K/z)}t.push(I(O(B,0))),s=R(r,P,b==h),r=0,++b}}}catch(e){j=!0,D=e}finally{try{!k&&V.return&&V.return()}finally{if(j)throw D}}++r,++a}return t.join(\"\")},D=function(e){return A(e,(function(e){return T.test(e)?k(e.slice(4).toLowerCase()):e}))},U=function(e){return A(e,(function(e){return w.test(e)?\"xn--\"+j(e):e}))},V={version:\"2.1.0\",ucs2:{decode:x,encode:function(e){return String.fromCodePoint.apply(String,l(e))}},decode:k,encode:j,toASCII:U,toUnicode:D},F={};function B(e){var t=e.charCodeAt(0);return t<16?\"%0\"+t.toString(16).toUpperCase():t<128?\"%\"+t.toString(16).toUpperCase():t<2048?\"%\"+(t>>6|192).toString(16).toUpperCase()+\"%\"+(63&t|128).toString(16).toUpperCase():\"%\"+(t>>12|224).toString(16).toUpperCase()+\"%\"+(t>>6&63|128).toString(16).toUpperCase()+\"%\"+(63&t|128).toString(16).toUpperCase()}function H(e){for(var t=\"\",n=0,a=e.length;n<a;){var r=parseInt(e.substr(n+1,2),16);if(r<128)t+=String.fromCharCode(r),n+=3;else if(r>=194&&r<224){if(a-n>=6){var s=parseInt(e.substr(n+4,2),16);t+=String.fromCharCode((31&r)<<6|63&s)}else t+=e.substr(n,6);n+=6}else if(r>=224){if(a-n>=9){var i=parseInt(e.substr(n+4,2),16),o=parseInt(e.substr(n+7,2),16);t+=String.fromCharCode((15&r)<<12|(63&i)<<6|63&o)}else t+=e.substr(n,9);n+=9}else t+=e.substr(n,3),n+=3}return t}function L(e,t){function n(e){var n=H(e);return n.match(t.UNRESERVED)?n:e}return e.scheme&&(e.scheme=String(e.scheme).replace(t.PCT_ENCODED,n).toLowerCase().replace(t.NOT_SCHEME,\"\")),void 0!==e.userinfo&&(e.userinfo=String(e.userinfo).replace(t.PCT_ENCODED,n).replace(t.NOT_USERINFO,B).replace(t.PCT_ENCODED,r)),void 0!==e.host&&(e.host=String(e.host).replace(t.PCT_ENCODED,n).toLowerCase().replace(t.NOT_HOST,B).replace(t.PCT_ENCODED,r)),void 0!==e.path&&(e.path=String(e.path).replace(t.PCT_ENCODED,n).replace(e.scheme?t.NOT_PATH:t.NOT_PATH_NOSCHEME,B).replace(t.PCT_ENCODED,r)),void 0!==e.query&&(e.query=String(e.query).replace(t.PCT_ENCODED,n).replace(t.NOT_QUERY,B).replace(t.PCT_ENCODED,r)),void 0!==e.fragment&&(e.fragment=String(e.fragment).replace(t.PCT_ENCODED,n).replace(t.NOT_FRAGMENT,B).replace(t.PCT_ENCODED,r)),e}function K(e){return e.replace(/^0*(.*)/,\"$1\")||\"0\"}function z(e,t){var n=e.match(t.IPV4ADDRESS)||[],a=d(n,2)[1];return a?a.split(\".\").map(K).join(\".\"):e}function q(e,t){var n=e.match(t.IPV6ADDRESS)||[],a=d(n,3),r=a[1],s=a[2];if(r){for(var i=r.toLowerCase().split(\"::\").reverse(),o=d(i,2),p=o[0],u=o[1],l=u?u.split(\":\").map(K):[],c=p.split(\":\").map(K),y=t.IPV4ADDRESS.test(c[c.length-1]),m=y?7:8,f=c.length-m,h=Array(m),b=0;b<m;++b)h[b]=l[b]||c[f+b]||\"\";y&&(h[m-1]=z(h[m-1],t));var v=h.reduce((function(e,t,n){if(!t||\"0\"===t){var a=e[e.length-1];a&&a.index+a.length===n?a.length++:e.push({index:n,length:1})}return e}),[]).sort((function(e,t){return t.length-e.length}))[0],g=void 0;if(v&&v.length>1){var _=h.slice(0,v.index),T=h.slice(v.index+v.length);g=_.join(\":\")+\"::\"+T.join(\":\")}else g=h.join(\":\");return s&&(g+=\"%\"+s),g}return e}var G=/^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i,J=void 0===\"\".match(/(){0}/)[1];function W(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n={},a=!1!==t.iri?u:p;\"suffix\"===t.reference&&(e=(t.scheme?t.scheme+\":\":\"\")+\"//\"+e);var r=e.match(G);if(r){J?(n.scheme=r[1],n.userinfo=r[3],n.host=r[4],n.port=parseInt(r[5],10),n.path=r[6]||\"\",n.query=r[7],n.fragment=r[8],isNaN(n.port)&&(n.port=r[5])):(n.scheme=r[1]||void 0,n.userinfo=-1!==e.indexOf(\"@\")?r[3]:void 0,n.host=-1!==e.indexOf(\"//\")?r[4]:void 0,n.port=parseInt(r[5],10),n.path=r[6]||\"\",n.query=-1!==e.indexOf(\"?\")?r[7]:void 0,n.fragment=-1!==e.indexOf(\"#\")?r[8]:void 0,isNaN(n.port)&&(n.port=e.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/)?r[4]:void 0)),n.host&&(n.host=q(z(n.host,a),a)),void 0!==n.scheme||void 0!==n.userinfo||void 0!==n.host||void 0!==n.port||n.path||void 0!==n.query?void 0===n.scheme?n.reference=\"relative\":void 0===n.fragment?n.reference=\"absolute\":n.reference=\"uri\":n.reference=\"same-document\",t.reference&&\"suffix\"!==t.reference&&t.reference!==n.reference&&(n.error=n.error||\"URI is not a \"+t.reference+\" reference.\");var s=F[(t.scheme||n.scheme||\"\").toLowerCase()];if(t.unicodeSupport||s&&s.unicodeSupport)L(n,a);else{if(n.host&&(t.domainHost||s&&s.domainHost))try{n.host=V.toASCII(n.host.replace(a.PCT_ENCODED,H).toLowerCase())}catch(e){n.error=n.error||\"Host's domain name can not be converted to ASCII via punycode: \"+e}L(n,p)}s&&s.parse&&s.parse(n,t)}else n.error=n.error||\"URI can not be parsed.\";return n}function Y(e,t){var n=!1!==t.iri?u:p,a=[];return void 0!==e.userinfo&&(a.push(e.userinfo),a.push(\"@\")),void 0!==e.host&&a.push(q(z(String(e.host),n),n).replace(n.IPV6ADDRESS,(function(e,t,n){return\"[\"+t+(n?\"%25\"+n:\"\")+\"]\"}))),\"number\"!=typeof e.port&&\"string\"!=typeof e.port||(a.push(\":\"),a.push(String(e.port))),a.length?a.join(\"\"):void 0}var Q=/^\\.\\.?\\//,Z=/^\\/\\.(\\/|$)/,X=/^\\/\\.\\.(\\/|$)/,ee=/^\\/?(?:.|\\n)*?(?=\\/|$)/;function te(e){for(var t=[];e.length;)if(e.match(Q))e=e.replace(Q,\"\");else if(e.match(Z))e=e.replace(Z,\"/\");else if(e.match(X))e=e.replace(X,\"/\"),t.pop();else if(\".\"===e||\"..\"===e)e=\"\";else{var n=e.match(ee);if(!n)throw new Error(\"Unexpected dot segment condition\");var a=n[0];e=e.slice(a.length),t.push(a)}return t.join(\"\")}function ne(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.iri?u:p,a=[],r=F[(t.scheme||e.scheme||\"\").toLowerCase()];if(r&&r.serialize&&r.serialize(e,t),e.host)if(n.IPV6ADDRESS.test(e.host));else if(t.domainHost||r&&r.domainHost)try{e.host=t.iri?V.toUnicode(e.host):V.toASCII(e.host.replace(n.PCT_ENCODED,H).toLowerCase())}catch(n){e.error=e.error||\"Host's domain name can not be converted to \"+(t.iri?\"Unicode\":\"ASCII\")+\" via punycode: \"+n}L(e,n),\"suffix\"!==t.reference&&e.scheme&&(a.push(e.scheme),a.push(\":\"));var s=Y(e,t);if(void 0!==s&&(\"suffix\"!==t.reference&&a.push(\"//\"),a.push(s),e.path&&\"/\"!==e.path.charAt(0)&&a.push(\"/\")),void 0!==e.path){var i=e.path;t.absolutePath||r&&r.absolutePath||(i=te(i)),void 0===s&&(i=i.replace(/^\\/\\//,\"/%2F\")),a.push(i)}return void 0!==e.query&&(a.push(\"?\"),a.push(e.query)),void 0!==e.fragment&&(a.push(\"#\"),a.push(e.fragment)),a.join(\"\")}function ae(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a={};return arguments[3]||(e=W(ne(e,n),n),t=W(ne(t,n),n)),!(n=n||{}).tolerant&&t.scheme?(a.scheme=t.scheme,a.userinfo=t.userinfo,a.host=t.host,a.port=t.port,a.path=te(t.path||\"\"),a.query=t.query):(void 0!==t.userinfo||void 0!==t.host||void 0!==t.port?(a.userinfo=t.userinfo,a.host=t.host,a.port=t.port,a.path=te(t.path||\"\"),a.query=t.query):(t.path?(\"/\"===t.path.charAt(0)?a.path=te(t.path):(void 0===e.userinfo&&void 0===e.host&&void 0===e.port||e.path?e.path?a.path=e.path.slice(0,e.path.lastIndexOf(\"/\")+1)+t.path:a.path=t.path:a.path=\"/\"+t.path,a.path=te(a.path)),a.query=t.query):(a.path=e.path,void 0!==t.query?a.query=t.query:a.query=e.query),a.userinfo=e.userinfo,a.host=e.host,a.port=e.port),a.scheme=e.scheme),a.fragment=t.fragment,a}function re(e,t,n){var a=i({scheme:\"null\"},n);return ne(ae(W(e,a),W(t,a),a,!0),a)}function se(e,t){return\"string\"==typeof e?e=ne(W(e,t),t):\"object\"===a(e)&&(e=W(ne(e,t),t)),e}function ie(e,t,n){return\"string\"==typeof e?e=ne(W(e,n),n):\"object\"===a(e)&&(e=ne(e,n)),\"string\"==typeof t?t=ne(W(t,n),n):\"object\"===a(t)&&(t=ne(t,n)),e===t}function oe(e,t){return e&&e.toString().replace(t&&t.iri?u.ESCAPE:p.ESCAPE,B)}function pe(e,t){return e&&e.toString().replace(t&&t.iri?u.PCT_ENCODED:p.PCT_ENCODED,H)}var ue={scheme:\"http\",domainHost:!0,parse:function(e,t){return e.host||(e.error=e.error||\"HTTP URIs must have a host.\"),e},serialize:function(e,t){var n=\"https\"===String(e.scheme).toLowerCase();return e.port!==(n?443:80)&&\"\"!==e.port||(e.port=void 0),e.path||(e.path=\"/\"),e}},de={scheme:\"https\",domainHost:ue.domainHost,parse:ue.parse,serialize:ue.serialize};function le(e){return\"boolean\"==typeof e.secure?e.secure:\"wss\"===String(e.scheme).toLowerCase()}var ce={scheme:\"ws\",domainHost:!0,parse:function(e,t){var n=e;return n.secure=le(n),n.resourceName=(n.path||\"/\")+(n.query?\"?\"+n.query:\"\"),n.path=void 0,n.query=void 0,n},serialize:function(e,t){if(e.port!==(le(e)?443:80)&&\"\"!==e.port||(e.port=void 0),\"boolean\"==typeof e.secure&&(e.scheme=e.secure?\"wss\":\"ws\",e.secure=void 0),e.resourceName){var n=e.resourceName.split(\"?\"),a=d(n,2),r=a[0],s=a[1];e.path=r&&\"/\"!==r?r:void 0,e.query=s,e.resourceName=void 0}return e.fragment=void 0,e}},ye={scheme:\"wss\",domainHost:ce.domainHost,parse:ce.parse,serialize:ce.serialize},me={},fe=\"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\",he=\"[0-9A-Fa-f]\",be=n(n(\"%[EFef]\"+he+\"%\"+he+he+\"%\"+he+he)+\"|\"+n(\"%[89A-Fa-f]\"+he+\"%\"+he+he)+\"|\"+n(\"%\"+he+he)),ve=\"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\",ge=t(\"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\",'[\\\\\"\\\\\\\\]'),_e=\"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\",Te=new RegExp(fe,\"g\"),we=new RegExp(be,\"g\"),$e=new RegExp(t(\"[^]\",ve,\"[\\\\.]\",'[\\\\\"]',ge),\"g\"),Ee=new RegExp(t(\"[^]\",fe,_e),\"g\"),Me=Ee;function Ce(e){var t=H(e);return t.match(Te)?t:e}var Ie={scheme:\"mailto\",parse:function(e,t){var n=e,a=n.to=n.path?n.path.split(\",\"):[];if(n.path=void 0,n.query){for(var r=!1,s={},i=n.query.split(\"&\"),o=0,p=i.length;o<p;++o){var u=i[o].split(\"=\");switch(u[0]){case\"to\":for(var d=u[1].split(\",\"),l=0,c=d.length;l<c;++l)a.push(d[l]);break;case\"subject\":n.subject=pe(u[1],t);break;case\"body\":n.body=pe(u[1],t);break;default:r=!0,s[pe(u[0],t)]=pe(u[1],t)}}r&&(n.headers=s)}n.query=void 0;for(var y=0,m=a.length;y<m;++y){var f=a[y].split(\"@\");if(f[0]=pe(f[0]),t.unicodeSupport)f[1]=pe(f[1],t).toLowerCase();else try{f[1]=V.toASCII(pe(f[1],t).toLowerCase())}catch(e){n.error=n.error||\"Email address's domain name can not be converted to ASCII via punycode: \"+e}a[y]=f.join(\"@\")}return n},serialize:function(e,t){var n=e,a=s(e.to);if(a){for(var i=0,o=a.length;i<o;++i){var p=String(a[i]),u=p.lastIndexOf(\"@\"),d=p.slice(0,u).replace(we,Ce).replace(we,r).replace($e,B),l=p.slice(u+1);try{l=t.iri?V.toUnicode(l):V.toASCII(pe(l,t).toLowerCase())}catch(e){n.error=n.error||\"Email address's domain name can not be converted to \"+(t.iri?\"Unicode\":\"ASCII\")+\" via punycode: \"+e}a[i]=d+\"@\"+l}n.path=a.join(\",\")}var c=e.headers=e.headers||{};e.subject&&(c.subject=e.subject),e.body&&(c.body=e.body);var y=[];for(var m in c)c[m]!==me[m]&&y.push(m.replace(we,Ce).replace(we,r).replace(Ee,B)+\"=\"+c[m].replace(we,Ce).replace(we,r).replace(Me,B));return y.length&&(n.query=y.join(\"&\")),n}},Ne=/^([^\\:]+)\\:(.*)/,Se={scheme:\"urn\",parse:function(e,t){var n=e.path&&e.path.match(Ne),a=e;if(n){var r=t.scheme||a.scheme||\"urn\",s=n[1].toLowerCase(),i=n[2],o=r+\":\"+(t.nid||s),p=F[o];a.nid=s,a.nss=i,a.path=void 0,p&&(a=p.parse(a,t))}else a.error=a.error||\"URN can not be parsed.\";return a},serialize:function(e,t){var n=t.scheme||e.scheme||\"urn\",a=e.nid,r=n+\":\"+(t.nid||a),s=F[r];s&&(e=s.serialize(e,t));var i=e,o=e.nss;return i.path=(a||t.nid)+\":\"+o,i}},Ae=/^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/,xe={scheme:\"urn:uuid\",parse:function(e,t){var n=e;return n.uuid=n.nss,n.nss=void 0,t.tolerant||n.uuid&&n.uuid.match(Ae)||(n.error=n.error||\"UUID is not valid.\"),n},serialize:function(e,t){var n=e;return n.nss=(e.uuid||\"\").toLowerCase(),n}};F[ue.scheme]=ue,F[de.scheme]=de,F[ce.scheme]=ce,F[ye.scheme]=ye,F[Ie.scheme]=Ie,F[Se.scheme]=Se,F[xe.scheme]=xe,e.SCHEMES=F,e.pctEncChar=B,e.pctDecChars=H,e.parse=W,e.removeDotSegments=te,e.serialize=ne,e.resolveComponents=ae,e.resolve=re,e.normalize=se,e.equal=ie,e.escapeComponent=oe,e.unescapeComponent=pe,Object.defineProperty(e,\"__esModule\",{value:!0})}(t)}));r(w);var $=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.getSchemaRefs=t.resolveUrl=t.normalizeId=t._getFullPath=t.getFullPath=t.inlineRef=void 0;const n=new Set([\"type\",\"format\",\"pattern\",\"maxLength\",\"minLength\",\"maxProperties\",\"minProperties\",\"maxItems\",\"minItems\",\"maximum\",\"minimum\",\"uniqueItems\",\"multipleOf\",\"required\",\"enum\",\"const\"]);t.inlineRef=function(e,t=!0){return\"boolean\"==typeof e||(!0===t?!r(e):!!t&&s(e)<=t)};const a=new Set([\"$ref\",\"$recursiveRef\",\"$recursiveAnchor\",\"$dynamicRef\",\"$dynamicAnchor\"]);function r(e){for(const t in e){if(a.has(t))return!0;const n=e[t];if(Array.isArray(n)&&n.some(r))return!0;if(\"object\"==typeof n&&r(n))return!0}return!1}function s(e){let t=0;for(const a in e){if(\"$ref\"===a)return 1/0;if(t++,!n.has(a)&&(\"object\"==typeof e[a]&&M.eachItem(e[a],(e=>t+=s(e))),t===1/0))return 1/0}return t}function i(e=\"\",t){!1!==t&&(e=u(e));return o(w.parse(e))}function o(e){return w.serialize(e).split(\"#\")[0]+\"#\"}t.getFullPath=i,t._getFullPath=o;const p=/#\\/?$/;function u(e){return e?e.replace(p,\"\"):\"\"}t.normalizeId=u,t.resolveUrl=function(e,t){return t=u(t),w.resolve(e,t)};const d=/^[a-z_][-a-z0-9._]*$/i;t.getSchemaRefs=function(e){if(\"boolean\"==typeof e)return{};const t=u(e.$id),n={\"\":t},a=i(t,!1),r={},s=new Set;return T(e,{allKeys:!0},((e,t,i,l)=>{if(void 0===l)return;const c=a+t;let y=n[l];function m(t){if(t=u(y?w.resolve(y,t):t),s.has(t))throw p(t);s.add(t);let n=this.refs[t];return\"string\"==typeof n&&(n=this.refs[n]),\"object\"==typeof n?o(e,n.schema,t):t!==u(c)&&(\"#\"===t[0]?(o(e,r[t],t),r[t]=e):this.refs[t]=c),t}function f(e){if(\"string\"==typeof e){if(!d.test(e))throw new Error(`invalid anchor \"${e}\"`);m.call(this,`#${e}`)}}\"string\"==typeof e.$id&&(y=m.call(this,e.$id)),f.call(this,e.$anchor),f.call(this,e.$dynamicAnchor),n[t]=y})),r;function o(e,t,n){if(void 0!==t&&!_(e,t))throw p(n)}function p(e){return new Error(`reference \"${e}\" resolves to more than one schema`)}}}));r($),$.getSchemaRefs,$.resolveUrl,$.normalizeId,$._getFullPath,$.getFullPath,$.inlineRef;var E=s((function(e,t){function n({gen:e,validateName:t,schema:n,schemaEnv:r,opts:s},i){s.code.es5?e.func(t,l._`${c.default.data}, ${c.default.valCxt}`,r.$async,(()=>{e.code(l._`\"use strict\"; ${a(n,s)}`),function(e,t){e.if(c.default.valCxt,(()=>{e.var(c.default.dataPath,l._`${c.default.valCxt}.${c.default.dataPath}`),e.var(c.default.parentData,l._`${c.default.valCxt}.${c.default.parentData}`),e.var(c.default.parentDataProperty,l._`${c.default.valCxt}.${c.default.parentDataProperty}`),e.var(c.default.rootData,l._`${c.default.valCxt}.${c.default.rootData}`),t.dynamicRef&&e.var(c.default.dynamicAnchors,l._`${c.default.valCxt}.${c.default.dynamicAnchors}`)}),(()=>{e.var(c.default.dataPath,l._`\"\"`),e.var(c.default.parentData,l._`undefined`),e.var(c.default.parentDataProperty,l._`undefined`),e.var(c.default.rootData,c.default.data),t.dynamicRef&&e.var(c.default.dynamicAnchors,l._`{}`)}))}(e,s),e.code(i)})):e.func(t,l._`${c.default.data}, ${function(e){return l._`{${c.default.dataPath}=\"\", ${c.default.parentData}, ${c.default.parentDataProperty}, ${c.default.rootData}=${c.default.data}${e.dynamicRef?l._`, ${c.default.dynamicAnchors}={}`:l.nil}}={}`}(s)}`,r.$async,(()=>e.code(a(n,s)).code(i)))}function a(e,t){return\"object\"==typeof e&&e.$id&&(t.code.source||t.code.process)?l._`/*# sourceURL=${e.$id} */`:l.nil}function r({schema:e,self:t}){if(\"boolean\"==typeof e)return!e;for(const n in e)if(t.RULES.all[n])return!0;return!1}function s(e){return\"boolean\"!=typeof e.schema}function i(e){M.checkUnknownRules(e),function(e){const{schema:t,errSchemaPath:n,opts:a,self:r}=e;t.$ref&&a.ignoreKeywordsWithRef&&M.schemaHasRulesButRef(t,r.RULES)&&r.logger.warn(`$ref: keywords ignored in schema at path \"${n}\"`)}(e)}function o(e,t){if(e.opts.jtd)return g.schemaKeywords(e,[],!1,t);const n=C.getSchemaTypes(e.schema),a=C.coerceAndCheckDataType(e,n);g.schemaKeywords(e,n,!a,t)}function p({gen:e,schemaEnv:t,schema:n,errSchemaPath:a,opts:r}){const s=n.$comment;if(!0===r.$comment)e.code(l._`${c.default.self}.logger.log(${s})`);else if(\"function\"==typeof r.$comment){const n=l.str`${a}/$comment`,r=e.scopeValue(\"root\",{ref:t.root});e.code(l._`${c.default.self}.opts.$comment(${s}, ${n}, ${r}.schema)`)}}function u(e,t,n=e.opts.strict){if(n){if(t=`strict mode: ${t}`,!0===n)throw new Error(t);e.self.logger.warn(t)}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.checkStrictMode=t.schemaCxtHasRules=t.subschemaCode=t.validateFunctionCode=void 0,t.validateFunctionCode=function(e){s(e)&&(i(e),r(e))?function(e){const{schema:t,opts:a,gen:r}=e;n(e,(()=>{a.$comment&&t.$comment&&p(e),function(e){const{schema:t,opts:n}=e;void 0!==t.default&&n.useDefaults&&n.strict&&u(e,\"default is ignored in the schema root\")}(e),r.let(c.default.vErrors,null),r.let(c.default.errors,0),a.unevaluated&&function(e){const{gen:t,validateName:n}=e;e.evaluated=t.const(\"evaluated\",l._`${n}.evaluated`),t.if(l._`${e.evaluated}.dynamicProps`,(()=>t.assign(l._`${e.evaluated}.props`,l._`undefined`))),t.if(l._`${e.evaluated}.dynamicItems`,(()=>t.assign(l._`${e.evaluated}.items`,l._`undefined`)))}(e),o(e),function(e){const{gen:t,schemaEnv:n,validateName:a,ValidationError:r,opts:s}=e;n.$async?t.if(l._`${c.default.errors} === 0`,(()=>t.return(c.default.data)),(()=>t.throw(l._`new ${r}(${c.default.vErrors})`))):(t.assign(l._`${a}.errors`,c.default.vErrors),s.unevaluated&&function({gen:e,evaluated:t,props:n,items:a}){n instanceof l.Name&&e.assign(l._`${t}.props`,n);a instanceof l.Name&&e.assign(l._`${t}.items`,a)}(e),t.return(l._`${c.default.errors} === 0`))}(e)}))}(e):n(e,(()=>m.topBoolOrEmptySchema(e)))},t.subschemaCode=function(e,t){s(e)&&(i(e),r(e))?function(e,t){const{schema:n,gen:a,opts:r}=e;r.$comment&&n.$comment&&p(e);(function(e){e.schema.$id&&(e.baseId=$.resolveUrl(e.baseId,e.schema.$id))})(e),function(e){if(e.schema.$async&&!e.schemaEnv.$async)throw new Error(\"async schema in sync schema\")}(e);const s=a.const(\"_errs\",c.default.errors);o(e,s),a.var(t,l._`${s} === ${c.default.errors}`)}(e,t):m.boolOrEmptySchema(e,t)},t.schemaCxtHasRules=r,t.checkStrictMode=u}));r(E),E.checkStrictMode,E.schemaCxtHasRules,E.subschemaCode,E.validateFunctionCode;var M=s((function(e,t){function n(e,t=e.schema){const{opts:n,self:a}=e;if(!n.strict)return;if(\"boolean\"==typeof t)return;const r=a.RULES.keywords;for(const n in t)r[n]||E.checkStrictMode(e,`unknown keyword: \"${n}\"`)}function a(e,t){if(\"boolean\"==typeof e)return!e;for(const n in e)if(t[n])return!0;return!1}function r(e){return\"number\"==typeof e?`${e}`:e.replace(/~/g,\"~0\").replace(/\\//g,\"~1\")}function s(e){return e.replace(/~1/g,\"/\").replace(/~0/g,\"~\")}function i({mergeNames:e,mergeToName:t,mergeValues:n,resultToName:a}){return(r,s,i,o)=>{const p=void 0===i?s:i instanceof l.Name?(s instanceof l.Name?e(r,s,i):t(r,s,i),i):s instanceof l.Name?(t(r,i,s),s):n(s,i);return o!==l.Name||p instanceof l.Name?p:a(r,p)}}function o(e,t){if(!0===t)return e.var(\"props\",!0);const n=e.var(\"props\",l._`{}`);return void 0!==t&&p(e,n,t),n}function p(e,t,n){Object.keys(n).forEach((n=>e.assign(l._`${t}${l.getProperty(n)}`,!0)))}Object.defineProperty(t,\"__esModule\",{value:!0}),t.func=t.setEvaluated=t.evaluatedPropsToName=t.mergeEvaluated=t.eachItem=t.unescapeJsonPointer=t.escapeJsonPointer=t.escapeFragment=t.unescapeFragment=t.schemaRefOrVal=t.schemaHasRulesButRef=t.schemaHasRules=t.checkUnknownRules=t.alwaysValidSchema=t.toHash=void 0,t.toHash=function(e){const t={};for(const n of e)t[n]=!0;return t},t.alwaysValidSchema=function(e,t){return\"boolean\"==typeof t?t:0===Object.keys(t).length||(n(e,t),!a(t,e.self.RULES.all))},t.checkUnknownRules=n,t.schemaHasRules=a,t.schemaHasRulesButRef=function(e,t){if(\"boolean\"==typeof e)return!e;for(const n in e)if(\"$ref\"!==n&&t.all[n])return!0;return!1},t.schemaRefOrVal=function({topSchemaRef:e,schemaPath:t},n,a,r){if(!r){if(\"number\"==typeof n||\"boolean\"==typeof n)return n;if(\"string\"==typeof n)return l._`${n}`}return l._`${e}${t}${l.getProperty(a)}`},t.unescapeFragment=function(e){return s(decodeURIComponent(e))},t.escapeFragment=function(e){return encodeURIComponent(r(e))},t.escapeJsonPointer=r,t.unescapeJsonPointer=s,t.eachItem=function(e,t){if(Array.isArray(e))for(const n of e)t(n);else t(e)},t.mergeEvaluated={props:i({mergeNames:(e,t,n)=>e.if(l._`${n} !== true && ${t} !== undefined`,(()=>{e.if(l._`${t} === true`,(()=>e.assign(n,!0)),(()=>e.assign(n,l._`${n} || {}`).code(l._`Object.assign(${n}, ${t})`)))})),mergeToName:(e,t,n)=>e.if(l._`${n} !== true`,(()=>{!0===t?e.assign(n,!0):(e.assign(n,l._`${n} || {}`),p(e,n,t))})),mergeValues:(e,t)=>!0===e||{...e,...t},resultToName:o}),items:i({mergeNames:(e,t,n)=>e.if(l._`${n} !== true && ${t} !== undefined`,(()=>e.assign(n,l._`${t} === true ? true : ${n} > ${t} ? ${n} : ${t}`))),mergeToName:(e,t,n)=>e.if(l._`${n} !== true`,(()=>e.assign(n,!0===t||l._`${n} > ${t} ? ${n} : ${t}`))),mergeValues:(e,t)=>!0===e||Math.max(e,t),resultToName:(e,t)=>e.var(\"items\",t)})},t.evaluatedPropsToName=o,t.setEvaluated=p,t.func=function(e,t){return e.scopeValue(\"func\",{ref:t,code:t.code})}}));r(M),M.func,M.setEvaluated,M.evaluatedPropsToName,M.mergeEvaluated,M.eachItem,M.unescapeJsonPointer,M.escapeJsonPointer,M.escapeFragment,M.unescapeFragment,M.schemaRefOrVal,M.schemaHasRulesButRef,M.schemaHasRules,M.checkUnknownRules,M.alwaysValidSchema,M.toHash;var C=s((function(e,t){var n;function a(e){const t=Array.isArray(e)?e:e?[e]:[];if(t.every(o.isJSONType))return t;throw new Error(\"type must be JSONType or JSONType[]: \"+t.join(\",\"))}Object.defineProperty(t,\"__esModule\",{value:!0}),t.reportTypeError=t.checkDataTypes=t.checkDataType=t.coerceAndCheckDataType=t.getJSONTypes=t.getSchemaTypes=t.DataType=void 0,function(e){e[e.Correct=0]=\"Correct\",e[e.Wrong=1]=\"Wrong\"}(n=t.DataType||(t.DataType={})),t.getSchemaTypes=function(e){const t=a(e.type);if(t.includes(\"null\")){if(!1===e.nullable)throw new Error(\"type: null contradicts nullable: false\")}else{if(!t.length&&void 0!==e.nullable)throw new Error('\"nullable\" cannot be used without \"type\"');!0===e.nullable&&t.push(\"null\")}return t},t.getJSONTypes=a,t.coerceAndCheckDataType=function(e,t){const{gen:a,data:s,opts:o}=e,u=function(e,t){return t?e.filter((e=>r.has(e)||\"array\"===t&&\"array\"===e)):[]}(t,o.coerceTypes),c=t.length>0&&!(0===u.length&&1===t.length&&p.schemaHasRulesForType(e,t[0]));if(c){const p=i(t,s,o.strict,n.Wrong);a.if(p,(()=>{u.length?function(e,t,n){const{gen:a,data:s,opts:o}=e,p=a.let(\"dataType\",l._`typeof ${s}`),u=a.let(\"coerced\",l._`undefined`);\"array\"===o.coerceTypes&&a.if(l._`${p} == 'object' && Array.isArray(${s}) && ${s}.length == 1`,(()=>a.assign(s,l._`${s}[0]`).assign(p,l._`typeof ${s}`).if(i(t,s,o.strict),(()=>a.assign(u,s)))));a.if(l._`${u} !== undefined`);for(const e of n)(r.has(e)||\"array\"===e&&\"array\"===o.coerceTypes)&&c(e);function c(e){switch(e){case\"string\":return void a.elseIf(l._`${p} == \"number\" || ${p} == \"boolean\"`).assign(u,l._`\"\" + ${s}`).elseIf(l._`${s} === null`).assign(u,l._`\"\"`);case\"number\":return void a.elseIf(l._`${p} == \"boolean\" || ${s} === null\n              || (${p} == \"string\" && ${s} && ${s} == +${s})`).assign(u,l._`+${s}`);case\"integer\":return void a.elseIf(l._`${p} === \"boolean\" || ${s} === null\n              || (${p} === \"string\" && ${s} && ${s} == +${s} && !(${s} % 1))`).assign(u,l._`+${s}`);case\"boolean\":return void a.elseIf(l._`${s} === \"false\" || ${s} === 0 || ${s} === null`).assign(u,!1).elseIf(l._`${s} === \"true\" || ${s} === 1`).assign(u,!0);case\"null\":return a.elseIf(l._`${s} === \"\" || ${s} === 0 || ${s} === false`),void a.assign(u,null);case\"array\":a.elseIf(l._`${p} === \"string\" || ${p} === \"number\"\n              || ${p} === \"boolean\" || ${s} === null`).assign(u,l._`[${s}]`)}}a.else(),d(e),a.endIf(),a.if(l._`${u} !== undefined`,(()=>{a.assign(s,u),function({gen:e,parentData:t,parentDataProperty:n},a){e.if(l._`${t} !== undefined`,(()=>e.assign(l._`${t}[${n}]`,a)))}(e,u)}))}(e,t,u):d(e)}))}return c};const r=new Set([\"string\",\"number\",\"integer\",\"boolean\",\"null\"]);function s(e,t,a,r=n.Correct){const s=r===n.Correct?l.operators.EQ:l.operators.NEQ;let i;switch(e){case\"null\":return l._`${t} ${s} null`;case\"array\":i=l._`Array.isArray(${t})`;break;case\"object\":i=l._`${t} && typeof ${t} == \"object\" && !Array.isArray(${t})`;break;case\"integer\":i=o(l._`!(${t} % 1) && !isNaN(${t})`);break;case\"number\":i=o();break;default:return l._`typeof ${t} ${s} ${e}`}return r===n.Correct?i:l.not(i);function o(e=l.nil){return l.and(l._`typeof ${t} == \"number\"`,e,a?l._`isFinite(${t})`:l.nil)}}function i(e,t,n,a){if(1===e.length)return s(e[0],t,n,a);let r;const i=M.toHash(e);if(i.array&&i.object){const e=l._`typeof ${t} != \"object\"`;r=i.null?e:l._`!${t} || ${e}`,delete i.null,delete i.array,delete i.object}else r=l.nil;i.number&&delete i.integer;for(const e in i)r=l.and(r,s(e,t,n,a));return r}t.checkDataType=s,t.checkDataTypes=i;const u={message:({schema:e})=>l.str`should be ${e}`,params:({schema:e,schemaValue:t})=>\"string\"==typeof e?l._`{type: ${e}}`:l._`{type: ${t}}`};function d(e){const t=function(e){const{gen:t,data:n,schema:a}=e,r=M.schemaRefOrVal(e,a,\"type\");return{gen:t,keyword:\"type\",data:n,schema:a.type,schemaCode:r,schemaValue:r,parentSchema:a,params:{},it:e}}(e);y.reportError(t,u)}t.reportTypeError=d}));r(C),C.reportTypeError,C.checkDataTypes,C.checkDataType,C.coerceAndCheckDataType,C.getJSONTypes,C.getSchemaTypes,C.DataType;var I=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.getData=void 0;t.default=class{constructor(e,t,n){if(function({schema:e,opts:t,self:n},a,r){if(Array.isArray(a.keyword)?!a.keyword.includes(r):a.keyword!==r)throw new Error(\"ajv implementation error\");const s=a.dependencies;if(null==s?void 0:s.some((t=>!Object.prototype.hasOwnProperty.call(e,t))))throw new Error(`parent schema must have dependencies of ${r}: ${s.join(\",\")}`);if(a.validateSchema){if(!a.validateSchema(e[r])){const e=\"keyword value is invalid: \"+n.errorsText(a.validateSchema.errors);if(\"log\"!==t.validateSchema)throw new Error(e);n.logger.error(e)}}}(e,t,n),this.gen=e.gen,this.allErrors=e.allErrors,this.keyword=n,this.data=e.data,this.schema=e.schema[n],this.$data=t.$data&&e.opts.$data&&this.schema&&this.schema.$data,this.schemaValue=M.schemaRefOrVal(e,this.schema,n,this.$data),this.schemaType=t.schemaType,this.parentSchema=e.schema,this.params={},this.it=e,this.def=t,this.$data)this.schemaCode=e.gen.const(\"vSchema\",r(this.$data,e));else if(this.schemaCode=this.schemaValue,!function(e,t,n=!1){return!t.length||t.some((t=>\"array\"===t?Array.isArray(e):\"object\"===t?e&&\"object\"==typeof e&&!Array.isArray(e):typeof e==t||n&&void 0===e))}(this.schema,t.schemaType,t.allowUndefined))throw new Error(`${n} value must be ${JSON.stringify(t.schemaType)}`);(\"code\"in t?t.trackErrors:!1!==t.errors)&&(this.errsCount=e.gen.const(\"_errs\",c.default.errors))}result(e,t,n){this.gen.if(l.not(e)),n?n():this.error(),t?(this.gen.else(),t(),this.allErrors&&this.gen.endIf()):this.allErrors?this.gen.endIf():this.gen.else()}pass(e,t){this.result(e,void 0,t)}fail(e){if(void 0===e)return this.error(),void(this.allErrors||this.gen.if(!1));this.gen.if(e),this.error(),this.allErrors?this.gen.endIf():this.gen.else()}fail$data(e){if(!this.$data)return this.fail(e);const{schemaCode:t}=this;this.fail(l._`${t} !== undefined && (${l.or(this.invalid$data(),e)})`)}error(e){(e?y.reportExtraError:y.reportError)(this,this.def.error)}$dataError(){y.reportError(this,this.def.$dataError||y.keyword$DataError)}reset(){if(void 0===this.errsCount)throw new Error('add \"trackErrors\" to keyword definition');y.resetErrorsCount(this.gen,this.errsCount)}ok(e){this.allErrors||this.gen.if(e)}setParams(e,t){t?Object.assign(this.params,e):this.params=e}block$data(e,t,n=l.nil){this.gen.block((()=>{this.check$data(e,n),t()}))}check$data(e=l.nil,t=l.nil){if(!this.$data)return;const{gen:n,schemaCode:a,schemaType:r,def:s}=this;n.if(l.or(l._`${a} === undefined`,t)),e!==l.nil&&n.assign(e,!0),(r.length||s.validateSchema)&&(n.elseIf(this.invalid$data()),this.$dataError(),e!==l.nil&&n.assign(e,!1)),n.else()}invalid$data(){const{gen:e,schemaCode:t,schemaType:n,def:a,it:r}=this;return l.or(function(){if(n.length){if(!(t instanceof l.Name))throw new Error(\"ajv implementation error\");const e=Array.isArray(n)?n:[n];return l._`${C.checkDataTypes(e,t,r.opts.strict,C.DataType.Wrong)}`}return l.nil}(),function(){if(a.validateSchema){const n=e.scopeValue(\"validate$data\",{ref:a.validateSchema});return l._`!${n}(${t})`}return l.nil}())}subschema(e,t){return h.applySubschema(this.it,e,t)}mergeEvaluated(e,t){const{it:n,gen:a}=this;n.opts.unevaluated&&(!0!==n.props&&void 0!==e.props&&(n.props=M.mergeEvaluated.props(a,e.props,n.props,t)),!0!==n.items&&void 0!==e.items&&(n.items=M.mergeEvaluated.items(a,e.items,n.items,t)))}mergeValidEvaluated(e,t){const{it:n,gen:a}=this;if(n.opts.unevaluated&&(!0!==n.props||!0!==n.items))return a.if(t,(()=>this.mergeEvaluated(e,l.Name))),!0}};const n=/^\\/(?:[^~]|~0|~1)*$/,a=/^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;function r(e,{dataLevel:t,dataNames:r,dataPathArr:s}){let i,o;if(\"\"===e)return c.default.rootData;if(\"/\"===e[0]){if(!n.test(e))throw new Error(`Invalid JSON-pointer: ${e}`);i=e,o=c.default.rootData}else{const n=a.exec(e);if(!n)throw new Error(`Invalid JSON-pointer: ${e}`);const p=+n[1];if(i=n[2],\"#\"===i){if(p>=t)throw new Error(d(\"property/index\",p));return s[t-p]}if(p>t)throw new Error(d(\"data\",p));if(o=r[t-p],!i)return o}let p=o;const u=i.split(\"/\");for(const e of u)e&&(o=l._`${o}${l.getProperty(M.unescapeJsonPointer(e))}`,p=l._`${p} && ${o}`);return p;function d(e,n){return`Cannot access ${e} ${n} levels up, current level is ${t}`}}t.getData=r}));r(I),I.getData;var N=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.MissingRefError=t.ValidationError=void 0;class n extends Error{constructor(e){super(\"validation failed\"),this.errors=e,this.ajv=this.validation=!0}}t.ValidationError=n;class a extends Error{constructor(e,t,n){super(n||`can't resolve reference ${t} from id ${e}`),this.missingRef=$.resolveUrl(e,t),this.missingSchema=$.normalizeId($.getFullPath(this.missingRef))}}t.MissingRefError=a,e.exports={ValidationError:n,MissingRefError:a}}));r(N),N.MissingRefError,N.ValidationError;var S=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.resolveSchema=t.getCompilingSchema=t.resolveRef=t.compileSchema=t.SchemaEnv=void 0;class n{constructor(e){var t;let n;this.refs={},this.dynamicAnchors={},\"object\"==typeof e.schema&&(n=e.schema),this.schema=e.schema,this.root=e.root||this,this.baseId=null!==(t=e.baseId)&&void 0!==t?t:$.normalizeId(null==n?void 0:n.$id),this.localRefs=e.localRefs,this.meta=e.meta,this.$async=null==n?void 0:n.$async,this.refs={}}}function a(e){const t=s.call(this,e);if(t)return t;const n=$.getFullPath(e.root.baseId),{es5:a,lines:r}=this.opts.code,{ownProperties:i}=this.opts,o=new l.CodeGen(this.scope,{es5:a,lines:r,ownProperties:i});let p;e.$async&&(p=o.scopeValue(\"Error\",{ref:N.ValidationError,code:l._`require(\"ajv/dist/compile/error_classes\").ValidationError`}));const u=o.scopeName(\"validate\");e.validateName=u;const d={gen:o,allErrors:this.opts.allErrors,data:c.default.data,parentData:c.default.parentData,parentDataProperty:c.default.parentDataProperty,dataNames:[c.default.data],dataPathArr:[l.nil],dataLevel:0,dataTypes:[],definedProperties:new Set,topSchemaRef:o.scopeValue(\"schema\",!0===this.opts.code.source?{ref:e.schema,code:l.stringify(e.schema)}:{ref:e.schema}),validateName:u,ValidationError:p,schema:e.schema,schemaEnv:e,rootId:n,baseId:e.baseId||n,schemaPath:l.nil,errSchemaPath:this.opts.jtd?\"\":\"#\",errorPath:l._`\"\"`,opts:this.opts,self:this};let y;try{this._compilations.add(e),E.validateFunctionCode(d),o.optimize(this.opts.code.optimize);const t=o.toString();y=`${o.scopeRefs(c.default.scope)}return ${t}`,this.opts.code.process&&(y=this.opts.code.process(y,e));const n=new Function(`${c.default.self}`,`${c.default.scope}`,y)(this,this.scope.get());if(this.scope.value(u,{ref:n}),n.errors=null,n.schema=e.schema,n.schemaEnv=e,e.$async&&(n.$async=!0),!0===this.opts.code.source&&(n.source={validateName:u,validateCode:t,scopeValues:o._values}),this.opts.unevaluated){const{props:e,items:t}=d;n.evaluated={props:e instanceof l.Name?void 0:e,items:t instanceof l.Name?void 0:t,dynamicProps:e instanceof l.Name,dynamicItems:t instanceof l.Name},n.source&&(n.source.evaluated=l.stringify(n.evaluated))}return e.validate=n,e}catch(t){throw delete e.validate,delete e.validateName,y&&this.logger.error(\"Error compiling schema, function code:\",y),t}finally{this._compilations.delete(e)}}function r(e){return $.inlineRef(e.schema,this.opts.inlineRefs)?e.schema:e.validate?e:a.call(this,e)}function s(e){for(const a of this._compilations)if(n=e,(t=a).schema===n.schema&&t.root===n.root&&t.baseId===n.baseId)return a;var t,n}function i(e,t){let n;for(;\"string\"==typeof(n=this.refs[t]);)t=n;return n||this.schemas[t]||o.call(this,e,t)}function o(e,t){const r=w.parse(t),s=$._getFullPath(r);let i=$.getFullPath(e.baseId);if(Object.keys(e.schema).length>0&&s===i)return u.call(this,r,e);const p=$.normalizeId(s),d=this.refs[p]||this.schemas[p];if(\"string\"==typeof d){const t=o.call(this,e,d);if(\"object\"!=typeof(null==t?void 0:t.schema))return;return u.call(this,r,t)}if(\"object\"==typeof(null==d?void 0:d.schema)){if(d.validate||a.call(this,d),p===$.normalizeId(t)){const{schema:t}=d;return t.$id&&(i=$.resolveUrl(i,t.$id)),new n({schema:t,root:e,baseId:i})}return u.call(this,r,d)}}t.SchemaEnv=n,t.compileSchema=a,t.resolveRef=function(e,t,a){var s;a=$.resolveUrl(t,a);const o=e.refs[a];if(o)return o;let p=i.call(this,e,a);if(void 0===p){const r=null===(s=e.localRefs)||void 0===s?void 0:s[a];r&&(p=new n({schema:r,root:e,baseId:t}))}return void 0!==p?e.refs[a]=r.call(this,p):void 0},t.getCompilingSchema=s,t.resolveSchema=o;const p=new Set([\"properties\",\"patternProperties\",\"enum\",\"dependencies\",\"definitions\"]);function u(e,{baseId:t,schema:a,root:r}){var s;if(\"/\"!==(null===(s=e.fragment)||void 0===s?void 0:s[0]))return;for(const n of e.fragment.slice(1).split(\"/\")){if(\"boolean\"==typeof a)return;if(void 0===(a=a[M.unescapeFragment(n)]))return;!p.has(n)&&\"object\"==typeof a&&a.$id&&(t=$.resolveUrl(t,a.$id))}let i;if(\"boolean\"!=typeof a&&a.$ref&&!M.schemaHasRulesButRef(a,this.RULES)){const e=$.resolveUrl(t,a.$ref);i=o.call(this,r,e)}return i=i||new n({schema:a,root:r,baseId:t}),i.schema!==i.root.schema?i:void 0}}));r(S),S.resolveSchema,S.getCompilingSchema,S.resolveRef,S.compileSchema,S.SchemaEnv;var A=\"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",x=\"Meta-schema for $data reference (JSON AnySchema extension proposal)\",P=\"object\",O=[\"$data\"],R={$data:{type:\"string\",anyOf:[{format:\"relative-json-pointer\"},{format:\"json-pointer\"}]}},k={$id:A,description:x,type:P,required:O,properties:R,additionalProperties:false},j=i(Object.freeze({__proto__:null,$id:A,description:x,type:P,required:O,properties:R,additionalProperties:false,default:k})),D=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.CodeGen=t.Name=t.nil=t.stringify=t.str=t._=t.KeywordCxt=void 0,t.KeywordCxt=I.default,Object.defineProperty(t,\"_\",{enumerable:!0,get:function(){return l._}}),Object.defineProperty(t,\"str\",{enumerable:!0,get:function(){return l.str}}),Object.defineProperty(t,\"stringify\",{enumerable:!0,get:function(){return l.stringify}}),Object.defineProperty(t,\"nil\",{enumerable:!0,get:function(){return l.nil}}),Object.defineProperty(t,\"Name\",{enumerable:!0,get:function(){return l.Name}}),Object.defineProperty(t,\"CodeGen\",{enumerable:!0,get:function(){return l.CodeGen}});const n=l,a=[\"removeAdditional\",\"useDefaults\",\"coerceTypes\"],r=new Set([\"validate\",\"serialize\",\"parse\",\"wrapper\",\"root\",\"schema\",\"keyword\",\"pattern\",\"formats\",\"validate$data\",\"func\",\"obj\",\"Error\"]),s={errorDataPath:\"\",format:\"`validateFormats: false` can be used instead.\",nullable:'\"nullable\" keyword is supported by default.',jsonPointers:\"Deprecated jsPropertySyntax can be used instead.\",extendRefs:\"Deprecated ignoreKeywordsWithRef can be used instead.\",missingRefs:\"Pass empty schema with $id that should be ignored to ajv.addSchema.\",processCode:\"Use option `code: {process: (code, schemaEnv: object) => string}`\",sourceCode:\"Use option `code: {source: true}`\",schemaId:\"JSON Schema draft-04 is not supported in Ajv v7.\",strictDefaults:\"It is default now, see option `strict`.\",strictKeywords:\"It is default now, see option `strict`.\",strictNumbers:\"It is default now, see option `strict`.\",uniqueItems:'\"uniqueItems\" keyword is always validated.',unknownFormats:\"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",cache:\"Map is used as cache, schema object as key.\",serialize:\"Map is used as cache, schema object as key.\"},i={ignoreKeywordsWithRef:\"\",jsPropertySyntax:\"\",unicode:'\"minLength\"/\"maxLength\" account for unicode characters by default.'};function p(e){var t,n,a,r,s,i,o,p,u,d,l,c;const y=null===(t=e.strict)||void 0===t||t,m=!!y&&\"log\",f=null===(n=e.code)||void 0===n?void 0:n.optimize,h=!0===f||void 0===f?1:f||0;return{strict:y,strictTypes:null!==(a=e.strictTypes)&&void 0!==a?a:m,strictTuples:null!==(r=e.strictTuples)&&void 0!==r?r:m,code:e.code?{...e.code,optimize:h}:{optimize:h},loopRequired:null!==(s=e.loopRequired)&&void 0!==s?s:1/0,loopEnum:null!==(i=e.loopEnum)&&void 0!==i?i:1/0,meta:null===(o=e.meta)||void 0===o||o,messages:null===(p=e.messages)||void 0===p||p,inlineRefs:null===(u=e.inlineRefs)||void 0===u||u,addUsedSchema:null===(d=e.addUsedSchema)||void 0===d||d,validateSchema:null===(l=e.validateSchema)||void 0===l||l,validateFormats:null===(c=e.validateFormats)||void 0===c||c}}class u{constructor(e={}){this.schemas={},this.refs={},this.formats={},this._compilations=new Set,this._loading={},this._cache=new Map,e=this.opts={...e,...p(e)};const{es5:t,lines:a}=this.opts.code;this.scope=new n.ValueScope({scope:{},prefixes:r,es5:t,lines:a}),this.logger=function(e){if(!1===e)return b;if(void 0===e)return console;if(e.log&&e.warn&&e.error)return e;throw new Error(\"logger must implement log, warn and error methods\")}(e.logger);const u=e.validateFormats;e.validateFormats=!1,this.RULES=o.getRules(),d.call(this,s,e,\"NOT SUPPORTED\"),d.call(this,i,e,\"DEPRECATED\",\"warn\"),this._metaOpts=h.call(this),e.formats&&m.call(this),this._addVocabularies(),this._addDefaultMetaSchema(),e.keywords&&f.call(this,e.keywords),\"object\"==typeof e.meta&&this.addMetaSchema(e.meta),y.call(this),e.validateFormats=u}_addVocabularies(){this.addKeyword(\"$async\")}_addDefaultMetaSchema(){const{$data:e,meta:t}=this.opts;t&&e&&this.addMetaSchema(j,j.$id,!1)}defaultMeta(){const{meta:e}=this.opts;return this.opts.defaultMeta=\"object\"==typeof e?e.$id||e:void 0}validate(e,t){let n;if(\"string\"==typeof e){if(n=this.getSchema(e),!n)throw new Error(`no schema with key or ref \"${e}\"`)}else n=this.compile(e);const a=n(t);return\"$async\"in n||(this.errors=n.errors),a}compile(e,t){const n=this._addSchema(e,t);return n.validate||this._compileSchemaEnv(n)}compileAsync(e,t){if(\"function\"!=typeof this.opts.loadSchema)throw new Error(\"options.loadSchema should be a function\");const{loadSchema:n}=this.opts;return a.call(this,e,t);async function a(e,t){await r.call(this,e.$schema);const n=this._addSchema(e,t);return n.validate||s.call(this,n)}async function r(e){e&&!this.getSchema(e)&&await a.call(this,{$ref:e},!0)}async function s(e){try{return this._compileSchemaEnv(e)}catch(t){if(!(t instanceof N.MissingRefError))throw t;return i.call(this,t),await o.call(this,t.missingSchema),s.call(this,e)}}function i({missingSchema:e,missingRef:t}){if(this.refs[e])throw new Error(`AnySchema ${e} is loaded but ${t} cannot be resolved`)}async function o(e){const n=await p.call(this,e);this.refs[e]||await r.call(this,n.$schema),this.refs[e]||this.addSchema(n,e,t)}async function p(e){const t=this._loading[e];if(t)return t;try{return await(this._loading[e]=n(e))}finally{delete this._loading[e]}}}addSchema(e,t,n,a=this.opts.validateSchema){if(Array.isArray(e)){for(const t of e)this.addSchema(t,void 0,n,a);return this}let r;if(\"object\"==typeof e&&(r=e.$id,void 0!==r&&\"string\"!=typeof r))throw new Error(\"schema id must be string\");return t=$.normalizeId(t||r),this._checkUnique(t),this.schemas[t]=this._addSchema(e,n,a,!0),this}addMetaSchema(e,t,n=this.opts.validateSchema){return this.addSchema(e,t,!0,n),this}validateSchema(e,t){if(\"boolean\"==typeof e)return!0;let n;if(n=e.$schema,void 0!==n&&\"string\"!=typeof n)throw new Error(\"$schema must be a string\");if(n=n||this.opts.defaultMeta||this.defaultMeta(),!n)return this.logger.warn(\"meta-schema not available\"),this.errors=null,!0;const a=this.validate(n,e);if(!a&&t){const e=\"schema is invalid: \"+this.errorsText();if(\"log\"!==this.opts.validateSchema)throw new Error(e);this.logger.error(e)}return a}getSchema(e){let t;for(;\"string\"==typeof(t=c.call(this,e));)e=t;if(void 0===t){const n=new S.SchemaEnv({schema:{}});if(t=S.resolveSchema.call(this,n,e),!t)return;this.refs[e]=t}return t.validate||this._compileSchemaEnv(t)}removeSchema(e){if(e instanceof RegExp)return this._removeAllSchemas(this.schemas,e),this._removeAllSchemas(this.refs,e),this;switch(typeof e){case\"undefined\":return this._removeAllSchemas(this.schemas),this._removeAllSchemas(this.refs),this._cache.clear(),this;case\"string\":{const t=c.call(this,e);return\"object\"==typeof t&&this._cache.delete(t.schema),delete this.schemas[e],delete this.refs[e],this}case\"object\":{const t=e;this._cache.delete(t);let n=e.$id;return n&&(n=$.normalizeId(n),delete this.schemas[n],delete this.refs[n]),this}default:throw new Error(\"ajv.removeSchema: invalid parameter\")}}addVocabulary(e){for(const t of e)this.addKeyword(t);return this}addKeyword(e,t){let n;if(\"string\"==typeof e)n=e,\"object\"==typeof t&&(this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\"),t.keyword=n);else{if(\"object\"!=typeof e||void 0!==t)throw new Error(\"invalid addKeywords parameters\");if(n=(t=e).keyword,Array.isArray(n)&&!n.length)throw new Error(\"addKeywords: keyword must be string or non-empty array\")}if(g.call(this,n,t),!t)return M.eachItem(n,(e=>_.call(this,e))),this;w.call(this,t);const a={...t,type:C.getJSONTypes(t.type),schemaType:C.getJSONTypes(t.schemaType)};return M.eachItem(n,0===a.type.length?e=>_.call(this,e,a):e=>a.type.forEach((t=>_.call(this,e,a,t)))),this}getKeyword(e){const t=this.RULES.all[e];return\"object\"==typeof t?t.definition:!!t}removeKeyword(e){const{RULES:t}=this;delete t.keywords[e],delete t.all[e];for(const n of t.rules){const t=n.rules.findIndex((t=>t.keyword===e));t>=0&&n.rules.splice(t,1)}return this}addFormat(e,t){return\"string\"==typeof t&&(t=new RegExp(t)),this.formats[e]=t,this}errorsText(e=this.errors,{separator:t=\", \",dataVar:n=\"data\"}={}){return e&&0!==e.length?e.map((e=>`${n}${e.dataPath} ${e.message}`)).reduce(((e,n)=>e+t+n)):\"No errors\"}$dataMetaSchema(e,t){const n=this.RULES.all;e=JSON.parse(JSON.stringify(e));for(const a of t){const t=a.split(\"/\").slice(1);let r=e;for(const e of t)r=r[e];for(const e in n){const t=n[e];if(\"object\"!=typeof t)continue;const{$data:a}=t.definition,s=r[e];a&&s&&(r[e]=A(s))}}return e}_removeAllSchemas(e,t){for(const n in e){const a=e[n];t&&!t.test(n)||(\"string\"==typeof a?delete e[n]:a&&!a.meta&&(this._cache.delete(a.schema),delete e[n]))}}_addSchema(e,t,n=this.opts.validateSchema,a=this.opts.addUsedSchema){if(\"object\"!=typeof e){if(this.opts.jtd)throw new Error(\"schema must be object\");if(\"boolean\"!=typeof e)throw new Error(\"schema must be object or boolean\")}let r=this._cache.get(e);if(void 0!==r)return r;const s=$.getSchemaRefs.call(this,e);r=new S.SchemaEnv({schema:e,meta:t,localRefs:s}),this._cache.set(r.schema,r);const i=r.baseId;return a&&!i.startsWith(\"#\")&&(i&&this._checkUnique(i),this.refs[i]=r),n&&this.validateSchema(e,!0),r}_checkUnique(e){if(this.schemas[e]||this.refs[e])throw new Error(`schema with key or id \"${e}\" already exists`)}_compileSchemaEnv(e){if(e.meta?this._compileMetaSchema(e):S.compileSchema.call(this,e),!e.validate)throw new Error(\"ajv implementation error\");return e.validate}_compileMetaSchema(e){const t=this.opts;this.opts=this._metaOpts;try{S.compileSchema.call(this,e)}finally{this.opts=t}}}function d(e,t,n,a=\"error\"){for(const r in e){const s=r;s in t&&this.logger[a](`${n}: option ${r}. ${e[s]}`)}}function c(e){return e=$.normalizeId(e),this.schemas[e]||this.refs[e]}function y(){const e=this.opts.schemas;if(e)if(Array.isArray(e))this.addSchema(e);else for(const t in e)this.addSchema(e[t],t)}function m(){for(const e in this.opts.formats){const t=this.opts.formats[e];t&&this.addFormat(e,t)}}function f(e){if(Array.isArray(e))this.addVocabulary(e);else{this.logger.warn(\"keywords option as map is deprecated, pass array\");for(const t in e){const n=e[t];n.keyword||(n.keyword=t),this.addKeyword(n)}}}function h(){const e={...this.opts};for(const t of a)delete e[t];return e}t.default=u,u.ValidationError=N.ValidationError,u.MissingRefError=N.MissingRefError;const b={log(){},warn(){},error(){}};const v=/^[a-z_$][a-z0-9_$:-]*$/i;function g(e,t){const{RULES:n}=this;if(M.eachItem(e,(e=>{if(n.keywords[e])throw new Error(`Keyword ${e} is already defined`);if(!v.test(e))throw new Error(`Keyword ${e} has invalid name`)})),t&&t.$data&&!(\"code\"in t)&&!(\"validate\"in t))throw new Error('$data keyword must have \"code\" or \"validate\" function')}function _(e,t,n){var a;const r=null==t?void 0:t.post;if(n&&r)throw new Error('keyword with \"post\" flag cannot have \"type\"');const{RULES:s}=this;let i=r?s.post:s.rules.find((({type:e})=>e===n));if(i||(i={type:n,rules:[]},s.rules.push(i)),s.keywords[e]=!0,!t)return;const o={keyword:e,definition:{...t,type:C.getJSONTypes(t.type),schemaType:C.getJSONTypes(t.schemaType)}};t.before?T.call(this,i,o,t.before):i.rules.push(o),s.all[e]=o,null===(a=t.implements)||void 0===a||a.forEach((e=>this.addKeyword(e)))}function T(e,t,n){const a=e.rules.findIndex((e=>e.keyword===n));a>=0?e.rules.splice(a,0,t):(e.rules.push(t),this.logger.warn(`rule ${n} is not defined`))}function w(e){let{metaSchema:t}=e;void 0!==t&&(e.$data&&this.opts.$data&&(t=A(t)),e.validateSchema=this.compile(t,!0))}const E={$ref:\"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\"};function A(e){return{anyOf:[e,E]}}}));r(D),D.CodeGen,D.Name,D.nil,D.stringify,D.str,D._,D.KeywordCxt;var U=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"id\",code(){throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID')}};t.default=n}));r(U);var V=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.callRef=t.getValidate=void 0;const n={keyword:\"$ref\",schemaType:\"string\",code(e){const{gen:t,schema:n,it:s}=e,{baseId:i,schemaEnv:o,validateName:p,opts:u,self:d}=s;if(\"#\"===n||\"#/\"===n)return function(){if(o===o.root)return r(e,p,o,o.$async);const n=t.scopeValue(\"root\",{ref:o.root});return r(e,l._`${n}.validate`,o.root,o.root.$async)}();const c=S.resolveRef.call(d,o.root,i,n);if(void 0===c)throw new N.MissingRefError(i,n);return c instanceof S.SchemaEnv?function(t){const n=a(e,t);r(e,n,t,t.$async)}(c):function(a){const r=t.scopeValue(\"schema\",!0===u.code.source?{ref:a,code:l.stringify(a)}:{ref:a}),s=t.name(\"valid\"),i=e.subschema({schema:a,dataTypes:[],schemaPath:l.nil,topSchemaRef:r,errSchemaPath:n},s);e.mergeEvaluated(i),e.ok(s)}(c)}};function a(e,t){const{gen:n}=e;return t.validate?n.scopeValue(\"validate\",{ref:t.validate}):l._`${n.scopeValue(\"wrapper\",{ref:t})}.validate`}function r(e,t,n,a){const{gen:r,it:s}=e,{allErrors:i,schemaEnv:o,opts:p}=s,u=p.passContext?c.default.this:l.nil;function d(e){const t=l._`${e}.errors`;r.assign(c.default.vErrors,l._`${c.default.vErrors} === null ? ${t} : ${c.default.vErrors}.concat(${t})`),r.assign(c.default.errors,l._`${c.default.vErrors}.length`)}function y(e){var t;if(!s.opts.unevaluated)return;const a=null===(t=null==n?void 0:n.validate)||void 0===t?void 0:t.evaluated;if(!0!==s.props)if(a&&!a.dynamicProps)void 0!==a.props&&(s.props=M.mergeEvaluated.props(r,a.props,s.props));else{const t=r.var(\"props\",l._`${e}.evaluated.props`);s.props=M.mergeEvaluated.props(r,t,s.props,l.Name)}if(!0!==s.items)if(a&&!a.dynamicItems)void 0!==a.items&&(s.items=M.mergeEvaluated.items(r,a.items,s.items));else{const t=r.var(\"items\",l._`${e}.evaluated.items`);s.items=M.mergeEvaluated.items(r,t,s.items,l.Name)}}a?function(){if(!o.$async)throw new Error(\"async schema referenced by sync schema\");const n=r.let(\"valid\");r.try((()=>{r.code(l._`await ${b.callValidateCode(e,t,u)}`),y(t),i||r.assign(n,!0)}),(e=>{r.if(l._`!(${e} instanceof ${s.ValidationError})`,(()=>r.throw(e))),d(e),i||r.assign(n,!1)})),e.ok(n)}():e.result(b.callValidateCode(e,t,u),(()=>y(t)),(()=>d(t)))}t.getValidate=a,t.callRef=r,t.default=n}));r(V),V.callRef,V.getValidate;var F=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n=[\"$schema\",\"$id\",\"$defs\",\"$vocabulary\",{keyword:\"$comment\"},\"definitions\",U.default,V.default];t.default=n}));r(F);var B=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n=l.operators,a={maximum:{okStr:\"<=\",ok:n.LTE,fail:n.GT},minimum:{okStr:\">=\",ok:n.GTE,fail:n.LT},exclusiveMaximum:{okStr:\"<\",ok:n.LT,fail:n.GTE},exclusiveMinimum:{okStr:\">\",ok:n.GT,fail:n.LTE}},r={message:({keyword:e,schemaCode:t})=>l.str`should be ${a[e].okStr} ${t}`,params:({keyword:e,schemaCode:t})=>l._`{comparison: ${a[e].okStr}, limit: ${t}}`},s={keyword:Object.keys(a),type:\"number\",schemaType:\"number\",$data:!0,error:r,code(e){const{keyword:t,data:n,schemaCode:r}=e;e.fail$data(l._`${n} ${a[t].fail} ${r} || isNaN(${n})`)}};t.default=s}));r(B);var H=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"multipleOf\",type:\"number\",schemaType:\"number\",$data:!0,error:{message:({schemaCode:e})=>l.str`should be multiple of ${e}`,params:({schemaCode:e})=>l._`{multipleOf: ${e}}`},code(e){const{gen:t,data:n,schemaCode:a,it:r}=e,s=r.opts.multipleOfPrecision,i=t.let(\"res\"),o=s?l._`Math.abs(Math.round(${i}) - ${i}) > 1e-${s}`:l._`${i} !== parseInt(${i})`;e.fail$data(l._`(${a} === 0 || (${i} = ${n}/${a}, ${o}))`)}};t.default=n}));r(H);var L=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(e){const t=e.length;let n,a=0,r=0;for(;r<t;)a++,n=e.charCodeAt(r++),n>=55296&&n<=56319&&r<t&&(n=e.charCodeAt(r),56320==(64512&n)&&r++);return a}}));r(L);var K=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:[\"maxLength\",\"minLength\"],type:\"string\",schemaType:\"number\",$data:!0,error:{message({keyword:e,schemaCode:t}){const n=\"maxLength\"===e?\"more\":\"fewer\";return l.str`should NOT have ${n} than ${t} characters`},params:({schemaCode:e})=>l._`{limit: ${e}}`},code(e){const{keyword:t,data:n,schemaCode:a,it:r}=e,s=\"maxLength\"===t?l.operators.GT:l.operators.LT;let i;if(!1===r.opts.unicode)i=l._`${n}.length`;else{const t=e.gen.scopeValue(\"func\",{ref:L.default,code:l._`require(\"ajv/dist/compile/ucs2length\").default`});i=l._`${t}(${n})`}e.fail$data(l._`${i} ${s} ${a}`)}};t.default=n}));r(K);var z=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"pattern\",type:\"string\",schemaType:\"string\",$data:!0,error:{message:({schemaCode:e})=>l.str`should match pattern \"${e}\"`,params:({schemaCode:e})=>l._`{pattern: ${e}}`},code(e){const{gen:t,data:n,$data:a,schema:r,schemaCode:s}=e,i=a?l._`(new RegExp(${s}, \"u\"))`:b.usePattern(t,r);e.fail$data(l._`!${i}.test(${n})`)}};t.default=n}));r(z);var q=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:[\"maxProperties\",\"minProperties\"],type:\"object\",schemaType:\"number\",$data:!0,error:{message({keyword:e,schemaCode:t}){const n=\"maxProperties\"===e?\"more\":\"fewer\";return l.str`should NOT have ${n} than ${t} items`},params:({schemaCode:e})=>l._`{limit: ${e}}`},code(e){const{keyword:t,data:n,schemaCode:a}=e,r=\"maxProperties\"===t?l.operators.GT:l.operators.LT;e.fail$data(l._`Object.keys(${n}).length ${r} ${a}`)}};t.default=n}));r(q);var G=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"required\",type:\"object\",schemaType:\"array\",$data:!0,error:{message:({params:{missingProperty:e}})=>l.str`should have required property '${e}'`,params:({params:{missingProperty:e}})=>l._`{missingProperty: ${e}}`},code(e){const{gen:t,schema:n,schemaCode:a,data:r,$data:s,it:i}=e,{opts:o}=i;if(!s&&0===n.length)return;const p=n.length>=o.loopRequired;if(i.allErrors?function(){if(p||s)e.block$data(l.nil,u);else for(const t of n)b.checkReportMissingProp(e,t)}():function(){const i=t.let(\"missing\");if(p||s){const n=t.let(\"valid\",!0);e.block$data(n,(()=>function(n,s){e.setParams({missingProperty:n}),t.forOf(n,a,(()=>{t.assign(s,b.propertyInData(t,r,n,o.ownProperties)),t.if(l.not(s),(()=>{e.error(),t.break()}))}),l.nil)}(i,n))),e.ok(n)}else t.if(b.checkMissingProp(e,n,i)),b.reportMissingProp(e,i),t.else()}(),o.strictRequired){const t=e.parentSchema.properties,{definedProperties:a}=e.it;for(const e of n)if(void 0===(null==t?void 0:t[e])&&!a.has(e)){const t=`required property \"${e}\" is not defined at \"${i.schemaEnv.baseId+i.errSchemaPath}\" (strictRequired)`;E.checkStrictMode(i,t,i.opts.strictRequired)}}function u(){t.forOf(\"prop\",a,(n=>{e.setParams({missingProperty:n}),t.if(b.noPropertyInData(t,r,n,o.ownProperties),(()=>e.error()))}))}}};t.default=n}));r(G);var J=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:[\"maxItems\",\"minItems\"],type:\"array\",schemaType:\"number\",$data:!0,error:{message({keyword:e,schemaCode:t}){const n=\"maxItems\"===e?\"more\":\"fewer\";return l.str`should NOT have ${n} than ${t} items`},params:({schemaCode:e})=>l._`{limit: ${e}}`},code(e){const{keyword:t,data:n,schemaCode:a}=e,r=\"maxItems\"===t?l.operators.GT:l.operators.LT;e.fail$data(l._`${n}.length ${r} ${a}`)}};t.default=n}));r(J);var W=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"uniqueItems\",type:\"array\",schemaType:\"boolean\",$data:!0,error:{message:({params:{i:e,j:t}})=>l.str`should NOT have duplicate items (items ## ${t} and ${e} are identical)`,params:({params:{i:e,j:t}})=>l._`{i: ${e}, j: ${t}}`},code(e){const{gen:t,data:n,$data:a,schema:r,parentSchema:s,schemaCode:i,it:o}=e;if(!a&&!r)return;const p=t.let(\"valid\"),u=s.items?C.getSchemaTypes(s.items):[];function d(a,r){const s=t.name(\"item\"),i=C.checkDataTypes(u,s,o.opts.strict,C.DataType.Wrong),d=t.const(\"indices\",l._`{}`);t.for(l._`;${a}--;`,(()=>{t.let(s,l._`${n}[${a}]`),t.if(i,l._`continue`),u.length>1&&t.if(l._`typeof ${s} == \"string\"`,l._`${s} += \"_\"`),t.if(l._`typeof ${d}[${s}] == \"number\"`,(()=>{t.assign(r,l._`${d}[${s}]`),e.error(),t.assign(p,!1).break()})).code(l._`${d}[${s}] = ${a}`)}))}function c(a,r){const s=e.gen.scopeValue(\"func\",{ref:_,code:l._`require(\"ajv/dist/compile/equal\")`}),i=t.name(\"outer\");t.label(i).for(l._`;${a}--;`,(()=>t.for(l._`${r} = ${a}; ${r}--;`,(()=>t.if(l._`${s}(${n}[${a}], ${n}[${r}])`,(()=>{e.error(),t.assign(p,!1).break(i)}))))))}e.block$data(p,(function(){const a=t.let(\"i\",l._`${n}.length`),r=t.let(\"j\");e.setParams({i:a,j:r}),t.assign(p,!0),t.if(l._`${a} > 1`,(()=>(u.length>0&&!u.some((e=>\"object\"===e||\"array\"===e))?d:c)(a,r)))}),l._`${i} === false`),e.ok(p)}};t.default=n}));r(W);var Y=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"const\",$data:!0,error:{message:\"should be equal to constant\",params:({schemaCode:e})=>l._`{allowedValue: ${e}}`},code(e){const t=e.gen.scopeValue(\"func\",{ref:_,code:l._`require(\"ajv/dist/compile/equal\")`});e.fail$data(l._`!${t}(${e.data}, ${e.schemaCode})`)}};t.default=n}));r(Y);var Q=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"enum\",schemaType:\"array\",$data:!0,error:{message:\"should be equal to one of the allowed values\",params:({schemaCode:e})=>l._`{allowedValues: ${e}}`},code(e){const{gen:t,data:n,$data:a,schema:r,schemaCode:s,it:i}=e;if(!a&&0===r.length)throw new Error(\"enum must have non-empty array\");const o=r.length>=i.opts.loopEnum,p=e.gen.scopeValue(\"func\",{ref:_,code:l._`require(\"ajv/dist/compile/equal\")`});let u;if(o||a)u=t.let(\"valid\"),e.block$data(u,(function(){t.assign(u,!1),t.forOf(\"v\",s,(e=>t.if(l._`${p}(${n}, ${e})`,(()=>t.assign(u,!0).break()))))}));else{if(!Array.isArray(r))throw new Error(\"ajv implementation error\");const e=t.const(\"vSchema\",s);u=l.or(...r.map(((t,a)=>function(e,t){const a=r[t];return a&&\"object\"==typeof a?l._`${p}(${n}, ${e}[${t}])`:l._`${n} === ${a}`}(e,a))))}e.pass(u)}};t.default=n}));r(Q);var Z=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n=[B.default,H.default,K.default,z.default,q.default,G.default,J.default,W.default,{keyword:\"type\",schemaType:[\"string\",\"array\"]},{keyword:\"nullable\",schemaType:\"boolean\"},Y.default,Q.default];t.default=n}));r(Z);var X=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"additionalItems\",type:\"array\",schemaType:[\"boolean\",\"object\"],before:\"uniqueItems\",error:{message:({params:{len:e}})=>l.str`should NOT have more than ${e} items`,params:({params:{len:e}})=>l._`{limit: ${e}}`},code(e){const{gen:t,schema:n,parentSchema:a,data:r,it:s}=e,{items:i}=a;if(!Array.isArray(i))return void E.checkStrictMode(s,'\"additionalItems\" is ignored when \"items\" is not an array of schemas');s.items=!0;const o=t.const(\"len\",l._`${r}.length`);if(!1===n)e.setParams({len:i.length}),e.pass(l._`${o} <= ${i.length}`);else if(\"object\"==typeof n&&!M.alwaysValidSchema(s,n)){const n=t.var(\"valid\",l._`${o} <= ${i.length}`);t.if(l.not(n),(()=>function(n){t.forRange(\"i\",i.length,o,(a=>{e.subschema({keyword:\"additionalItems\",dataProp:a,dataPropType:h.Type.Num},n),s.allErrors||t.if(l.not(n),(()=>t.break()))}))}(n))),e.ok(n)}}};t.default=n}));r(X);var ee=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"items\",type:\"array\",schemaType:[\"object\",\"array\",\"boolean\"],before:\"uniqueItems\",code(e){const{gen:t,schema:n,it:a}=e;if(Array.isArray(n))a.opts.unevaluated&&n.length&&!0!==a.items&&(a.items=M.mergeEvaluated.items(t,n.length,a.items)),function(n){const{parentSchema:r,data:s}=e;if(a.opts.strictTuples&&!function(e,t){return e===t.minItems&&(e===t.maxItems||!1===t.additionalItems)}(n.length,r)){const e=`\"items\" is ${n.length}-tuple, but minItems or maxItems/additionalItems are not specified or different`;E.checkStrictMode(a,e,a.opts.strictTuples)}const i=t.name(\"valid\"),o=t.const(\"len\",l._`${s}.length`);n.forEach(((n,r)=>{M.alwaysValidSchema(a,n)||(t.if(l._`${o} > ${r}`,(()=>e.subschema({keyword:\"items\",schemaProp:r,dataProp:r},i))),e.ok(i))}))}(n);else{if(a.items=!0,M.alwaysValidSchema(a,n))return;e.ok(b.validateArray(e))}}};t.default=n}));r(ee);var te=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"contains\",type:\"array\",schemaType:[\"object\",\"boolean\"],before:\"uniqueItems\",trackErrors:!0,error:{message:({params:{min:e,max:t}})=>void 0===t?l.str`should contain at least ${e} valid item(s)`:l.str`should contain at least ${e} and no more than ${t} valid item(s)`,params:({params:{min:e,max:t}})=>void 0===t?l._`{minContains: ${e}}`:l._`{minContains: ${e}, maxContains: ${t}}`},code(e){const{gen:t,schema:n,parentSchema:a,data:r,it:s}=e;let i,o;const{minContains:p,maxContains:u}=a;s.opts.next?(i=void 0===p?1:p,o=u):i=1;const d=t.const(\"len\",l._`${r}.length`);if(e.setParams({min:i,max:o}),void 0===o&&0===i)return void E.checkStrictMode(s,'\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored');if(void 0!==o&&i>o)return E.checkStrictMode(s,'\"minContains\" > \"maxContains\" is always invalid'),void e.fail();if(M.alwaysValidSchema(s,n)){let t=l._`${d} >= ${i}`;return void 0!==o&&(t=l._`${t} && ${d} <= ${o}`),void e.pass(t)}s.items=!0;const c=t.name(\"valid\");if(void 0===o&&1===i)y(c,(()=>t.if(c,(()=>t.break()))));else{t.let(c,!1);const e=t.name(\"_valid\"),n=t.let(\"count\",0);y(e,(()=>t.if(e,(()=>function(e){t.code(l._`${e}++`),void 0===o?t.if(l._`${e} >= ${i}`,(()=>t.assign(c,!0).break())):(t.if(l._`${e} > ${o}`,(()=>t.assign(c,!1).break())),1===i?t.assign(c,!0):t.if(l._`${e} >= ${i}`,(()=>t.assign(c,!0))))}(n)))))}function y(n,a){t.forRange(\"i\",0,d,(t=>{e.subschema({keyword:\"contains\",dataProp:t,dataPropType:h.Type.Num,compositeRule:!0},n),a()}))}e.result(c,(()=>e.reset()))}};t.default=n}));r(te);var ne=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.validateSchemaDeps=t.validatePropertyDeps=t.error=void 0,t.error={message:({params:{property:e,depsCount:t,deps:n}})=>{const a=1===t?\"property\":\"properties\";return l.str`should have ${a} ${n} when property ${e} is present`},params:({params:{property:e,depsCount:t,deps:n,missingProperty:a}})=>l._`{property: ${e},\n    missingProperty: ${a},\n    depsCount: ${t},\n    deps: ${n}}`};const n={keyword:\"dependencies\",type:\"object\",schemaType:\"object\",error:t.error,code(e){const[t,n]=function({schema:e}){const t={},n={};for(const a in e){if(\"__proto__\"===a)continue;(Array.isArray(e[a])?t:n)[a]=e[a]}return[t,n]}(e);a(e,t),r(e,n)}};function a(e,t=e.schema){const{gen:n,data:a,it:r}=e;if(0===Object.keys(t).length)return;const s=n.let(\"missing\");for(const i in t){const o=t[i];if(0===o.length)continue;const p=b.propertyInData(n,a,i,r.opts.ownProperties);e.setParams({property:i,depsCount:o.length,deps:o.join(\", \")}),r.allErrors?n.if(p,(()=>{for(const t of o)b.checkReportMissingProp(e,t)})):(n.if(l._`${p} && (${b.checkMissingProp(e,o,s)})`),b.reportMissingProp(e,s),n.else())}}function r(e,t=e.schema){const{gen:n,data:a,keyword:r,it:s}=e,i=n.name(\"valid\");for(const o in t)M.alwaysValidSchema(s,t[o])||(n.if(b.propertyInData(n,a,o,s.opts.ownProperties),(()=>{const t=e.subschema({keyword:r,schemaProp:o},i);e.mergeValidEvaluated(t,i)}),(()=>n.var(i,!0))),e.ok(i))}t.validatePropertyDeps=a,t.validateSchemaDeps=r,t.default=n}));r(ne),ne.validateSchemaDeps,ne.validatePropertyDeps,ne.error;var ae=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"propertyNames\",type:\"object\",schemaType:[\"object\",\"boolean\"],error:{message:({params:e})=>l.str`property name '${e.propertyName}' is invalid`,params:({params:e})=>l._`{propertyName: ${e.propertyName}}`},code(e){const{gen:t,schema:n,data:a,it:r}=e;if(M.alwaysValidSchema(r,n))return;const s=t.name(\"valid\");t.forIn(\"key\",a,(n=>{e.setParams({propertyName:n}),e.subschema({keyword:\"propertyNames\",data:n,dataTypes:[\"string\"],propertyName:n,compositeRule:!0},s),t.if(l.not(s),(()=>{e.error(!0),r.allErrors||t.break()}))})),e.ok(s)}};t.default=n}));r(ae);var re=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"additionalProperties\",type:[\"object\"],schemaType:[\"boolean\",\"object\"],allowUndefined:!0,trackErrors:!0,error:{message:\"should NOT have additional properties\",params:({params:e})=>l._`{additionalProperty: ${e.additionalProperty}}`},code(e){const{gen:t,schema:n,parentSchema:a,data:r,errsCount:s,it:i}=e;if(!s)throw new Error(\"ajv implementation error\");const{allErrors:o,opts:p}=i;if(i.props=!0,\"all\"!==p.removeAdditional&&M.alwaysValidSchema(i,n))return;const u=b.allSchemaProperties(a.properties),d=b.allSchemaProperties(a.patternProperties);function y(e){t.code(l._`delete ${r}[${e}]`)}function m(a){if(\"all\"===p.removeAdditional||p.removeAdditional&&!1===n)y(a);else{if(!1===n)return e.setParams({additionalProperty:a}),e.error(),void(o||t.break());if(\"object\"==typeof n&&!M.alwaysValidSchema(i,n)){const n=t.name(\"valid\");\"failing\"===p.removeAdditional?(f(a,n,!1),t.if(l.not(n),(()=>{e.reset(),y(a)}))):(f(a,n),o||t.if(l.not(n),(()=>t.break())))}}}function f(t,n,a){const r={keyword:\"additionalProperties\",dataProp:t,dataPropType:h.Type.Str};!1===a&&Object.assign(r,{compositeRule:!0,createErrors:!1,allErrors:!1}),e.subschema(r,n)}t.forIn(\"key\",r,(e=>{u.length||d.length?t.if(function(e){let n;if(u.length>8){const r=M.schemaRefOrVal(i,a.properties,\"properties\");n=b.isOwnProperty(t,r,e)}else n=u.length?l.or(...u.map((t=>l._`${e} === ${t}`))):l.nil;return d.length&&(n=l.or(n,...d.map((n=>l._`${b.usePattern(t,n)}.test(${e})`)))),l.not(n)}(e),(()=>m(e))):m(e)})),e.ok(l._`${s} === ${c.default.errors}`)}};t.default=n}));r(re);var se=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"properties\",type:\"object\",schemaType:\"object\",code(e){const{gen:t,schema:n,parentSchema:a,data:r,it:s}=e;\"all\"===s.opts.removeAdditional&&void 0===a.additionalProperties&&re.default.code(new I.default(s,re.default,\"additionalProperties\"));const i=b.allSchemaProperties(n);for(const e of i)s.definedProperties.add(e);s.opts.unevaluated&&i.length&&!0!==s.props&&(s.props=M.mergeEvaluated.props(t,M.toHash(i),s.props));const o=i.filter((e=>!M.alwaysValidSchema(s,n[e])));if(0===o.length)return;const p=t.name(\"valid\");for(const n of o)u(n)?d(n):(t.if(b.propertyInData(t,r,n,s.opts.ownProperties)),d(n),s.allErrors||t.else().var(p,!0),t.endIf()),e.it.definedProperties.add(n),e.ok(p);function u(e){return s.opts.useDefaults&&!s.compositeRule&&void 0!==n[e].default}function d(t){e.subschema({keyword:\"properties\",schemaProp:t,dataProp:t},p)}}};t.default=n}));r(se);var ie=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"patternProperties\",type:\"object\",schemaType:\"object\",code(e){const{gen:t,schema:n,data:a,parentSchema:r,it:s}=e,{opts:i}=s,o=b.schemaProperties(s,n);if(0===o.length)return;const p=i.strict&&!i.allowMatchingProperties&&r.properties,u=t.name(\"valid\");!0===s.props||s.props instanceof l.Name||(s.props=M.evaluatedPropsToName(t,s.props));const{props:d}=s;function c(e){for(const t in p)new RegExp(e).test(t)&&E.checkStrictMode(s,`property ${t} matches pattern ${e} (use allowMatchingProperties)`)}function y(n){t.forIn(\"key\",a,(a=>{t.if(l._`${b.usePattern(t,n)}.test(${a})`,(()=>{e.subschema({keyword:\"patternProperties\",schemaProp:n,dataProp:a,dataPropType:h.Type.Str},u),s.opts.unevaluated&&!0!==d?t.assign(l._`${d}[${a}]`,!0):s.allErrors||t.if(l.not(u),(()=>t.break()))}))}))}!function(){for(const e of o)p&&c(e),s.allErrors?y(e):(t.var(u,!0),y(e),t.if(u))}()}};t.default=n}));r(ie);var oe=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"not\",schemaType:[\"object\",\"boolean\"],trackErrors:!0,code(e){const{gen:t,schema:n,it:a}=e;if(M.alwaysValidSchema(a,n))return void e.fail();const r=t.name(\"valid\");e.subschema({keyword:\"not\",compositeRule:!0,createErrors:!1,allErrors:!1},r),e.result(r,(()=>e.error()),(()=>e.reset()))},error:{message:\"should NOT be valid\"}};t.default=n}));r(oe);var pe=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"anyOf\",schemaType:\"array\",trackErrors:!0,code:b.validateUnion,error:{message:\"should match some schema in anyOf\"}};t.default=n}));r(pe);var ue=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"oneOf\",schemaType:\"array\",trackErrors:!0,error:{message:\"should match exactly one schema in oneOf\",params:({params:e})=>l._`{passingSchemas: ${e.passing}}`},code(e){const{gen:t,schema:n,it:a}=e;if(!Array.isArray(n))throw new Error(\"ajv implementation error\");const r=n,s=t.let(\"valid\",!1),i=t.let(\"passing\",null),o=t.name(\"_valid\");e.setParams({passing:i}),t.block((function(){r.forEach(((n,r)=>{let p;M.alwaysValidSchema(a,n)?t.var(o,!0):p=e.subschema({keyword:\"oneOf\",schemaProp:r,compositeRule:!0},o),r>0&&t.if(l._`${o} && ${s}`).assign(s,!1).assign(i,l._`[${i}, ${r}]`).else(),t.if(o,(()=>{t.assign(s,!0),t.assign(i,r),p&&e.mergeEvaluated(p,l.Name)}))}))})),e.result(s,(()=>e.reset()),(()=>e.error(!0)))}};t.default=n}));r(ue);var de=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"allOf\",schemaType:\"array\",code(e){const{gen:t,schema:n,it:a}=e;if(!Array.isArray(n))throw new Error(\"ajv implementation error\");const r=t.name(\"valid\");n.forEach(((t,n)=>{if(M.alwaysValidSchema(a,t))return;const s=e.subschema({keyword:\"allOf\",schemaProp:n},r);e.ok(r),e.mergeEvaluated(s)}))}};t.default=n}));r(de);var le=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"if\",schemaType:[\"object\",\"boolean\"],trackErrors:!0,error:{message:({params:e})=>l.str`should match \"${e.ifClause}\" schema`,params:({params:e})=>l._`{failingKeyword: ${e.ifClause}}`},code(e){const{gen:t,parentSchema:n,it:r}=e;void 0===n.then&&void 0===n.else&&E.checkStrictMode(r,'\"if\" without \"then\" and \"else\" is ignored');const s=a(r,\"then\"),i=a(r,\"else\");if(!s&&!i)return;const o=t.let(\"valid\",!0),p=t.name(\"_valid\");if(function(){const t=e.subschema({keyword:\"if\",compositeRule:!0,createErrors:!1,allErrors:!1},p);e.mergeEvaluated(t)}(),e.reset(),s&&i){const n=t.let(\"ifClause\");e.setParams({ifClause:n}),t.if(p,u(\"then\",n),u(\"else\",n))}else s?t.if(p,u(\"then\")):t.if(l.not(p),u(\"else\"));function u(n,a){return()=>{const r=e.subschema({keyword:n},p);t.assign(o,p),e.mergeValidEvaluated(r,o),a?t.assign(a,l._`${n}`):e.setParams({ifClause:n})}}e.pass(o,(()=>e.error(!0)))}};function a(e,t){const n=e.schema[t];return void 0!==n&&!M.alwaysValidSchema(e,n)}t.default=n}));r(le);var ce=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:[\"then\",\"else\"],schemaType:[\"object\",\"boolean\"],code({keyword:e,parentSchema:t,it:n}){void 0===t.if&&E.checkStrictMode(n,`\"${e}\" without \"if\" is ignored`)}};t.default=n}));r(ce);var ye=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n=[oe.default,pe.default,ue.default,de.default,le.default,ce.default,X.default,ee.default,te.default,ae.default,re.default,ne.default,se.default,ie.default];t.default=n}));r(ye);var me=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n={keyword:\"format\",type:[\"number\",\"string\"],schemaType:\"string\",$data:!0,error:{message:({schemaCode:e})=>l.str`should match format \"${e}\"`,params:({schemaCode:e})=>l._`{format: ${e}}`},code(e,t){const{gen:n,data:a,$data:r,schema:s,schemaCode:i,it:o}=e,{opts:p,errSchemaPath:u,schemaEnv:d,self:c}=o;p.validateFormats&&(r?function(){const r=n.scopeValue(\"formats\",{ref:c.formats,code:p.code.formats}),s=n.const(\"fDef\",l._`${r}[${i}]`),o=n.let(\"fType\"),u=n.let(\"format\");n.if(l._`typeof ${s} == \"object\" && !(${s} instanceof RegExp)`,(()=>n.assign(o,l._`${s}.type || \"string\"`).assign(u,l._`${s}.validate`)),(()=>n.assign(o,l._`\"string\"`).assign(u,s))),e.fail$data(l.or(!1===p.strict?l.nil:l._`${i} && !${u}`,function(){const e=d.$async?l._`(${s}.async ? await ${u}(${a}) : ${u}(${a}))`:l._`${u}(${a})`,n=l._`(typeof ${u} == \"function\" ? ${e} : ${u}.test(${a}))`;return l._`${u} && ${u} !== true && ${o} === ${t} && !${n}`}()))}():function(){const r=c.formats[s];if(!r)return void function(){if(!1===p.strict)return void c.logger.warn(e());throw new Error(e());function e(){return`unknown format \"${s}\" ignored in schema at path \"${u}\"`}}();if(!0===r)return;const[i,o,y]=function(e){const t=n.scopeValue(\"formats\",{key:s,ref:e,code:p.code.formats?l._`${p.code.formats}${l.getProperty(s)}`:void 0});if(\"object\"==typeof e&&!(e instanceof RegExp))return[e.type||\"string\",e.validate,l._`${t}.validate`];return[\"string\",e,t]}(r);i===t&&e.pass(function(){if(\"object\"==typeof r&&!(r instanceof RegExp)&&r.async){if(!d.$async)throw new Error(\"async format in sync schema\");return l._`await ${y}(${a})`}return\"function\"==typeof o?l._`${y}(${a})`:l._`${y}.test(${a})`}())}())}};t.default=n}));r(me);var fe=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n=[me.default];t.default=n}));r(fe);var he=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.contentVocabulary=t.metadataVocabulary=void 0,t.metadataVocabulary=[\"title\",\"description\",\"default\",\"deprecated\",\"readOnly\",\"writeOnly\",\"examples\"],t.contentVocabulary=[\"contentMediaType\",\"contentEncoding\",\"contentSchema\"]}));r(he),he.contentVocabulary,he.metadataVocabulary;var be=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});const n=[F.default,Z.default,ye.default,fe.default,he.metadataVocabulary,he.contentVocabulary];t.default=n}));r(be);var ve=\"http://json-schema.org/draft-07/schema#\",ge=\"http://json-schema.org/draft-07/schema#\",_e=\"Core schema meta-schema\",Te={schemaArray:{type:\"array\",minItems:1,items:{$ref:\"#\"}},nonNegativeInteger:{type:\"integer\",minimum:0},nonNegativeIntegerDefault0:{allOf:[{$ref:\"#/definitions/nonNegativeInteger\"},{default:0}]},simpleTypes:{enum:[\"array\",\"boolean\",\"integer\",\"null\",\"number\",\"object\",\"string\"]},stringArray:{type:\"array\",items:{type:\"string\"},uniqueItems:!0,default:[]}},we=[\"object\",\"boolean\"],$e={$id:{type:\"string\",format:\"uri-reference\"},$schema:{type:\"string\",format:\"uri\"},$ref:{type:\"string\",format:\"uri-reference\"},$comment:{type:\"string\"},title:{type:\"string\"},description:{type:\"string\"},default:!0,readOnly:{type:\"boolean\",default:!1},examples:{type:\"array\",items:!0},multipleOf:{type:\"number\",exclusiveMinimum:0},maximum:{type:\"number\"},exclusiveMaximum:{type:\"number\"},minimum:{type:\"number\"},exclusiveMinimum:{type:\"number\"},maxLength:{$ref:\"#/definitions/nonNegativeInteger\"},minLength:{$ref:\"#/definitions/nonNegativeIntegerDefault0\"},pattern:{type:\"string\",format:\"regex\"},additionalItems:{$ref:\"#\"},items:{anyOf:[{$ref:\"#\"},{$ref:\"#/definitions/schemaArray\"}],default:!0},maxItems:{$ref:\"#/definitions/nonNegativeInteger\"},minItems:{$ref:\"#/definitions/nonNegativeIntegerDefault0\"},uniqueItems:{type:\"boolean\",default:!1},contains:{$ref:\"#\"},maxProperties:{$ref:\"#/definitions/nonNegativeInteger\"},minProperties:{$ref:\"#/definitions/nonNegativeIntegerDefault0\"},required:{$ref:\"#/definitions/stringArray\"},additionalProperties:{$ref:\"#\"},definitions:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},properties:{type:\"object\",additionalProperties:{$ref:\"#\"},default:{}},patternProperties:{type:\"object\",additionalProperties:{$ref:\"#\"},propertyNames:{format:\"regex\"},default:{}},dependencies:{type:\"object\",additionalProperties:{anyOf:[{$ref:\"#\"},{$ref:\"#/definitions/stringArray\"}]}},propertyNames:{$ref:\"#\"},const:!0,enum:{type:\"array\",items:!0,minItems:1,uniqueItems:!0},type:{anyOf:[{$ref:\"#/definitions/simpleTypes\"},{type:\"array\",items:{$ref:\"#/definitions/simpleTypes\"},minItems:1,uniqueItems:!0}]},format:{type:\"string\"},contentMediaType:{type:\"string\"},contentEncoding:{type:\"string\"},if:{$ref:\"#\"},then:{$ref:\"#\"},else:{$ref:\"#\"},allOf:{$ref:\"#/definitions/schemaArray\"},anyOf:{$ref:\"#/definitions/schemaArray\"},oneOf:{$ref:\"#/definitions/schemaArray\"},not:{$ref:\"#\"}},Ee={$schema:ve,$id:ge,title:_e,definitions:Te,type:we,properties:$e,default:!0},Me=i(Object.freeze({__proto__:null,$schema:ve,$id:ge,title:_e,definitions:Te,type:we,properties:$e,default:Ee})),Ce=s((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.CodeGen=t.Name=t.nil=t.stringify=t.str=t._=t.KeywordCxt=void 0,t.KeywordCxt=I.default,Object.defineProperty(t,\"_\",{enumerable:!0,get:function(){return l._}}),Object.defineProperty(t,\"str\",{enumerable:!0,get:function(){return l.str}}),Object.defineProperty(t,\"stringify\",{enumerable:!0,get:function(){return l.stringify}}),Object.defineProperty(t,\"nil\",{enumerable:!0,get:function(){return l.nil}}),Object.defineProperty(t,\"Name\",{enumerable:!0,get:function(){return l.Name}}),Object.defineProperty(t,\"CodeGen\",{enumerable:!0,get:function(){return l.CodeGen}});const n=[\"/properties\"],a=\"http://json-schema.org/draft-07/schema\";class r extends D.default{_addVocabularies(){super._addVocabularies(),be.default.forEach((e=>this.addVocabulary(e)))}_addDefaultMetaSchema(){if(super._addDefaultMetaSchema(),!this.opts.meta)return;const e=this.opts.$data?this.$dataMetaSchema(Me,n):Me;this.addMetaSchema(e,a,!1),this.refs[\"http://json-schema.org/schema\"]=a}defaultMeta(){return this.opts.defaultMeta=super.defaultMeta()||(this.getSchema(a)?a:void 0)}}t.default=r}));r(Ce),Ce.CodeGen,Ce.Name,Ce.nil,Ce.stringify,Ce.str,Ce._,Ce.KeywordCxt;var Ie=s((function(e,t){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.validateType=t.generateValidator=t.Ajv=void 0;const a=n(Ce);t.Ajv=a.default,t.generateValidator=function(e){return(new a.default).compile(e)},t.validateType=function(e,t){return e.validate(t)}}));r(Ie),Ie.validateType,Ie.generateValidator,Ie.Ajv;var Ne=s((function(e,t){var n;Object.defineProperty(t,\"__esModule\",{value:!0}),t.getChainId=t.ChainName=void 0,function(e){e.ETHEREUM_MAINNET=\"MAINNET\",e.ETHEREUM_ROPSTEN=\"ROPSTEN\",e.ETHEREUM_RINKEBY=\"RINKEBY\",e.ETHEREUM_GOERLI=\"GOERLI\",e.ETHEREUM_KOVAN=\"KOVAN\",e.MATIC_MAINNET=\"MATIC\",e.MATIC_MUMBAI=\"MUMBAI\"}(n=t.ChainName||(t.ChainName={})),t.getChainId=function(e){switch(e){case n.ETHEREUM_MAINNET:return Se.ChainId.ETHEREUM_MAINNET;case n.ETHEREUM_ROPSTEN:return Se.ChainId.ETHEREUM_ROPSTEN;case n.ETHEREUM_RINKEBY:return Se.ChainId.ETHEREUM_RINKEBY;case n.ETHEREUM_GOERLI:return Se.ChainId.ETHEREUM_GOERLI;case n.ETHEREUM_KOVAN:return Se.ChainId.ETHEREUM_KOVAN;case n.MATIC_MAINNET:return Se.ChainId.MATIC_MAINNET;case n.MATIC_MUMBAI:return Se.ChainId.MATIC_MUMBAI;default:return null}},function(e){e.schema={type:\"string\",enum:Object.values(e)},e.validate=Ie.generateValidator(e.schema)}(n=t.ChainName||(t.ChainName={}))}));r(Ne),Ne.getChainId,Ne.ChainName;var Se=s((function(e,t){var n;Object.defineProperty(t,\"__esModule\",{value:!0}),t.getChainName=t.ChainId=void 0,function(e){e[e.ETHEREUM_MAINNET=1]=\"ETHEREUM_MAINNET\",e[e.ETHEREUM_ROPSTEN=3]=\"ETHEREUM_ROPSTEN\",e[e.ETHEREUM_RINKEBY=4]=\"ETHEREUM_RINKEBY\",e[e.ETHEREUM_GOERLI=5]=\"ETHEREUM_GOERLI\",e[e.ETHEREUM_KOVAN=42]=\"ETHEREUM_KOVAN\",e[e.MATIC_MAINNET=137]=\"MATIC_MAINNET\",e[e.MATIC_MUMBAI=80001]=\"MATIC_MUMBAI\"}(n=t.ChainId||(t.ChainId={})),t.getChainName=function(e){switch(e){case n.ETHEREUM_MAINNET:return Ne.ChainName.ETHEREUM_MAINNET;case n.ETHEREUM_ROPSTEN:return Ne.ChainName.ETHEREUM_ROPSTEN;case n.ETHEREUM_RINKEBY:return Ne.ChainName.ETHEREUM_RINKEBY;case n.ETHEREUM_GOERLI:return Ne.ChainName.ETHEREUM_GOERLI;case n.ETHEREUM_KOVAN:return Ne.ChainName.ETHEREUM_KOVAN;case n.MATIC_MAINNET:return Ne.ChainName.MATIC_MAINNET;case n.MATIC_MUMBAI:return Ne.ChainName.MATIC_MUMBAI;default:return null}},function(e){e.schema={type:\"number\",enum:Object.values(e)},e.validate=Ie.generateValidator(e.schema)}(n=t.ChainId||(t.ChainId={}))}));r(Se),Se.getChainName,Se.ChainId;var Ae=s((function(e,t){var n;Object.defineProperty(t,\"__esModule\",{value:!0}),t.Network=void 0,(n=t.Network||(t.Network={})).ETHEREUM=\"ETHEREUM\",n.MATIC=\"MATIC\",function(e){e.schema={type:\"string\",enum:Object.values(e)},e.validate=Ie.generateValidator(e.schema)}(t.Network||(t.Network={}))}));r(Ae),Ae.Network;var xe=s((function(e,t){var n;Object.defineProperty(t,\"__esModule\",{value:!0}),t.MetaTransaction=void 0,(n=t.MetaTransaction||(t.MetaTransaction={})).schema={type:\"object\",properties:{from:{type:\"string\"},params:{type:\"array\",items:[{type:\"string\"},{type:\"string\"}],additionalItems:!1,minItems:2}},additionalProperties:!1,required:[\"from\",\"params\"]},n.validate=Ie.generateValidator(n.schema)}));r(xe),xe.MetaTransaction;var Pe=s((function(e,t){var n=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n),Object.defineProperty(e,a,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),a=this&&this.__exportStar||function(e,t){for(var a in e)\"default\"===a||Object.prototype.hasOwnProperty.call(t,a)||n(t,e,a)};Object.defineProperty(t,\"__esModule\",{value:!0}),t.MetaTransaction=t.Network=t.getChainId=t.ChainName=t.getChainName=t.ChainId=void 0,a(Ie,t),Object.defineProperty(t,\"ChainId\",{enumerable:!0,get:function(){return Se.ChainId}}),Object.defineProperty(t,\"getChainName\",{enumerable:!0,get:function(){return Se.getChainName}}),Object.defineProperty(t,\"ChainName\",{enumerable:!0,get:function(){return Ne.ChainName}}),Object.defineProperty(t,\"getChainId\",{enumerable:!0,get:function(){return Ne.getChainId}}),Object.defineProperty(t,\"Network\",{enumerable:!0,get:function(){return Ae.Network}}),Object.defineProperty(t,\"MetaTransaction\",{enumerable:!0,get:function(){return xe.MetaTransaction}})}));r(Pe),Pe.MetaTransaction,Pe.Network,Pe.getChainId,Pe.ChainName,Pe.getChainName;var Oe=Pe.ChainId;const Re={[e.ContractName.Bid]:[{constant:!0,inputs:[{name:\"_tokenAddress\",type:\"address\"},{name:\"_tokenId\",type:\"uint256\"},{name:\"_bidder\",type:\"address\"}],name:\"getBidByBidder\",outputs:[{name:\"bidIndex\",type:\"uint256\"},{name:\"bidId\",type:\"bytes32\"},{name:\"bidder\",type:\"address\"},{name:\"price\",type:\"uint256\"},{name:\"expiresAt\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"ERC721Composable_ValidateFingerprint\",outputs:[{name:\"\",type:\"bytes4\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"_from\",type:\"address\"},{name:\"\",type:\"address\"},{name:\"_tokenId\",type:\"uint256\"},{name:\"_data\",type:\"bytes\"}],name:\"onERC721Received\",outputs:[{name:\"\",type:\"bytes4\"}],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!1,inputs:[{name:\"_ownerCutPerMillion\",type:\"uint256\"}],name:\"setOwnerCutPerMillion\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[{name:\"\",type:\"address\"},{name:\"\",type:\"uint256\"},{name:\"\",type:\"address\"}],name:\"bidIdByTokenAndBidder\",outputs:[{name:\"\",type:\"bytes32\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[{name:\"\",type:\"address\"},{name:\"\",type:\"uint256\"}],name:\"bidCounterByToken\",outputs:[{name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"ERC721_Interface\",outputs:[{name:\"\",type:\"bytes4\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"_tokenAddress\",type:\"address\"},{name:\"_tokenId\",type:\"uint256\"}],name:\"cancelBid\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!1,inputs:[],name:\"unpause\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[{name:\"_tokenAddress\",type:\"address\"},{name:\"_tokenId\",type:\"uint256\"},{name:\"_index\",type:\"uint256\"}],name:\"getBidByToken\",outputs:[{name:\"\",type:\"bytes32\"},{name:\"\",type:\"address\"},{name:\"\",type:\"uint256\"},{name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[{name:\"account\",type:\"address\"}],name:\"isPauser\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"ERC721_Received\",outputs:[{name:\"\",type:\"bytes4\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"paused\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[],name:\"renouncePauser\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!1,inputs:[],name:\"renounceOwnership\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[],name:\"manaToken\",outputs:[{name:\"\",type:\"address\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"_tokenAddress\",type:\"address\"},{name:\"_tokenId\",type:\"uint256\"},{name:\"_price\",type:\"uint256\"},{name:\"_duration\",type:\"uint256\"}],name:\"placeBid\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!1,inputs:[{name:\"account\",type:\"address\"}],name:\"addPauser\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!1,inputs:[],name:\"pause\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[],name:\"owner\",outputs:[{name:\"\",type:\"address\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"isOwner\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"ONE_MILLION\",outputs:[{name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"ownerCutPerMillion\",outputs:[{name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"MAX_BID_DURATION\",outputs:[{name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"_tokenAddress\",type:\"address\"},{name:\"_tokenId\",type:\"uint256\"},{name:\"_price\",type:\"uint256\"},{name:\"_duration\",type:\"uint256\"},{name:\"_fingerprint\",type:\"bytes\"}],name:\"placeBid\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[{name:\"\",type:\"bytes32\"}],name:\"bidIndexByBidId\",outputs:[{name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"_tokenAddresses\",type:\"address[]\"},{name:\"_tokenIds\",type:\"uint256[]\"},{name:\"_bidders\",type:\"address[]\"}],name:\"removeExpiredBids\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!1,inputs:[{name:\"newOwner\",type:\"address\"}],name:\"transferOwnership\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[],name:\"MIN_BID_DURATION\",outputs:[{name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{inputs:[{name:\"_manaToken\",type:\"address\"},{name:\"_owner\",type:\"address\"}],payable:!1,stateMutability:\"nonpayable\",type:\"constructor\"},{anonymous:!1,inputs:[{indexed:!1,name:\"_id\",type:\"bytes32\"},{indexed:!0,name:\"_tokenAddress\",type:\"address\"},{indexed:!0,name:\"_tokenId\",type:\"uint256\"},{indexed:!0,name:\"_bidder\",type:\"address\"},{indexed:!1,name:\"_price\",type:\"uint256\"},{indexed:!1,name:\"_expiresAt\",type:\"uint256\"},{indexed:!1,name:\"_fingerprint\",type:\"bytes\"}],name:\"BidCreated\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,name:\"_id\",type:\"bytes32\"},{indexed:!0,name:\"_tokenAddress\",type:\"address\"},{indexed:!0,name:\"_tokenId\",type:\"uint256\"},{indexed:!1,name:\"_bidder\",type:\"address\"},{indexed:!0,name:\"_seller\",type:\"address\"},{indexed:!1,name:\"_price\",type:\"uint256\"},{indexed:!1,name:\"_fee\",type:\"uint256\"}],name:\"BidAccepted\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,name:\"_id\",type:\"bytes32\"},{indexed:!0,name:\"_tokenAddress\",type:\"address\"},{indexed:!0,name:\"_tokenId\",type:\"uint256\"},{indexed:!0,name:\"_bidder\",type:\"address\"}],name:\"BidCancelled\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,name:\"_ownerCutPerMillion\",type:\"uint256\"}],name:\"ChangedOwnerCutPerMillion\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,name:\"account\",type:\"address\"}],name:\"Paused\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,name:\"account\",type:\"address\"}],name:\"Unpaused\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,name:\"account\",type:\"address\"}],name:\"PauserAdded\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,name:\"account\",type:\"address\"}],name:\"PauserRemoved\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,name:\"previousOwner\",type:\"address\"},{indexed:!0,name:\"newOwner\",type:\"address\"}],name:\"OwnershipTransferred\",type:\"event\"}],[e.ContractName.CollectionFactory]:[{inputs:[{internalType:\"address\",name:\"_owner\",type:\"address\"},{internalType:\"address\",name:\"_implementation\",type:\"address\"}],stateMutability:\"nonpayable\",type:\"constructor\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"_implementation\",type:\"address\"},{indexed:!1,internalType:\"bytes32\",name:\"_codeHash\",type:\"bytes32\"},{indexed:!1,internalType:\"bytes\",name:\"_code\",type:\"bytes\"}],name:\"ImplementationSet\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"previousOwner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"OwnershipTransferred\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"_address\",type:\"address\"},{indexed:!1,internalType:\"bytes32\",name:\"_salt\",type:\"bytes32\"}],name:\"ProxyCreated\",type:\"event\"},{inputs:[],name:\"code\",outputs:[{internalType:\"bytes\",name:\"\",type:\"bytes\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"codeHash\",outputs:[{internalType:\"bytes32\",name:\"\",type:\"bytes32\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],name:\"collections\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"collectionsSize\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"bytes32\",name:\"_salt\",type:\"bytes32\"},{internalType:\"bytes\",name:\"_data\",type:\"bytes\"}],name:\"createCollection\",outputs:[{internalType:\"address\",name:\"addr\",type:\"address\"}],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"bytes32\",name:\"_salt\",type:\"bytes32\"},{internalType:\"address\",name:\"_address\",type:\"address\"},{internalType:\"bytes\",name:\"_data\",type:\"bytes\"}],name:\"getAddress\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"implementation\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"\",type:\"address\"}],name:\"isCollectionFromFactory\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"owner\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"renounceOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"transferOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"}],[e.ContractName.CollectionManager]:[{inputs:[{internalType:\"address\",name:\"_owner\",type:\"address\"},{internalType:\"contract IERC20\",name:\"_acceptedToken\",type:\"address\"},{internalType:\"address\",name:\"_committee\",type:\"address\"},{internalType:\"address\",name:\"_feesCollector\",type:\"address\"},{internalType:\"contract IRarities\",name:\"_rarities\",type:\"address\"},{internalType:\"bytes4[]\",name:\"_committeeMethods\",type:\"bytes4[]\"},{internalType:\"bool[]\",name:\"_committeeValues\",type:\"bool[]\"}],stateMutability:\"nonpayable\",type:\"constructor\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"contract IERC20\",name:\"_oldAcceptedToken\",type:\"address\"},{indexed:!0,internalType:\"contract IERC20\",name:\"_newAcceptedToken\",type:\"address\"}],name:\"AcceptedTokenSet\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"bytes4\",name:\"_method\",type:\"bytes4\"},{indexed:!1,internalType:\"bool\",name:\"_isAllowed\",type:\"bool\"}],name:\"CommitteeMethodSet\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"_oldCommittee\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"_newCommittee\",type:\"address\"}],name:\"CommitteeSet\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"_oldFeesCollector\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"_newFeesCollector\",type:\"address\"}],name:\"FeesCollectorSet\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"address\",name:\"userAddress\",type:\"address\"},{indexed:!1,internalType:\"address\",name:\"relayerAddress\",type:\"address\"},{indexed:!1,internalType:\"bytes\",name:\"functionSignature\",type:\"bytes\"}],name:\"MetaTransactionExecuted\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"previousOwner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"OwnershipTransferred\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"contract IRarities\",name:\"_oldRarities\",type:\"address\"},{indexed:!0,internalType:\"contract IRarities\",name:\"_newRarities\",type:\"address\"}],name:\"RaritiesSet\",type:\"event\"},{inputs:[],name:\"acceptedToken\",outputs:[{internalType:\"contract IERC20\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"bytes4\",name:\"\",type:\"bytes4\"}],name:\"allowedCommitteeMethods\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"committee\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"contract IForwarder\",name:\"_forwarder\",type:\"address\"},{internalType:\"contract IERC721CollectionFactoryV2\",name:\"_factory\",type:\"address\"},{internalType:\"bytes32\",name:\"_salt\",type:\"bytes32\"},{internalType:\"string\",name:\"_name\",type:\"string\"},{internalType:\"string\",name:\"_symbol\",type:\"string\"},{internalType:\"string\",name:\"_baseURI\",type:\"string\"},{internalType:\"address\",name:\"_creator\",type:\"address\"},{components:[{internalType:\"string\",name:\"rarity\",type:\"string\"},{internalType:\"uint256\",name:\"price\",type:\"uint256\"},{internalType:\"address\",name:\"beneficiary\",type:\"address\"},{internalType:\"string\",name:\"metadata\",type:\"string\"}],internalType:\"struct IERC721CollectionV2.ItemParam[]\",name:\"_items\",type:\"tuple[]\"}],name:\"createCollection\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[],name:\"domainSeparator\",outputs:[{internalType:\"bytes32\",name:\"\",type:\"bytes32\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"userAddress\",type:\"address\"},{internalType:\"bytes\",name:\"functionSignature\",type:\"bytes\"},{internalType:\"bytes32\",name:\"sigR\",type:\"bytes32\"},{internalType:\"bytes32\",name:\"sigS\",type:\"bytes32\"},{internalType:\"uint8\",name:\"sigV\",type:\"uint8\"}],name:\"executeMetaTransaction\",outputs:[{internalType:\"bytes\",name:\"\",type:\"bytes\"}],stateMutability:\"payable\",type:\"function\"},{inputs:[],name:\"feesCollector\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"getChainId\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"pure\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"user\",type:\"address\"}],name:\"getNonce\",outputs:[{internalType:\"uint256\",name:\"nonce\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"contract IForwarder\",name:\"_forwarder\",type:\"address\"},{internalType:\"contract IERC721CollectionV2\",name:\"_collection\",type:\"address\"},{internalType:\"bytes\",name:\"_data\",type:\"bytes\"}],name:\"manageCollection\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[],name:\"owner\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"pricePerItem\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"rarities\",outputs:[{internalType:\"contract IRarities\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"renounceOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"contract IERC20\",name:\"_newAcceptedToken\",type:\"address\"}],name:\"setAcceptedToken\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"_newCommittee\",type:\"address\"}],name:\"setCommittee\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"bytes4[]\",name:\"_methods\",type:\"bytes4[]\"},{internalType:\"bool[]\",name:\"_values\",type:\"bool[]\"}],name:\"setCommitteeMethods\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"_newFeesCollector\",type:\"address\"}],name:\"setFeesCollector\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"contract IRarities\",name:\"_newRarities\",type:\"address\"}],name:\"setRarities\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"transferOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"}],[e.ContractName.CollectionStore]:[{inputs:[{internalType:\"address\",name:\"_owner\",type:\"address\"},{internalType:\"contract IERC20\",name:\"_acceptedToken\",type:\"address\"},{internalType:\"address\",name:\"_feeOwner\",type:\"address\"},{internalType:\"uint256\",name:\"_fee\",type:\"uint256\"}],stateMutability:\"nonpayable\",type:\"constructor\"},{anonymous:!1,inputs:[{components:[{internalType:\"contract IERC721CollectionV2\",name:\"collection\",type:\"address\"},{internalType:\"uint256[]\",name:\"ids\",type:\"uint256[]\"},{internalType:\"uint256[]\",name:\"prices\",type:\"uint256[]\"},{internalType:\"address[]\",name:\"beneficiaries\",type:\"address[]\"}],indexed:!1,internalType:\"struct CollectionStore.ItemToBuy[]\",name:\"_itemsToBuy\",type:\"tuple[]\"}],name:\"Bought\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"address\",name:\"userAddress\",type:\"address\"},{indexed:!1,internalType:\"address\",name:\"relayerAddress\",type:\"address\"},{indexed:!1,internalType:\"bytes\",name:\"functionSignature\",type:\"bytes\"}],name:\"MetaTransactionExecuted\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"previousOwner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"OwnershipTransferred\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"uint256\",name:\"_oldFee\",type:\"uint256\"},{indexed:!1,internalType:\"uint256\",name:\"_newFee\",type:\"uint256\"}],name:\"SetFee\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"_oldFeeOwner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"_newFeeOwner\",type:\"address\"}],name:\"SetFeeOwner\",type:\"event\"},{inputs:[],name:\"BASE_FEE\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"acceptedToken\",outputs:[{internalType:\"contract IERC20\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{components:[{internalType:\"contract IERC721CollectionV2\",name:\"collection\",type:\"address\"},{internalType:\"uint256[]\",name:\"ids\",type:\"uint256[]\"},{internalType:\"uint256[]\",name:\"prices\",type:\"uint256[]\"},{internalType:\"address[]\",name:\"beneficiaries\",type:\"address[]\"}],internalType:\"struct CollectionStore.ItemToBuy[]\",name:\"_itemsToBuy\",type:\"tuple[]\"}],name:\"buy\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[],name:\"domainSeparator\",outputs:[{internalType:\"bytes32\",name:\"\",type:\"bytes32\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"userAddress\",type:\"address\"},{internalType:\"bytes\",name:\"functionSignature\",type:\"bytes\"},{internalType:\"bytes32\",name:\"sigR\",type:\"bytes32\"},{internalType:\"bytes32\",name:\"sigS\",type:\"bytes32\"},{internalType:\"uint8\",name:\"sigV\",type:\"uint8\"}],name:\"executeMetaTransaction\",outputs:[{internalType:\"bytes\",name:\"\",type:\"bytes\"}],stateMutability:\"payable\",type:\"function\"},{inputs:[],name:\"fee\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"feeOwner\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"getChainId\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"pure\",type:\"function\"},{inputs:[{internalType:\"contract IERC721CollectionV2\",name:\"_collection\",type:\"address\"},{internalType:\"uint256\",name:\"_itemId\",type:\"uint256\"}],name:\"getItemBuyData\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"},{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"user\",type:\"address\"}],name:\"getNonce\",outputs:[{internalType:\"uint256\",name:\"nonce\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"owner\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"renounceOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"_newFee\",type:\"uint256\"}],name:\"setFee\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"_newFeeOwner\",type:\"address\"}],name:\"setFeeOwner\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"transferOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"}],[e.ContractName.Committee]:[{inputs:[{internalType:\"address\",name:\"_owner\",type:\"address\"},{internalType:\"address[]\",name:\"_members\",type:\"address[]\"}],stateMutability:\"nonpayable\",type:\"constructor\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"_member\",type:\"address\"},{indexed:!1,internalType:\"bool\",name:\"_value\",type:\"bool\"}],name:\"MemberSet\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"address\",name:\"userAddress\",type:\"address\"},{indexed:!1,internalType:\"address\",name:\"relayerAddress\",type:\"address\"},{indexed:!1,internalType:\"bytes\",name:\"functionSignature\",type:\"bytes\"}],name:\"MetaTransactionExecuted\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"previousOwner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"OwnershipTransferred\",type:\"event\"},{inputs:[],name:\"domainSeparator\",outputs:[{internalType:\"bytes32\",name:\"\",type:\"bytes32\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"userAddress\",type:\"address\"},{internalType:\"bytes\",name:\"functionSignature\",type:\"bytes\"},{internalType:\"bytes32\",name:\"sigR\",type:\"bytes32\"},{internalType:\"bytes32\",name:\"sigS\",type:\"bytes32\"},{internalType:\"uint8\",name:\"sigV\",type:\"uint8\"}],name:\"executeMetaTransaction\",outputs:[{internalType:\"bytes\",name:\"\",type:\"bytes\"}],stateMutability:\"payable\",type:\"function\"},{inputs:[],name:\"getChainId\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"pure\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"user\",type:\"address\"}],name:\"getNonce\",outputs:[{internalType:\"uint256\",name:\"nonce\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"contract ICollectionManager\",name:\"_collectionManager\",type:\"address\"},{internalType:\"address\",name:\"_forwarder\",type:\"address\"},{internalType:\"address\",name:\"_collection\",type:\"address\"},{internalType:\"bytes\",name:\"_data\",type:\"bytes\"}],name:\"manageCollection\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"\",type:\"address\"}],name:\"members\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"owner\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"renounceOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address[]\",name:\"_members\",type:\"address[]\"},{internalType:\"bool[]\",name:\"_values\",type:\"bool[]\"}],name:\"setMembers\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"transferOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"}],[e.ContractName.ERC20]:[{constant:!0,inputs:[],name:\"mintingFinished\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"name\",outputs:[{name:\"\",type:\"string\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"_spender\",type:\"address\"},{name:\"_value\",type:\"uint256\"}],name:\"approve\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[],name:\"totalSupply\",outputs:[{name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"_from\",type:\"address\"},{name:\"_to\",type:\"address\"},{name:\"_value\",type:\"uint256\"}],name:\"transferFrom\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[],name:\"decimals\",outputs:[{name:\"\",type:\"uint8\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[],name:\"unpause\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!1,inputs:[{name:\"_to\",type:\"address\"},{name:\"_amount\",type:\"uint256\"}],name:\"mint\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!1,inputs:[{name:\"_value\",type:\"uint256\"}],name:\"burn\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[],name:\"paused\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[{name:\"_owner\",type:\"address\"}],name:\"balanceOf\",outputs:[{name:\"balance\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[],name:\"finishMinting\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!1,inputs:[],name:\"pause\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[],name:\"owner\",outputs:[{name:\"\",type:\"address\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"symbol\",outputs:[{name:\"\",type:\"string\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"_to\",type:\"address\"},{name:\"_value\",type:\"uint256\"}],name:\"transfer\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[{name:\"_owner\",type:\"address\"},{name:\"_spender\",type:\"address\"}],name:\"allowance\",outputs:[{name:\"remaining\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"to\",type:\"address\"},{name:\"amount\",type:\"uint256\"}],name:\"setBalance\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!1,inputs:[{name:\"newOwner\",type:\"address\"}],name:\"transferOwnership\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{anonymous:!1,inputs:[{indexed:!0,name:\"to\",type:\"address\"},{indexed:!1,name:\"amount\",type:\"uint256\"}],name:\"Mint\",type:\"event\"},{anonymous:!1,inputs:[],name:\"MintFinished\",type:\"event\"},{anonymous:!1,inputs:[],name:\"Pause\",type:\"event\"},{anonymous:!1,inputs:[],name:\"Unpause\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,name:\"burner\",type:\"address\"},{indexed:!1,name:\"value\",type:\"uint256\"}],name:\"Burn\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,name:\"owner\",type:\"address\"},{indexed:!0,name:\"spender\",type:\"address\"},{indexed:!1,name:\"value\",type:\"uint256\"}],name:\"Approval\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,name:\"from\",type:\"address\"},{indexed:!0,name:\"to\",type:\"address\"},{indexed:!1,name:\"value\",type:\"uint256\"}],name:\"Transfer\",type:\"event\"}],[e.ContractName.ERC721]:[{constant:!0,inputs:[{name:\"_interfaceId\",type:\"bytes4\"}],name:\"supportsInterface\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"name\",outputs:[{name:\"\",type:\"string\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[{name:\"_tokenId\",type:\"uint256\"}],name:\"getApproved\",outputs:[{name:\"\",type:\"address\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"_to\",type:\"address\"},{name:\"_tokenId\",type:\"uint256\"}],name:\"approve\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[],name:\"totalSupply\",outputs:[{name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"InterfaceId_ERC165\",outputs:[{name:\"\",type:\"bytes4\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"_from\",type:\"address\"},{name:\"_to\",type:\"address\"},{name:\"_tokenId\",type:\"uint256\"}],name:\"transferFrom\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!1,inputs:[{name:\"_to\",type:\"address\"},{name:\"_tokenId\",type:\"uint256\"}],name:\"transfer\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[{name:\"_owner\",type:\"address\"},{name:\"_index\",type:\"uint256\"}],name:\"tokenOfOwnerByIndex\",outputs:[{name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"_from\",type:\"address\"},{name:\"_to\",type:\"address\"},{name:\"_tokenId\",type:\"uint256\"}],name:\"safeTransferFrom\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[{name:\"_tokenId\",type:\"uint256\"}],name:\"exists\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[{name:\"_index\",type:\"uint256\"}],name:\"tokenByIndex\",outputs:[{name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[{name:\"_tokenId\",type:\"uint256\"}],name:\"ownerOf\",outputs:[{name:\"\",type:\"address\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[{name:\"_owner\",type:\"address\"}],name:\"balanceOf\",outputs:[{name:\"\",type:\"uint256\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[],name:\"symbol\",outputs:[{name:\"\",type:\"string\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!1,inputs:[{name:\"_to\",type:\"address\"},{name:\"_approved\",type:\"bool\"}],name:\"setApprovalForAll\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!1,inputs:[{name:\"_from\",type:\"address\"},{name:\"_to\",type:\"address\"},{name:\"_tokenId\",type:\"uint256\"},{name:\"_data\",type:\"bytes\"}],name:\"safeTransferFrom\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"},{constant:!0,inputs:[{name:\"_tokenId\",type:\"uint256\"}],name:\"tokenURI\",outputs:[{name:\"\",type:\"string\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{constant:!0,inputs:[{name:\"_owner\",type:\"address\"},{name:\"_operator\",type:\"address\"}],name:\"isApprovedForAll\",outputs:[{name:\"\",type:\"bool\"}],payable:!1,stateMutability:\"view\",type:\"function\"},{inputs:[{name:\"_name\",type:\"string\"},{name:\"_symbol\",type:\"string\"}],payable:!1,stateMutability:\"nonpayable\",type:\"constructor\"},{anonymous:!1,inputs:[{indexed:!0,name:\"_from\",type:\"address\"},{indexed:!0,name:\"_to\",type:\"address\"},{indexed:!0,name:\"_tokenId\",type:\"uint256\"}],name:\"Transfer\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,name:\"_owner\",type:\"address\"},{indexed:!0,name:\"_approved\",type:\"address\"},{indexed:!0,name:\"_tokenId\",type:\"uint256\"}],name:\"Approval\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,name:\"_owner\",type:\"address\"},{indexed:!0,name:\"_operator\",type:\"address\"},{indexed:!1,name:\"_approved\",type:\"bool\"}],name:\"ApprovalForAll\",type:\"event\"},{constant:!1,inputs:[{name:\"_to\",type:\"address\"},{name:\"_tokenId\",type:\"uint256\"},{name:\"_tokenURI\",type:\"string\"}],name:\"mintUniqueTokenTo\",outputs:[],payable:!1,stateMutability:\"nonpayable\",type:\"function\"}],[e.ContractName.ERC721CollectionV2]:[{inputs:[],stateMutability:\"nonpayable\",type:\"constructor\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"uint256\",name:\"_itemId\",type:\"uint256\"},{components:[{internalType:\"string\",name:\"rarity\",type:\"string\"},{internalType:\"uint256\",name:\"maxSupply\",type:\"uint256\"},{internalType:\"uint256\",name:\"totalSupply\",type:\"uint256\"},{internalType:\"uint256\",name:\"price\",type:\"uint256\"},{internalType:\"address\",name:\"beneficiary\",type:\"address\"},{internalType:\"string\",name:\"metadata\",type:\"string\"},{internalType:\"string\",name:\"contentHash\",type:\"string\"}],indexed:!1,internalType:\"struct ERC721BaseCollectionV2.Item\",name:\"_item\",type:\"tuple\"}],name:\"AddItem\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"owner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"approved\",type:\"address\"},{indexed:!0,internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"Approval\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"owner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"operator\",type:\"address\"},{indexed:!1,internalType:\"bool\",name:\"approved\",type:\"bool\"}],name:\"ApprovalForAll\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"string\",name:\"_oldBaseURI\",type:\"string\"},{indexed:!1,internalType:\"string\",name:\"_newBaseURI\",type:\"string\"}],name:\"BaseURI\",type:\"event\"},{anonymous:!1,inputs:[],name:\"Complete\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"_previousCreator\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"_newCreator\",type:\"address\"}],name:\"CreatorshipTransferred\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"_beneficiary\",type:\"address\"},{indexed:!0,internalType:\"uint256\",name:\"_tokenId\",type:\"uint256\"},{indexed:!0,internalType:\"uint256\",name:\"_itemId\",type:\"uint256\"},{indexed:!1,internalType:\"uint256\",name:\"_issuedId\",type:\"uint256\"},{indexed:!1,internalType:\"address\",name:\"_caller\",type:\"address\"}],name:\"Issue\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"address\",name:\"userAddress\",type:\"address\"},{indexed:!1,internalType:\"address\",name:\"relayerAddress\",type:\"address\"},{indexed:!1,internalType:\"bytes\",name:\"functionSignature\",type:\"bytes\"}],name:\"MetaTransactionExecuted\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"previousOwner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"OwnershipTransferred\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"uint256\",name:\"_itemId\",type:\"uint256\"},{indexed:!1,internalType:\"string\",name:\"_contentHash\",type:\"string\"},{indexed:!1,internalType:\"string\",name:\"_metadata\",type:\"string\"}],name:\"RescueItem\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"bool\",name:\"_previousValue\",type:\"bool\"},{indexed:!1,internalType:\"bool\",name:\"_newValue\",type:\"bool\"}],name:\"SetApproved\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"bool\",name:\"_previousValue\",type:\"bool\"},{indexed:!1,internalType:\"bool\",name:\"_newValue\",type:\"bool\"}],name:\"SetEditable\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"_manager\",type:\"address\"},{indexed:!1,internalType:\"bool\",name:\"_value\",type:\"bool\"}],name:\"SetGlobalManager\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"_minter\",type:\"address\"},{indexed:!1,internalType:\"bool\",name:\"_value\",type:\"bool\"}],name:\"SetGlobalMinter\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"uint256\",name:\"_itemId\",type:\"uint256\"},{indexed:!0,internalType:\"address\",name:\"_manager\",type:\"address\"},{indexed:!1,internalType:\"bool\",name:\"_value\",type:\"bool\"}],name:\"SetItemManager\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"uint256\",name:\"_itemId\",type:\"uint256\"},{indexed:!0,internalType:\"address\",name:\"_minter\",type:\"address\"},{indexed:!1,internalType:\"uint256\",name:\"_value\",type:\"uint256\"}],name:\"SetItemMinter\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"from\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"to\",type:\"address\"},{indexed:!0,internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"Transfer\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"uint256\",name:\"_itemId\",type:\"uint256\"},{indexed:!1,internalType:\"uint256\",name:\"_price\",type:\"uint256\"},{indexed:!1,internalType:\"address\",name:\"_beneficiary\",type:\"address\"},{indexed:!1,internalType:\"string\",name:\"_metadata\",type:\"string\"}],name:\"UpdateItemData\",type:\"event\"},{inputs:[],name:\"COLLECTION_HASH\",outputs:[{internalType:\"bytes32\",name:\"\",type:\"bytes32\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"ISSUED_ID_BITS\",outputs:[{internalType:\"uint8\",name:\"\",type:\"uint8\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"ITEM_ID_BITS\",outputs:[{internalType:\"uint8\",name:\"\",type:\"uint8\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"MAX_ISSUED_ID\",outputs:[{internalType:\"uint216\",name:\"\",type:\"uint216\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"MAX_ITEM_ID\",outputs:[{internalType:\"uint40\",name:\"\",type:\"uint40\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{components:[{internalType:\"string\",name:\"rarity\",type:\"string\"},{internalType:\"uint256\",name:\"price\",type:\"uint256\"},{internalType:\"address\",name:\"beneficiary\",type:\"address\"},{internalType:\"string\",name:\"metadata\",type:\"string\"}],internalType:\"struct ERC721BaseCollectionV2.ItemParam[]\",name:\"_items\",type:\"tuple[]\"}],name:\"addItems\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"to\",type:\"address\"},{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"approve\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"owner\",type:\"address\"}],name:\"balanceOf\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"baseURI\",outputs:[{internalType:\"string\",name:\"\",type:\"string\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"_from\",type:\"address\"},{internalType:\"address\",name:\"_to\",type:\"address\"},{internalType:\"uint256[]\",name:\"_tokenIds\",type:\"uint256[]\"}],name:\"batchTransferFrom\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[],name:\"completeCollection\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[],name:\"createdAt\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"creator\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"_id\",type:\"uint256\"}],name:\"decodeTokenId\",outputs:[{internalType:\"uint256\",name:\"itemId\",type:\"uint256\"},{internalType:\"uint256\",name:\"issuedId\",type:\"uint256\"}],stateMutability:\"pure\",type:\"function\"},{inputs:[],name:\"domainSeparator\",outputs:[{internalType:\"bytes32\",name:\"\",type:\"bytes32\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"uint256[]\",name:\"_itemIds\",type:\"uint256[]\"},{internalType:\"uint256[]\",name:\"_prices\",type:\"uint256[]\"},{internalType:\"address[]\",name:\"_beneficiaries\",type:\"address[]\"},{internalType:\"string[]\",name:\"_metadatas\",type:\"string[]\"}],name:\"editItemsData\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"_itemId\",type:\"uint256\"},{internalType:\"uint256\",name:\"_issuedId\",type:\"uint256\"}],name:\"encodeTokenId\",outputs:[{internalType:\"uint256\",name:\"id\",type:\"uint256\"}],stateMutability:\"pure\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"userAddress\",type:\"address\"},{internalType:\"bytes\",name:\"functionSignature\",type:\"bytes\"},{internalType:\"bytes32\",name:\"sigR\",type:\"bytes32\"},{internalType:\"bytes32\",name:\"sigS\",type:\"bytes32\"},{internalType:\"uint8\",name:\"sigV\",type:\"uint8\"}],name:\"executeMetaTransaction\",outputs:[{internalType:\"bytes\",name:\"\",type:\"bytes\"}],stateMutability:\"payable\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"getApproved\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"getChainId\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"pure\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"user\",type:\"address\"}],name:\"getNonce\",outputs:[{internalType:\"uint256\",name:\"nonce\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"\",type:\"address\"}],name:\"globalManagers\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"\",type:\"address\"}],name:\"globalMinters\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"initImplementation\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"string\",name:\"_name\",type:\"string\"},{internalType:\"string\",name:\"_symbol\",type:\"string\"},{internalType:\"string\",name:\"_baseURI\",type:\"string\"},{internalType:\"address\",name:\"_creator\",type:\"address\"},{internalType:\"bool\",name:\"_shouldComplete\",type:\"bool\"},{internalType:\"bool\",name:\"_isApproved\",type:\"bool\"},{internalType:\"contract IRarities\",name:\"_rarities\",type:\"address\"},{components:[{internalType:\"string\",name:\"rarity\",type:\"string\"},{internalType:\"uint256\",name:\"price\",type:\"uint256\"},{internalType:\"address\",name:\"beneficiary\",type:\"address\"},{internalType:\"string\",name:\"metadata\",type:\"string\"}],internalType:\"struct ERC721BaseCollectionV2.ItemParam[]\",name:\"_items\",type:\"tuple[]\"}],name:\"initialize\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[],name:\"isApproved\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"owner\",type:\"address\"},{internalType:\"address\",name:\"operator\",type:\"address\"}],name:\"isApprovedForAll\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"isCompleted\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"isEditable\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"isInitialized\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"isMintingAllowed\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address[]\",name:\"_beneficiaries\",type:\"address[]\"},{internalType:\"uint256[]\",name:\"_itemIds\",type:\"uint256[]\"}],name:\"issueTokens\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"},{internalType:\"address\",name:\"\",type:\"address\"}],name:\"itemManagers\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"},{internalType:\"address\",name:\"\",type:\"address\"}],name:\"itemMinters\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],name:\"items\",outputs:[{internalType:\"string\",name:\"rarity\",type:\"string\"},{internalType:\"uint256\",name:\"maxSupply\",type:\"uint256\"},{internalType:\"uint256\",name:\"totalSupply\",type:\"uint256\"},{internalType:\"uint256\",name:\"price\",type:\"uint256\"},{internalType:\"address\",name:\"beneficiary\",type:\"address\"},{internalType:\"string\",name:\"metadata\",type:\"string\"},{internalType:\"string\",name:\"contentHash\",type:\"string\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"itemsCount\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"name\",outputs:[{internalType:\"string\",name:\"\",type:\"string\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"owner\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"ownerOf\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"rarities\",outputs:[{internalType:\"contract IRarities\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"renounceOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"uint256[]\",name:\"_itemIds\",type:\"uint256[]\"},{internalType:\"string[]\",name:\"_contentHashes\",type:\"string[]\"},{internalType:\"string[]\",name:\"_metadatas\",type:\"string[]\"}],name:\"rescueItems\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"_from\",type:\"address\"},{internalType:\"address\",name:\"_to\",type:\"address\"},{internalType:\"uint256[]\",name:\"_tokenIds\",type:\"uint256[]\"},{internalType:\"bytes\",name:\"_data\",type:\"bytes\"}],name:\"safeBatchTransferFrom\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"from\",type:\"address\"},{internalType:\"address\",name:\"to\",type:\"address\"},{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"safeTransferFrom\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"from\",type:\"address\"},{internalType:\"address\",name:\"to\",type:\"address\"},{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"},{internalType:\"bytes\",name:\"_data\",type:\"bytes\"}],name:\"safeTransferFrom\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"operator\",type:\"address\"},{internalType:\"bool\",name:\"approved\",type:\"bool\"}],name:\"setApprovalForAll\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"bool\",name:\"_value\",type:\"bool\"}],name:\"setApproved\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"string\",name:\"_baseURI\",type:\"string\"}],name:\"setBaseURI\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"bool\",name:\"_value\",type:\"bool\"}],name:\"setEditable\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"uint256[]\",name:\"_itemIds\",type:\"uint256[]\"},{internalType:\"address[]\",name:\"_managers\",type:\"address[]\"},{internalType:\"bool[]\",name:\"_values\",type:\"bool[]\"}],name:\"setItemsManagers\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"uint256[]\",name:\"_itemIds\",type:\"uint256[]\"},{internalType:\"address[]\",name:\"_minters\",type:\"address[]\"},{internalType:\"uint256[]\",name:\"_values\",type:\"uint256[]\"}],name:\"setItemsMinters\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address[]\",name:\"_managers\",type:\"address[]\"},{internalType:\"bool[]\",name:\"_values\",type:\"bool[]\"}],name:\"setManagers\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address[]\",name:\"_minters\",type:\"address[]\"},{internalType:\"bool[]\",name:\"_values\",type:\"bool[]\"}],name:\"setMinters\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"bytes4\",name:\"interfaceId\",type:\"bytes4\"}],name:\"supportsInterface\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"symbol\",outputs:[{internalType:\"string\",name:\"\",type:\"string\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"index\",type:\"uint256\"}],name:\"tokenByIndex\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"owner\",type:\"address\"},{internalType:\"uint256\",name:\"index\",type:\"uint256\"}],name:\"tokenOfOwnerByIndex\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"_tokenId\",type:\"uint256\"}],name:\"tokenURI\",outputs:[{internalType:\"string\",name:\"\",type:\"string\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"totalSupply\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"_newCreator\",type:\"address\"}],name:\"transferCreatorship\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"from\",type:\"address\"},{internalType:\"address\",name:\"to\",type:\"address\"},{internalType:\"uint256\",name:\"tokenId\",type:\"uint256\"}],name:\"transferFrom\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"transferOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"}],[e.ContractName.Forwarder]:[{inputs:[{internalType:\"address\",name:\"_owner\",type:\"address\"},{internalType:\"address\",name:\"_caller\",type:\"address\"}],stateMutability:\"nonpayable\",type:\"constructor\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"_oldCaller\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"_newCaller\",type:\"address\"}],name:\"CallerSet\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"previousOwner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"OwnershipTransferred\",type:\"event\"},{inputs:[],name:\"caller\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"_target\",type:\"address\"},{internalType:\"bytes\",name:\"_data\",type:\"bytes\"}],name:\"forwardCall\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"},{internalType:\"bytes\",name:\"\",type:\"bytes\"}],stateMutability:\"payable\",type:\"function\"},{inputs:[],name:\"owner\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"renounceOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"_newCaller\",type:\"address\"}],name:\"setCaller\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"transferOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"}],[e.ContractName.MANAToken]:[{type:\"constructor\",stateMutability:\"nonpayable\",inputs:[]},{type:\"event\",name:\"Approval\",inputs:[{type:\"address\",name:\"owner\",internalType:\"address\",indexed:!0},{type:\"address\",name:\"spender\",internalType:\"address\",indexed:!0},{type:\"uint256\",name:\"value\",internalType:\"uint256\",indexed:!1}],anonymous:!1},{type:\"event\",name:\"MetaTransactionExecuted\",inputs:[{type:\"address\",name:\"userAddress\",internalType:\"address\",indexed:!1},{type:\"address\",name:\"relayerAddress\",internalType:\"address payable\",indexed:!1},{type:\"bytes\",name:\"functionSignature\",internalType:\"bytes\",indexed:!1}],anonymous:!1},{type:\"event\",name:\"RoleAdminChanged\",inputs:[{type:\"bytes32\",name:\"role\",internalType:\"bytes32\",indexed:!0},{type:\"bytes32\",name:\"previousAdminRole\",internalType:\"bytes32\",indexed:!0},{type:\"bytes32\",name:\"newAdminRole\",internalType:\"bytes32\",indexed:!0}],anonymous:!1},{type:\"event\",name:\"RoleGranted\",inputs:[{type:\"bytes32\",name:\"role\",internalType:\"bytes32\",indexed:!0},{type:\"address\",name:\"account\",internalType:\"address\",indexed:!0},{type:\"address\",name:\"sender\",internalType:\"address\",indexed:!0}],anonymous:!1},{type:\"event\",name:\"RoleRevoked\",inputs:[{type:\"bytes32\",name:\"role\",internalType:\"bytes32\",indexed:!0},{type:\"address\",name:\"account\",internalType:\"address\",indexed:!0},{type:\"address\",name:\"sender\",internalType:\"address\",indexed:!0}],anonymous:!1},{type:\"event\",name:\"Transfer\",inputs:[{type:\"address\",name:\"from\",internalType:\"address\",indexed:!0},{type:\"address\",name:\"to\",internalType:\"address\",indexed:!0},{type:\"uint256\",name:\"value\",internalType:\"uint256\",indexed:!1}],anonymous:!1},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"uint256\",name:\"\",internalType:\"uint256\"}],name:\"CHILD_CHAIN_ID\",inputs:[]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"bytes\",name:\"\",internalType:\"bytes\"}],name:\"CHILD_CHAIN_ID_BYTES\",inputs:[]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"bytes32\",name:\"\",internalType:\"bytes32\"}],name:\"DEFAULT_ADMIN_ROLE\",inputs:[]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"bytes32\",name:\"\",internalType:\"bytes32\"}],name:\"DEPOSITOR_ROLE\",inputs:[]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"string\",name:\"\",internalType:\"string\"}],name:\"ERC712_VERSION\",inputs:[]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"uint256\",name:\"\",internalType:\"uint256\"}],name:\"ROOT_CHAIN_ID\",inputs:[]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"bytes\",name:\"\",internalType:\"bytes\"}],name:\"ROOT_CHAIN_ID_BYTES\",inputs:[]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"uint256\",name:\"\",internalType:\"uint256\"}],name:\"allowance\",inputs:[{type:\"address\",name:\"owner\",internalType:\"address\"},{type:\"address\",name:\"spender\",internalType:\"address\"}]},{type:\"function\",stateMutability:\"nonpayable\",outputs:[{type:\"bool\",name:\"\",internalType:\"bool\"}],name:\"approve\",inputs:[{type:\"address\",name:\"spender\",internalType:\"address\"},{type:\"uint256\",name:\"amount\",internalType:\"uint256\"}]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"uint256\",name:\"\",internalType:\"uint256\"}],name:\"balanceOf\",inputs:[{type:\"address\",name:\"account\",internalType:\"address\"}]},{type:\"function\",stateMutability:\"nonpayable\",outputs:[],name:\"changeName\",inputs:[{type:\"string\",name:\"name_\",internalType:\"string\"}]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"uint8\",name:\"\",internalType:\"uint8\"}],name:\"decimals\",inputs:[]},{type:\"function\",stateMutability:\"nonpayable\",outputs:[{type:\"bool\",name:\"\",internalType:\"bool\"}],name:\"decreaseAllowance\",inputs:[{type:\"address\",name:\"spender\",internalType:\"address\"},{type:\"uint256\",name:\"subtractedValue\",internalType:\"uint256\"}]},{type:\"function\",stateMutability:\"nonpayable\",outputs:[],name:\"deposit\",inputs:[{type:\"address\",name:\"user\",internalType:\"address\"},{type:\"bytes\",name:\"depositData\",internalType:\"bytes\"}]},{type:\"function\",stateMutability:\"payable\",outputs:[{type:\"bytes\",name:\"\",internalType:\"bytes\"}],name:\"executeMetaTransaction\",inputs:[{type:\"address\",name:\"userAddress\",internalType:\"address\"},{type:\"bytes\",name:\"functionSignature\",internalType:\"bytes\"},{type:\"bytes32\",name:\"sigR\",internalType:\"bytes32\"},{type:\"bytes32\",name:\"sigS\",internalType:\"bytes32\"},{type:\"uint8\",name:\"sigV\",internalType:\"uint8\"}]},{type:\"function\",stateMutability:\"pure\",outputs:[{type:\"uint256\",name:\"\",internalType:\"uint256\"}],name:\"getChainId\",inputs:[]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"bytes32\",name:\"\",internalType:\"bytes32\"}],name:\"getDomainSeperator\",inputs:[]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"uint256\",name:\"nonce\",internalType:\"uint256\"}],name:\"getNonce\",inputs:[{type:\"address\",name:\"user\",internalType:\"address\"}]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"bytes32\",name:\"\",internalType:\"bytes32\"}],name:\"getRoleAdmin\",inputs:[{type:\"bytes32\",name:\"role\",internalType:\"bytes32\"}]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"address\",name:\"\",internalType:\"address\"}],name:\"getRoleMember\",inputs:[{type:\"bytes32\",name:\"role\",internalType:\"bytes32\"},{type:\"uint256\",name:\"index\",internalType:\"uint256\"}]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"uint256\",name:\"\",internalType:\"uint256\"}],name:\"getRoleMemberCount\",inputs:[{type:\"bytes32\",name:\"role\",internalType:\"bytes32\"}]},{type:\"function\",stateMutability:\"nonpayable\",outputs:[],name:\"grantRole\",inputs:[{type:\"bytes32\",name:\"role\",internalType:\"bytes32\"},{type:\"address\",name:\"account\",internalType:\"address\"}]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"bool\",name:\"\",internalType:\"bool\"}],name:\"hasRole\",inputs:[{type:\"bytes32\",name:\"role\",internalType:\"bytes32\"},{type:\"address\",name:\"account\",internalType:\"address\"}]},{type:\"function\",stateMutability:\"nonpayable\",outputs:[{type:\"bool\",name:\"\",internalType:\"bool\"}],name:\"increaseAllowance\",inputs:[{type:\"address\",name:\"spender\",internalType:\"address\"},{type:\"uint256\",name:\"addedValue\",internalType:\"uint256\"}]},{type:\"function\",stateMutability:\"nonpayable\",outputs:[],name:\"initialize\",inputs:[{type:\"string\",name:\"name_\",internalType:\"string\"},{type:\"string\",name:\"symbol_\",internalType:\"string\"},{type:\"uint8\",name:\"decimals_\",internalType:\"uint8\"},{type:\"address\",name:\"childChainManager\",internalType:\"address\"}]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"string\",name:\"\",internalType:\"string\"}],name:\"name\",inputs:[]},{type:\"function\",stateMutability:\"nonpayable\",outputs:[],name:\"renounceRole\",inputs:[{type:\"bytes32\",name:\"role\",internalType:\"bytes32\"},{type:\"address\",name:\"account\",internalType:\"address\"}]},{type:\"function\",stateMutability:\"nonpayable\",outputs:[],name:\"revokeRole\",inputs:[{type:\"bytes32\",name:\"role\",internalType:\"bytes32\"},{type:\"address\",name:\"account\",internalType:\"address\"}]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"string\",name:\"\",internalType:\"string\"}],name:\"symbol\",inputs:[]},{type:\"function\",stateMutability:\"view\",outputs:[{type:\"uint256\",name:\"\",internalType:\"uint256\"}],name:\"totalSupply\",inputs:[]},{type:\"function\",stateMutability:\"nonpayable\",outputs:[{type:\"bool\",name:\"\",internalType:\"bool\"}],name:\"transfer\",inputs:[{type:\"address\",name:\"recipient\",internalType:\"address\"},{type:\"uint256\",name:\"amount\",internalType:\"uint256\"}]},{type:\"function\",stateMutability:\"nonpayable\",outputs:[{type:\"bool\",name:\"\",internalType:\"bool\"}],name:\"transferFrom\",inputs:[{type:\"address\",name:\"sender\",internalType:\"address\"},{type:\"address\",name:\"recipient\",internalType:\"address\"},{type:\"uint256\",name:\"amount\",internalType:\"uint256\"}]},{type:\"function\",stateMutability:\"nonpayable\",outputs:[],name:\"withdraw\",inputs:[{type:\"uint256\",name:\"amount\",internalType:\"uint256\"}]}],[e.ContractName.Marketplace]:[{inputs:[{internalType:\"address\",name:\"_acceptedToken\",type:\"address\"},{internalType:\"uint256\",name:\"_ownerCutPerMillion\",type:\"uint256\"},{internalType:\"address\",name:\"_owner\",type:\"address\"}],stateMutability:\"nonpayable\",type:\"constructor\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"uint256\",name:\"ownerCutPerMillion\",type:\"uint256\"}],name:\"ChangedOwnerCutPerMillion\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"uint256\",name:\"publicationFee\",type:\"uint256\"}],name:\"ChangedPublicationFee\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"address\",name:\"userAddress\",type:\"address\"},{indexed:!1,internalType:\"address\",name:\"relayerAddress\",type:\"address\"},{indexed:!1,internalType:\"bytes\",name:\"functionSignature\",type:\"bytes\"}],name:\"MetaTransactionExecuted\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"bytes32\",name:\"id\",type:\"bytes32\"},{indexed:!0,internalType:\"uint256\",name:\"assetId\",type:\"uint256\"},{indexed:!0,internalType:\"address\",name:\"seller\",type:\"address\"},{indexed:!1,internalType:\"address\",name:\"nftAddress\",type:\"address\"}],name:\"OrderCancelled\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"bytes32\",name:\"id\",type:\"bytes32\"},{indexed:!0,internalType:\"uint256\",name:\"assetId\",type:\"uint256\"},{indexed:!0,internalType:\"address\",name:\"seller\",type:\"address\"},{indexed:!1,internalType:\"address\",name:\"nftAddress\",type:\"address\"},{indexed:!1,internalType:\"uint256\",name:\"priceInWei\",type:\"uint256\"},{indexed:!1,internalType:\"uint256\",name:\"expiresAt\",type:\"uint256\"}],name:\"OrderCreated\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"bytes32\",name:\"id\",type:\"bytes32\"},{indexed:!0,internalType:\"uint256\",name:\"assetId\",type:\"uint256\"},{indexed:!0,internalType:\"address\",name:\"seller\",type:\"address\"},{indexed:!1,internalType:\"address\",name:\"nftAddress\",type:\"address\"},{indexed:!1,internalType:\"uint256\",name:\"totalPrice\",type:\"uint256\"},{indexed:!0,internalType:\"address\",name:\"buyer\",type:\"address\"}],name:\"OrderSuccessful\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"previousOwner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"OwnershipTransferred\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"address\",name:\"account\",type:\"address\"}],name:\"Paused\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"address\",name:\"account\",type:\"address\"}],name:\"Unpaused\",type:\"event\"},{inputs:[],name:\"ERC721_Interface\",outputs:[{internalType:\"bytes4\",name:\"\",type:\"bytes4\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"InterfaceId_ValidateFingerprint\",outputs:[{internalType:\"bytes4\",name:\"\",type:\"bytes4\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"acceptedToken\",outputs:[{internalType:\"contract ERC20Interface\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"nftAddress\",type:\"address\"},{internalType:\"uint256\",name:\"assetId\",type:\"uint256\"}],name:\"cancelOrder\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"nftAddress\",type:\"address\"},{internalType:\"uint256\",name:\"assetId\",type:\"uint256\"},{internalType:\"uint256\",name:\"priceInWei\",type:\"uint256\"},{internalType:\"uint256\",name:\"expiresAt\",type:\"uint256\"}],name:\"createOrder\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[],name:\"domainSeparator\",outputs:[{internalType:\"bytes32\",name:\"\",type:\"bytes32\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"userAddress\",type:\"address\"},{internalType:\"bytes\",name:\"functionSignature\",type:\"bytes\"},{internalType:\"bytes32\",name:\"sigR\",type:\"bytes32\"},{internalType:\"bytes32\",name:\"sigS\",type:\"bytes32\"},{internalType:\"uint8\",name:\"sigV\",type:\"uint8\"}],name:\"executeMetaTransaction\",outputs:[{internalType:\"bytes\",name:\"\",type:\"bytes\"}],stateMutability:\"payable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"nftAddress\",type:\"address\"},{internalType:\"uint256\",name:\"assetId\",type:\"uint256\"},{internalType:\"uint256\",name:\"price\",type:\"uint256\"}],name:\"executeOrder\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[],name:\"getChainId\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"user\",type:\"address\"}],name:\"getNonce\",outputs:[{internalType:\"uint256\",name:\"nonce\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"\",type:\"address\"},{internalType:\"uint256\",name:\"\",type:\"uint256\"}],name:\"orderByAssetId\",outputs:[{internalType:\"bytes32\",name:\"id\",type:\"bytes32\"},{internalType:\"address\",name:\"seller\",type:\"address\"},{internalType:\"address\",name:\"nftAddress\",type:\"address\"},{internalType:\"uint256\",name:\"price\",type:\"uint256\"},{internalType:\"uint256\",name:\"expiresAt\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"owner\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"ownerCutPerMillion\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"paused\",outputs:[{internalType:\"bool\",name:\"\",type:\"bool\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"publicationFeeInWei\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"renounceOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"nftAddress\",type:\"address\"},{internalType:\"uint256\",name:\"assetId\",type:\"uint256\"},{internalType:\"uint256\",name:\"price\",type:\"uint256\"},{internalType:\"bytes\",name:\"fingerprint\",type:\"bytes\"}],name:\"safeExecuteOrder\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"_ownerCutPerMillion\",type:\"uint256\"}],name:\"setOwnerCutPerMillion\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"_publicationFee\",type:\"uint256\"}],name:\"setPublicationFee\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"transferOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"}],[e.ContractName.Rarities]:[{inputs:[{internalType:\"address\",name:\"_owner\",type:\"address\"},{components:[{internalType:\"string\",name:\"name\",type:\"string\"},{internalType:\"uint256\",name:\"maxSupply\",type:\"uint256\"},{internalType:\"uint256\",name:\"price\",type:\"uint256\"}],internalType:\"struct Rarities.Rarity[]\",name:\"_rarities\",type:\"tuple[]\"}],stateMutability:\"nonpayable\",type:\"constructor\"},{anonymous:!1,inputs:[{components:[{internalType:\"string\",name:\"name\",type:\"string\"},{internalType:\"uint256\",name:\"maxSupply\",type:\"uint256\"},{internalType:\"uint256\",name:\"price\",type:\"uint256\"}],indexed:!1,internalType:\"struct Rarities.Rarity\",name:\"_rarity\",type:\"tuple\"}],name:\"AddRarity\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"address\",name:\"userAddress\",type:\"address\"},{indexed:!1,internalType:\"address\",name:\"relayerAddress\",type:\"address\"},{indexed:!1,internalType:\"bytes\",name:\"functionSignature\",type:\"bytes\"}],name:\"MetaTransactionExecuted\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!0,internalType:\"address\",name:\"previousOwner\",type:\"address\"},{indexed:!0,internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"OwnershipTransferred\",type:\"event\"},{anonymous:!1,inputs:[{indexed:!1,internalType:\"string\",name:\"_name\",type:\"string\"},{indexed:!1,internalType:\"uint256\",name:\"_price\",type:\"uint256\"}],name:\"UpdatePrice\",type:\"event\"},{inputs:[{components:[{internalType:\"string\",name:\"name\",type:\"string\"},{internalType:\"uint256\",name:\"maxSupply\",type:\"uint256\"},{internalType:\"uint256\",name:\"price\",type:\"uint256\"}],internalType:\"struct Rarities.Rarity[]\",name:\"_rarities\",type:\"tuple[]\"}],name:\"addRarities\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[],name:\"domainSeparator\",outputs:[{internalType:\"bytes32\",name:\"\",type:\"bytes32\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"userAddress\",type:\"address\"},{internalType:\"bytes\",name:\"functionSignature\",type:\"bytes\"},{internalType:\"bytes32\",name:\"sigR\",type:\"bytes32\"},{internalType:\"bytes32\",name:\"sigS\",type:\"bytes32\"},{internalType:\"uint8\",name:\"sigV\",type:\"uint8\"}],name:\"executeMetaTransaction\",outputs:[{internalType:\"bytes\",name:\"\",type:\"bytes\"}],stateMutability:\"payable\",type:\"function\"},{inputs:[],name:\"getChainId\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"pure\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"user\",type:\"address\"}],name:\"getNonce\",outputs:[{internalType:\"uint256\",name:\"nonce\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"string\",name:\"_rarity\",type:\"string\"}],name:\"getRarityByName\",outputs:[{components:[{internalType:\"string\",name:\"name\",type:\"string\"},{internalType:\"uint256\",name:\"maxSupply\",type:\"uint256\"},{internalType:\"uint256\",name:\"price\",type:\"uint256\"}],internalType:\"struct Rarities.Rarity\",name:\"\",type:\"tuple\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"owner\",outputs:[{internalType:\"address\",name:\"\",type:\"address\"}],stateMutability:\"view\",type:\"function\"},{inputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],name:\"rarities\",outputs:[{internalType:\"string\",name:\"name\",type:\"string\"},{internalType:\"uint256\",name:\"maxSupply\",type:\"uint256\"},{internalType:\"uint256\",name:\"price\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"raritiesCount\",outputs:[{internalType:\"uint256\",name:\"\",type:\"uint256\"}],stateMutability:\"view\",type:\"function\"},{inputs:[],name:\"renounceOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"address\",name:\"newOwner\",type:\"address\"}],name:\"transferOwnership\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"},{inputs:[{internalType:\"string[]\",name:\"_names\",type:\"string[]\"},{internalType:\"uint256[]\",name:\"_prices\",type:\"uint256[]\"}],name:\"updatePrices\",outputs:[],stateMutability:\"nonpayable\",type:\"function\"}]},ke={[Oe.ETHEREUM_ROPSTEN]:{version:\"1\",abi:Re.Bid,address:\"0x250fa138c0a994799c7a49df3097dc71e37b3d6f\",name:\"Decentraland Bid\",chainId:Oe.ETHEREUM_ROPSTEN},[Oe.ETHEREUM_MAINNET]:{version:\"1\",abi:Re.Bid,address:\"0xe479dfd9664c693b2e2992300930b00bfde08233\",name:\"Decentraland Bid\",chainId:Oe.ETHEREUM_MAINNET}},je={[Oe.ETHEREUM_ROPSTEN]:{version:\"2\",abi:Re.CollectionFactory,address:\"0x16d8bac5b67a6b782a9081377bec413bc5bb56a6\",name:\"CollectionFactory\",chainId:Oe.ETHEREUM_ROPSTEN},[Oe.MATIC_MUMBAI]:{version:\"2\",abi:Re.CollectionFactory,address:\"0x2A72Ec4241Ac4fBc915ae98aC5a5b01AdE721f4B\",name:\"CollectionFactory\",chainId:Oe.MATIC_MUMBAI},[Oe.MATIC_MAINNET]:{version:\"2\",abi:Re.CollectionFactory,address:\"0xB549B2442b2BD0a53795BC5cDcBFE0cAF7ACA9f8\",name:\"CollectionFactory\",chainId:Oe.MATIC_MAINNET}},De={[Oe.MATIC_MUMBAI]:{version:\"1\",abi:Re.CollectionManager,address:\"0xe539E0AED3C1971560517D58277f8dd9aC296281\",name:\"Decentraland Collection Manager\",chainId:Oe.MATIC_MUMBAI},[Oe.MATIC_MAINNET]:{version:\"1\",abi:Re.CollectionManager,address:\"0x9D32AaC179153A991e832550d9F96441Ea27763A\",name:\"Decentraland Collection Manager\",chainId:Oe.MATIC_MAINNET}},Ue={[Oe.MATIC_MUMBAI]:{version:\"1\",abi:Re.CollectionStore,address:\"0x6ddF1b1924DAD850AdBc1C02026535464Be06B0c\",name:\"Decentraland Collection Store\",chainId:Oe.MATIC_MUMBAI},[Oe.MATIC_MAINNET]:{version:\"1\",abi:Re.CollectionStore,address:\"0x214ffC0f0103735728dc66b61A22e4F163e275ae\",name:\"Decentraland Collection Store\",chainId:Oe.MATIC_MAINNET}},Ve={[Oe.MATIC_MUMBAI]:{version:\"1\",abi:Re.Committee,address:\"0x4bb5ACe5ceB3Dd51ea35fa01a8f9B5507c234270\",name:\"Decentraland Collection Committee\",chainId:Oe.MATIC_MUMBAI},[Oe.MATIC_MAINNET]:{version:\"1\",abi:Re.Committee,address:\"0x71d9350Ef44E1e451F00e447C0DfF2d1FB75510a\",name:\"Decentraland Collection Committee\",chainId:Oe.MATIC_MAINNET}},Fe={[Oe.MATIC_MUMBAI]:{version:\"2\",abi:Re.ERC20,address:\"\",name:\"ERC20\",chainId:Oe.MATIC_MUMBAI}},Be={[Oe.MATIC_MUMBAI]:{version:\"2\",abi:Re.ERC721,address:\"\",name:\"ERC271\",chainId:Oe.MATIC_MUMBAI}},He={[Oe.MATIC_MUMBAI]:{version:\"2\",abi:Re.ERC721CollectionV2,address:\"\",name:\"Decentraland Collection\",chainId:Oe.MATIC_MUMBAI},[Oe.MATIC_MAINNET]:{version:\"2\",abi:Re.ERC721CollectionV2,address:\"\",name:\"Decentraland Collection\",chainId:Oe.MATIC_MAINNET}},Le={[Oe.MATIC_MUMBAI]:{version:\"2\",abi:Re.Forwarder,address:\"0x71e56Ad57eca3fAAe5077b7F9ea731a25785fF92\",name:\"Forwarder\",chainId:Oe.MATIC_MUMBAI},[Oe.MATIC_MAINNET]:{version:\"2\",abi:Re.Forwarder,address:\"0xBF6755A83C0dCDBB2933A96EA778E00b717d7004\",name:\"Forwarder\",chainId:Oe.MATIC_MAINNET}},Ke={[Oe.ETHEREUM_MAINNET]:{version:\"1\",abi:Re.MANAToken,address:\"0x0f5d2fb29fb7d3cfee444a200298f468908cc942\",name:\"MANAToken\",chainId:Oe.ETHEREUM_MAINNET},[Oe.ETHEREUM_ROPSTEN]:{version:\"1\",abi:Re.MANAToken,address:\"0x2a8fd99c19271f4f04b1b7b9c4f7cf264b626edb\",name:\"MANAToken\",chainId:Oe.ETHEREUM_ROPSTEN},[Oe.ETHEREUM_GOERLI]:{version:\"1\",abi:Re.MANAToken,address:\"0xe7fDae84ACaba2A5Ba817B6E6D8A2d415DBFEdbe\",name:\"MANAToken\",chainId:Oe.ETHEREUM_GOERLI},[Oe.MATIC_MUMBAI]:{version:\"1\",abi:Re.MANAToken,address:\"0x882Da5967c435eA5cC6b09150d55E8304B838f45\",name:\"Decentraland MANA (PoS)\",chainId:Oe.MATIC_MUMBAI},[Oe.MATIC_MAINNET]:{version:\"1\",abi:Re.MANAToken,address:\"0xA1c57f48F0Deb89f569dFbE6E2B7f46D33606fD4\",name:\"(PoS) Decentraland MANA\",chainId:Oe.MATIC_MAINNET}},ze={[Oe.MATIC_MUMBAI]:{version:\"1\",abi:Re.Marketplace,address:\"0x2a09a000224f5dbe0E17214cA95CDe506DA7CB74\",name:\"Decentraland Marketplace\",chainId:Oe.MATIC_MUMBAI},[Oe.ETHEREUM_ROPSTEN]:{version:\"1\",abi:Re.Marketplace,address:\"0x5424912699dabaa5f2998750c1c66e73d67ad219\",name:\"Decentraland Marketplace\",chainId:Oe.ETHEREUM_ROPSTEN},[Oe.ETHEREUM_MAINNET]:{version:\"1\",abi:Re.Marketplace,address:\"0x8e5660b4ab70168b5a6feea0e0315cb49c8cd539\",name:\"Decentraland Marketplace\",chainId:Oe.ETHEREUM_MAINNET},[Oe.MATIC_MAINNET]:{version:\"1\",abi:Re.Marketplace,address:\"0x02080031b45A3c67d338Dd4A2CC309D28756A160\",name:\"Decentraland Marketplace\",chainId:Oe.MATIC_MAINNET}},qe={[Oe.MATIC_MUMBAI]:{version:\"1\",abi:Re.Rarities,address:\"0x8eabF06f6cf667915bfF30138be70543bCE2901A\",name:\"Decentraland Rarities\",chainId:Oe.MATIC_MUMBAI},[Oe.MATIC_MAINNET]:{version:\"1\",abi:Re.Rarities,address:\"0x17113b44fdd661A156cc01b5031E3aCF72c32EB3\",name:\"Decentraland Rarities\",chainId:Oe.MATIC_MAINNET}},Ge={[e.ContractName.Bid]:ke,[e.ContractName.CollectionFactory]:je,[e.ContractName.CollectionManager]:De,[e.ContractName.CollectionStore]:Ue,[e.ContractName.Committee]:Ve,[e.ContractName.ERC20]:Fe,[e.ContractName.ERC721]:Be,[e.ContractName.ERC721CollectionV2]:He,[e.ContractName.Forwarder]:Le,[e.ContractName.MANAToken]:Ke,[e.ContractName.Marketplace]:ze,[e.ContractName.Rarities]:qe};\n/*! *****************************************************************************\n  Copyright (c) Microsoft Corporation.\n\n  Permission to use, copy, modify, and/or distribute this software for any\n  purpose with or without fee is hereby granted.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n  PERFORMANCE OF THIS SOFTWARE.\n  ***************************************************************************** */\nfunction Je(e,t,n,a){return new(n||(n=Promise))((function(r,s){function i(e){try{p(a.next(e))}catch(e){s(e)}}function o(e){try{p(a.throw(e))}catch(e){s(e)}}function p(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}p((a=a.apply(e,t||[])).next())}))}const We=\"0c53c51c\",Ye=et(\"0x\");let Qe=0;function Ze(e,t,n){const a=t.replace(\"0x\",\"\"),r=a.substring(0,64),s=a.substring(64,128),i=function(e){let t=parseInt(e,16);t<27&&(t+=27);if(27!==t&&28!==t)throw Error(`Invalid signature version \"${e}\" (parsed: ${t})`);return t.toString(16)}(a.substring(128,130)),o=n.replace(\"0x\",\"\"),p=(o.length/2).toString(16),u=Math.ceil(o.length/64);return[\"0x\",We,tt(e),tt(\"a0\"),r,s,tt(i),tt(p),o.padEnd(64*u,\"0\")].join(\"\")}function Xe(e,t){return Je(this,void 0,void 0,(function*(){const n=yield function(e,t){return nt(e,\"eth_getCode\",[t.toLowerCase(),\"latest\"])}(e,t);return!(et(n.toLowerCase())===Ye)}))}function et(e){if(!/^0x[0-9a-f]*$/gi.test(e))throw new Error(`Not a valid hex string \"${e}\"`);let t=e.slice(2);for(;t.length<40;)t=\"0\"+t;return\"0x\"+t}function tt(e){return e.toString().replace(\"0x\",\"\").padStart(64,\"0\")}function nt(e,t,n){return Je(this,void 0,void 0,(function*(){let a,r={jsonrpc:\"2.0\",id:++Qe,method:t,params:n};if(void 0!==e.request?a=yield e.request(r):void 0!==e.sendAsync?a=yield e.sendAsync(r):void 0!==e.send&&(a=yield e.send(t,n)),a)return a.result||a;throw new Error(`Could not send the transaction correcty. Either the provider does not support the method \"${t}\" or is missing a proper send/request.`)}))}var at;e.ErrorCode=void 0,(at=e.ErrorCode||(e.ErrorCode={})).INVALID_ADDRESS=\"invalid_address\",at.CONTRACT_ACCOUNT=\"contract_account\",at.USER_DENIED=\"user_denied\",at.UNKNOWN=\"unknown\";class rt extends Error{constructor(e,t){super(e),this.code=t,Object.setPrototypeOf(this,rt.prototype)}}e.DOMAIN_TYPE=n,e.META_TRANSACTION_TYPE=a,e.MetaTransactionError=rt,e.getContract=function(e,t){const n=Ge[e];if(!n)throw new Error(`Could not get a valid contract for name: ${e}`);if(!n[t])throw new Error(`Could not get a valid contract for ${e} using chain ${t}`);return n[t]},e.getContractName=function(e){for(const t in Ge)for(const n in Ge[t]){if(Ge[t][n].address.toLowerCase()===e.toLowerCase())return t}throw new Error(`Could not get a valid contract name for address ${e}`)},e.isContract=Xe,e.sendMetaTransaction=function(t,r,s,i,o={}){return Je(this,void 0,void 0,(function*(){const p=Object.assign(Object.assign({},{serverURL:\"https://transactions-api.decentraland.io/v1\"}),o);if(!i.address.trim())throw new rt(`The contract address for ${i.name} is empty. You're probably trying to get a proxy contract. Try adding an address to the result of getContract`,e.ErrorCode.INVALID_ADDRESS);try{const o=yield function(e){return Je(this,void 0,void 0,(function*(){let t=[];try{t=yield nt(e,\"eth_requestAccounts\",[])}catch(n){t=yield nt(e,\"eth_accounts\",[])}if(0===t.length)throw new Error(\"Could not find a valid connected account\");return t[0]}))}(t);if(yield Xe(t,o))throw new rt(\"Contract accounts are not supported\",e.ErrorCode.CONTRACT_ACCOUNT);const u=yield function(e,t,n){return Je(this,void 0,void 0,(function*(){const a=tt(t);return tt(yield nt(e,\"eth_call\",[{data:`0x2d0335ab${a}`,to:n},\"latest\"]))}))}(r,o,i.address),d=function(e,t){return{name:t.name,version:t.version,verifyingContract:t.address,salt:e}}(function(e){return\"number\"==typeof e?`0x${tt(e.toString(16))}`:`0x${tt(e)}`}(i.chainId),i),l=function(e,t,r,s){return{types:{EIP712Domain:n,MetaTransaction:a},domain:s,primaryType:\"MetaTransaction\",message:{nonce:parseInt(t,16),from:e,functionSignature:r}}}(o,u,s,d),c=Ze(o,yield function(e,t,n){return Je(this,void 0,void 0,(function*(){return nt(e,\"eth_signTypedData_v4\",[t,n])}))}(t,o,JSON.stringify(l)),s),y=yield fetch(`${p.serverURL}/transactions`,{headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({transactionData:{from:o,params:[i.address,c]}}),method:\"POST\"});if(!y.ok)throw new Error(y.statusText);const{txHash:m}=yield y.json();return m}catch(t){if(-1!==t.message.indexOf(\"User denied message signature\"))throw new rt(t.message,e.ErrorCode.USER_DENIED);throw t instanceof rt?t:(console.warn(\"An error occurred trying to send the meta transaction. Error:\",t.message),new rt(t.message,e.ErrorCode.UNKNOWN))}}))},Object.defineProperty(e,\"__esModule\",{value:!0})}));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=dcl://node_modules/decentraland-transactions/index.js")
/*! "node_modules/eth-connect/eth-connect.js" c2f21239f82817148229301e0408e7b3d18b899215f5647087b66ab705cd2e32 */ eval("/*! eth-connect {\n  \"date\": \"2021-08-26T17:32:23.811Z\",\n  \"commit\": \"b0601293eda8d644f57259b48f5a991953eb3fa0\",\n  \"ref\": \"refs/tags/6.0.2\"\n} */\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define(\"eth-connect\",[\"exports\"],e):e((t=\"undefined\"!=typeof globalThis?globalThis:t||self).ethconnect={})}(this,(function(t){\"use strict\";function e(t){if(t.jsonrpc=\"2.0\",!t.id||\"number\"!=typeof t.id||Math.floor(t.id)!==t.id)throw new Error(`Invalid RPC message(invalid id) message: ${JSON.stringify(t)}`);if(!t.method||\"string\"!=typeof t.method||0===t.method.trim().length)throw new Error(`Invalid RPC message(invalid method) message: ${JSON.stringify(t)}`);if(!t.params||\"object\"!=typeof t.params)throw new Error(`Invalid RPC message(invalid params) message: ${JSON.stringify(t)}`);return t}function n(t,e){return t(e={exports:{}},e.exports),e.exports}var r,o=n((function(t,e){function n(){let t,e;const n=new Promise(((r,o)=>{t=t=>{r(t),n.isPending=!1},e=t=>{o(t),n.isPending=!1}})).catch((t=>Promise.reject(t)));return n.resolve=t,n.reject=e,\"finally\"in n||(n.finally=t=>{n.then(t),n.catch(t)}),n.isPending=!0,n}Object.defineProperty(e,\"__esModule\",{value:!0}),e.future=n,e.default=n}));(r=o)&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,\"default\")&&r.default;var i=o.future;var s=\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{};function a(){throw new Error(\"setTimeout has not been defined\")}function c(){throw new Error(\"clearTimeout has not been defined\")}var u=a,l=c;function h(t){if(u===setTimeout)return setTimeout(t,0);if((u===a||!u)&&setTimeout)return u=setTimeout,setTimeout(t,0);try{return u(t,0)}catch(e){try{return u.call(null,t,0)}catch(e){return u.call(this,t,0)}}}\"function\"==typeof s.setTimeout&&(u=setTimeout),\"function\"==typeof s.clearTimeout&&(l=clearTimeout);var p,f=[],d=!1,g=-1;function m(){d&&p&&(d=!1,p.length?f=p.concat(f):g=-1,f.length&&y())}function y(){if(!d){var t=h(m);d=!0;for(var e=f.length;e;){for(p=f,f=[];++g<e;)p&&p[g].run();g=-1,e=f.length}p=null,d=!1,function(t){if(l===clearTimeout)return clearTimeout(t);if((l===c||!l)&&clearTimeout)return l=clearTimeout,clearTimeout(t);try{l(t)}catch(e){try{return l.call(null,t)}catch(e){return l.call(this,t)}}}(t)}}function w(t,e){this.fun=t,this.array=e}w.prototype.run=function(){this.fun.apply(null,this.array)};function v(){}var b=v,_=v,F=v,N=v,x=v,k=v,T=v;var A=s.performance||{},E=A.now||A.mozNow||A.msNow||A.oNow||A.webkitNow||function(){return(new Date).getTime()};var B=new Date;var O={nextTick:function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];f.push(new w(t,e)),1!==f.length||d||h(y)},title:\"browser\",browser:!0,env:{},argv:[],version:\"\",versions:{},on:b,addListener:_,once:F,off:N,removeListener:x,removeAllListeners:k,emit:T,binding:function(t){throw new Error(\"process.binding is not supported\")},cwd:function(){return\"/\"},chdir:function(t){throw new Error(\"process.chdir is not supported\")},umask:function(){return 0},hrtime:function(t){var e=.001*E.call(A),n=Math.floor(e),r=Math.floor(e%1*1e9);return t&&(n-=t[0],(r-=t[1])<0&&(n--,r+=1e9)),[n,r]},platform:\"browser\",release:{},config:{},uptime:function(){return(new Date-B)/1e3}},S=n((function(t){\n/**\n   * [js-sha3]{@link https://github.com/emn178/js-sha3}\n   *\n   * @version 0.8.0\n   * @author Chen, Yi-Cyuan [emn178@gmail.com]\n   * @copyright Chen, Yi-Cyuan 2015-2018\n   * @license MIT\n   */\n!function(){var e=\"input is invalid type\",n=\"object\"==typeof window,r=n?window:{};r.JS_SHA3_NO_WINDOW&&(n=!1);var o=!n&&\"object\"==typeof self;!r.JS_SHA3_NO_NODE_JS&&\"object\"==typeof O&&O.versions&&O.versions.node?r=s:o&&(r=self);var i=!r.JS_SHA3_NO_COMMON_JS&&t.exports,a=!r.JS_SHA3_NO_ARRAY_BUFFER&&\"undefined\"!=typeof ArrayBuffer,c=\"0123456789abcdef\".split(\"\"),u=[4,1024,262144,67108864],l=[0,8,16,24],h=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],p=[224,256,384,512],f=[128,256],d=[\"hex\",\"buffer\",\"arrayBuffer\",\"array\",\"digest\"],g={128:168,256:136};!r.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(t){return\"[object Array]\"===Object.prototype.toString.call(t)}),!a||!r.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(t){return\"object\"==typeof t&&t.buffer&&t.buffer.constructor===ArrayBuffer});for(var m=function(t,e,n){return function(r){return new C(t,e,t).update(r)[n]()}},y=function(t,e,n){return function(r,o){return new C(t,e,o).update(r)[n]()}},w=function(t,e,n){return function(e,r,o,i){return N[\"cshake\"+t].update(e,r,o,i)[n]()}},v=function(t,e,n){return function(e,r,o,i){return N[\"kmac\"+t].update(e,r,o,i)[n]()}},b=function(t,e,n,r){for(var o=0;o<d.length;++o){var i=d[o];t[i]=e(n,r,i)}return t},_=function(t,e){var n=m(t,e,\"hex\");return n.create=function(){return new C(t,e,t)},n.update=function(t){return n.create().update(t)},b(n,m,t,e)},F=[{name:\"keccak\",padding:[1,256,65536,16777216],bits:p,createMethod:_},{name:\"sha3\",padding:[6,1536,393216,100663296],bits:p,createMethod:_},{name:\"shake\",padding:[31,7936,2031616,520093696],bits:f,createMethod:function(t,e){var n=y(t,e,\"hex\");return n.create=function(n){return new C(t,e,n)},n.update=function(t,e){return n.create(e).update(t)},b(n,y,t,e)}},{name:\"cshake\",padding:u,bits:f,createMethod:function(t,e){var n=g[t],r=w(t,0,\"hex\");return r.create=function(r,o,i){return o||i?new C(t,e,r).bytepad([o,i],n):N[\"shake\"+t].create(r)},r.update=function(t,e,n,o){return r.create(e,n,o).update(t)},b(r,w,t,e)}},{name:\"kmac\",padding:u,bits:f,createMethod:function(t,e){var n=g[t],r=v(t,0,\"hex\");return r.create=function(r,o,i){return new I(t,e,o).bytepad([\"KMAC\",i],n).bytepad([r],n)},r.update=function(t,e,n,o){return r.create(t,n,o).update(e)},b(r,v,t,e)}}],N={},x=[],k=0;k<F.length;++k)for(var T=F[k],A=T.bits,E=0;E<A.length;++E){var B=T.name+\"_\"+A[E];if(x.push(B),N[B]=T.createMethod(A[E],T.padding),\"sha3\"!==T.name){var S=T.name+A[E];x.push(S),N[S]=N[B]}}function C(t,e,n){this.blocks=[],this.s=[],this.padding=e,this.outputBits=n,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(t<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=n>>5,this.extraBytes=(31&n)>>3;for(var r=0;r<50;++r)this.s[r]=0}function I(t,e,n){C.call(this,t,e,n)}C.prototype.update=function(t){if(this.finalized)throw new Error(\"finalize already called\");var n,r=typeof t;if(\"string\"!==r){if(\"object\"!==r)throw new Error(e);if(null===t)throw new Error(e);if(a&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||a&&ArrayBuffer.isView(t)))throw new Error(e);n=!0}for(var o,i,s=this.blocks,c=this.byteCount,u=t.length,h=this.blockCount,p=0,f=this.s;p<u;){if(this.reset)for(this.reset=!1,s[0]=this.block,o=1;o<h+1;++o)s[o]=0;if(n)for(o=this.start;p<u&&o<c;++p)s[o>>2]|=t[p]<<l[3&o++];else for(o=this.start;p<u&&o<c;++p)(i=t.charCodeAt(p))<128?s[o>>2]|=i<<l[3&o++]:i<2048?(s[o>>2]|=(192|i>>6)<<l[3&o++],s[o>>2]|=(128|63&i)<<l[3&o++]):i<55296||i>=57344?(s[o>>2]|=(224|i>>12)<<l[3&o++],s[o>>2]|=(128|i>>6&63)<<l[3&o++],s[o>>2]|=(128|63&i)<<l[3&o++]):(i=65536+((1023&i)<<10|1023&t.charCodeAt(++p)),s[o>>2]|=(240|i>>18)<<l[3&o++],s[o>>2]|=(128|i>>12&63)<<l[3&o++],s[o>>2]|=(128|i>>6&63)<<l[3&o++],s[o>>2]|=(128|63&i)<<l[3&o++]);if(this.lastByteIndex=o,o>=c){for(this.start=o-c,this.block=s[h],o=0;o<h;++o)f[o]^=s[o];P(f),this.reset=!0}else this.start=o}return this},C.prototype.encode=function(t,e){var n=255&t,r=1,o=[n];for(n=255&(t>>=8);n>0;)o.unshift(n),n=255&(t>>=8),++r;return e?o.push(r):o.unshift(r),this.update(o),o.length},C.prototype.encodeString=function(t){var n,r=typeof t;if(\"string\"!==r){if(\"object\"!==r)throw new Error(e);if(null===t)throw new Error(e);if(a&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||a&&ArrayBuffer.isView(t)))throw new Error(e);n=!0}var o=0,i=t.length;if(n)o=i;else for(var s=0;s<t.length;++s){var c=t.charCodeAt(s);c<128?o+=1:c<2048?o+=2:c<55296||c>=57344?o+=3:(c=65536+((1023&c)<<10|1023&t.charCodeAt(++s)),o+=4)}return o+=this.encode(8*o),this.update(t),o},C.prototype.bytepad=function(t,e){for(var n=this.encode(e),r=0;r<t.length;++r)n+=this.encodeString(t[r]);var o=e-n%e,i=[];return i.length=o,this.update(i),this},C.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var t=this.blocks,e=this.lastByteIndex,n=this.blockCount,r=this.s;if(t[e>>2]|=this.padding[3&e],this.lastByteIndex===this.byteCount)for(t[0]=t[n],e=1;e<n+1;++e)t[e]=0;for(t[n-1]|=2147483648,e=0;e<n;++e)r[e]^=t[e];P(r)}},C.prototype.toString=C.prototype.hex=function(){this.finalize();for(var t,e=this.blockCount,n=this.s,r=this.outputBlocks,o=this.extraBytes,i=0,s=0,a=\"\";s<r;){for(i=0;i<e&&s<r;++i,++s)t=n[i],a+=c[t>>4&15]+c[15&t]+c[t>>12&15]+c[t>>8&15]+c[t>>20&15]+c[t>>16&15]+c[t>>28&15]+c[t>>24&15];s%e==0&&(P(n),i=0)}return o&&(t=n[i],a+=c[t>>4&15]+c[15&t],o>1&&(a+=c[t>>12&15]+c[t>>8&15]),o>2&&(a+=c[t>>20&15]+c[t>>16&15])),a},C.prototype.arrayBuffer=function(){this.finalize();var t,e=this.blockCount,n=this.s,r=this.outputBlocks,o=this.extraBytes,i=0,s=0,a=this.outputBits>>3;t=o?new ArrayBuffer(r+1<<2):new ArrayBuffer(a);for(var c=new Uint32Array(t);s<r;){for(i=0;i<e&&s<r;++i,++s)c[s]=n[i];s%e==0&&P(n)}return o&&(c[i]=n[i],t=t.slice(0,a)),t},C.prototype.buffer=C.prototype.arrayBuffer,C.prototype.digest=C.prototype.array=function(){this.finalize();for(var t,e,n=this.blockCount,r=this.s,o=this.outputBlocks,i=this.extraBytes,s=0,a=0,c=[];a<o;){for(s=0;s<n&&a<o;++s,++a)t=a<<2,e=r[s],c[t]=255&e,c[t+1]=e>>8&255,c[t+2]=e>>16&255,c[t+3]=e>>24&255;a%n==0&&P(r)}return i&&(t=a<<2,e=r[s],c[t]=255&e,i>1&&(c[t+1]=e>>8&255),i>2&&(c[t+2]=e>>16&255)),c},I.prototype=new C,I.prototype.finalize=function(){return this.encode(this.outputBits,!0),C.prototype.finalize.call(this)};var P=function(t){var e,n,r,o,i,s,a,c,u,l,p,f,d,g,m,y,w,v,b,_,F,N,x,k,T,A,E,B,O,S,C,I,P,M,R,j,U,D,q,$,L,H,G,z,J,W,V,K,Z,Y,X,Q,tt,et,nt,rt,ot,it,st,at,ct,ut,lt;for(r=0;r<48;r+=2)o=t[0]^t[10]^t[20]^t[30]^t[40],i=t[1]^t[11]^t[21]^t[31]^t[41],s=t[2]^t[12]^t[22]^t[32]^t[42],a=t[3]^t[13]^t[23]^t[33]^t[43],c=t[4]^t[14]^t[24]^t[34]^t[44],u=t[5]^t[15]^t[25]^t[35]^t[45],l=t[6]^t[16]^t[26]^t[36]^t[46],p=t[7]^t[17]^t[27]^t[37]^t[47],e=(f=t[8]^t[18]^t[28]^t[38]^t[48])^(s<<1|a>>>31),n=(d=t[9]^t[19]^t[29]^t[39]^t[49])^(a<<1|s>>>31),t[0]^=e,t[1]^=n,t[10]^=e,t[11]^=n,t[20]^=e,t[21]^=n,t[30]^=e,t[31]^=n,t[40]^=e,t[41]^=n,e=o^(c<<1|u>>>31),n=i^(u<<1|c>>>31),t[2]^=e,t[3]^=n,t[12]^=e,t[13]^=n,t[22]^=e,t[23]^=n,t[32]^=e,t[33]^=n,t[42]^=e,t[43]^=n,e=s^(l<<1|p>>>31),n=a^(p<<1|l>>>31),t[4]^=e,t[5]^=n,t[14]^=e,t[15]^=n,t[24]^=e,t[25]^=n,t[34]^=e,t[35]^=n,t[44]^=e,t[45]^=n,e=c^(f<<1|d>>>31),n=u^(d<<1|f>>>31),t[6]^=e,t[7]^=n,t[16]^=e,t[17]^=n,t[26]^=e,t[27]^=n,t[36]^=e,t[37]^=n,t[46]^=e,t[47]^=n,e=l^(o<<1|i>>>31),n=p^(i<<1|o>>>31),t[8]^=e,t[9]^=n,t[18]^=e,t[19]^=n,t[28]^=e,t[29]^=n,t[38]^=e,t[39]^=n,t[48]^=e,t[49]^=n,g=t[0],m=t[1],W=t[11]<<4|t[10]>>>28,V=t[10]<<4|t[11]>>>28,B=t[20]<<3|t[21]>>>29,O=t[21]<<3|t[20]>>>29,at=t[31]<<9|t[30]>>>23,ct=t[30]<<9|t[31]>>>23,H=t[40]<<18|t[41]>>>14,G=t[41]<<18|t[40]>>>14,M=t[2]<<1|t[3]>>>31,R=t[3]<<1|t[2]>>>31,y=t[13]<<12|t[12]>>>20,w=t[12]<<12|t[13]>>>20,K=t[22]<<10|t[23]>>>22,Z=t[23]<<10|t[22]>>>22,S=t[33]<<13|t[32]>>>19,C=t[32]<<13|t[33]>>>19,ut=t[42]<<2|t[43]>>>30,lt=t[43]<<2|t[42]>>>30,et=t[5]<<30|t[4]>>>2,nt=t[4]<<30|t[5]>>>2,j=t[14]<<6|t[15]>>>26,U=t[15]<<6|t[14]>>>26,v=t[25]<<11|t[24]>>>21,b=t[24]<<11|t[25]>>>21,Y=t[34]<<15|t[35]>>>17,X=t[35]<<15|t[34]>>>17,I=t[45]<<29|t[44]>>>3,P=t[44]<<29|t[45]>>>3,k=t[6]<<28|t[7]>>>4,T=t[7]<<28|t[6]>>>4,rt=t[17]<<23|t[16]>>>9,ot=t[16]<<23|t[17]>>>9,D=t[26]<<25|t[27]>>>7,q=t[27]<<25|t[26]>>>7,_=t[36]<<21|t[37]>>>11,F=t[37]<<21|t[36]>>>11,Q=t[47]<<24|t[46]>>>8,tt=t[46]<<24|t[47]>>>8,z=t[8]<<27|t[9]>>>5,J=t[9]<<27|t[8]>>>5,A=t[18]<<20|t[19]>>>12,E=t[19]<<20|t[18]>>>12,it=t[29]<<7|t[28]>>>25,st=t[28]<<7|t[29]>>>25,$=t[38]<<8|t[39]>>>24,L=t[39]<<8|t[38]>>>24,N=t[48]<<14|t[49]>>>18,x=t[49]<<14|t[48]>>>18,t[0]=g^~y&v,t[1]=m^~w&b,t[10]=k^~A&B,t[11]=T^~E&O,t[20]=M^~j&D,t[21]=R^~U&q,t[30]=z^~W&K,t[31]=J^~V&Z,t[40]=et^~rt&it,t[41]=nt^~ot&st,t[2]=y^~v&_,t[3]=w^~b&F,t[12]=A^~B&S,t[13]=E^~O&C,t[22]=j^~D&$,t[23]=U^~q&L,t[32]=W^~K&Y,t[33]=V^~Z&X,t[42]=rt^~it&at,t[43]=ot^~st&ct,t[4]=v^~_&N,t[5]=b^~F&x,t[14]=B^~S&I,t[15]=O^~C&P,t[24]=D^~$&H,t[25]=q^~L&G,t[34]=K^~Y&Q,t[35]=Z^~X&tt,t[44]=it^~at&ut,t[45]=st^~ct&lt,t[6]=_^~N&g,t[7]=F^~x&m,t[16]=S^~I&k,t[17]=C^~P&T,t[26]=$^~H&M,t[27]=L^~G&R,t[36]=Y^~Q&z,t[37]=X^~tt&J,t[46]=at^~ut&et,t[47]=ct^~lt&nt,t[8]=N^~g&y,t[9]=x^~m&w,t[18]=I^~k&A,t[19]=P^~T&E,t[28]=H^~M&j,t[29]=G^~R&U,t[38]=Q^~z&W,t[39]=tt^~J&V,t[48]=ut^~et&rt,t[49]=lt^~nt&ot,t[0]^=h[r],t[1]^=h[r+1]};if(i)t.exports=N;else for(k=0;k<x.length;++k)r[x[k]]=N[x[k]]}()}));S.keccak_224,S.keccak224,S.keccak_256;var C=S.keccak256;S.keccak_384,S.keccak384,S.keccak_512,S.keccak512,S.sha3_224,S.sha3_256,S.sha3_384,S.sha3_512,S.shake_128,S.shake128,S.shake_256,S.shake256,S.cshake_128,S.cshake128,S.cshake_256,S.cshake256,S.kmac_128,S.kmac128,S.kmac_256,S.kmac256;var I=n((function(t){!function(e){var n,r=/^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,o=Math.ceil,i=Math.floor,s=\"[BigNumber Error] \",a=s+\"Number primitive has more than 15 significant digits: \",c=1e14,u=14,l=9007199254740991,h=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],p=1e7,f=1e9;function d(t){var e=0|t;return t>0||t===e?e:e-1}function g(t){for(var e,n,r=1,o=t.length,i=t[0]+\"\";r<o;){for(e=t[r++]+\"\",n=u-e.length;n--;e=\"0\"+e);i+=e}for(o=i.length;48===i.charCodeAt(--o););return i.slice(0,o+1||1)}function m(t,e){var n,r,o=t.c,i=e.c,s=t.s,a=e.s,c=t.e,u=e.e;if(!s||!a)return null;if(n=o&&!o[0],r=i&&!i[0],n||r)return n?r?0:-a:s;if(s!=a)return s;if(n=s<0,r=c==u,!o||!i)return r?0:!o^n?1:-1;if(!r)return c>u^n?1:-1;for(a=(c=o.length)<(u=i.length)?c:u,s=0;s<a;s++)if(o[s]!=i[s])return o[s]>i[s]^n?1:-1;return c==u?0:c>u^n?1:-1}function y(t,e,n,r){if(t<e||t>n||t!==i(t))throw Error(s+(r||\"Argument\")+(\"number\"==typeof t?t<e||t>n?\" out of range: \":\" not an integer: \":\" not a primitive number: \")+String(t))}function w(t){var e=t.c.length-1;return d(t.e/u)==e&&t.c[e]%2!=0}function v(t,e){return(t.length>1?t.charAt(0)+\".\"+t.slice(1):t)+(e<0?\"e\":\"e+\")+e}function b(t,e,n){var r,o;if(e<0){for(o=n+\".\";++e;o+=n);t=o+t}else if(++e>(r=t.length)){for(o=n,e-=r;--e;o+=n);t+=o}else e<r&&(t=t.slice(0,e)+\".\"+t.slice(e));return t}(n=function t(e){var n,_,F,N,x,k,T,A,E,B,O=H.prototype={constructor:H,toString:null,valueOf:null},S=new H(1),C=20,I=4,P=-7,M=21,R=-1e7,j=1e7,U=!1,D=1,q=0,$={prefix:\"\",groupSize:3,secondaryGroupSize:0,groupSeparator:\",\",decimalSeparator:\".\",fractionGroupSize:0,fractionGroupSeparator:\"Â \",suffix:\"\"},L=\"0123456789abcdefghijklmnopqrstuvwxyz\";function H(t,e){var n,o,s,c,h,p,f,d,g=this;if(!(g instanceof H))return new H(t,e);if(null==e){if(t&&!0===t._isBigNumber)return g.s=t.s,void(!t.c||t.e>j?g.c=g.e=null:t.e<R?g.c=[g.e=0]:(g.e=t.e,g.c=t.c.slice()));if((p=\"number\"==typeof t)&&0*t==0){if(g.s=1/t<0?(t=-t,-1):1,t===~~t){for(c=0,h=t;h>=10;h/=10,c++);return void(c>j?g.c=g.e=null:(g.e=c,g.c=[t]))}d=String(t)}else{if(!r.test(d=String(t)))return F(g,d,p);g.s=45==d.charCodeAt(0)?(d=d.slice(1),-1):1}(c=d.indexOf(\".\"))>-1&&(d=d.replace(\".\",\"\")),(h=d.search(/e/i))>0?(c<0&&(c=h),c+=+d.slice(h+1),d=d.substring(0,h)):c<0&&(c=d.length)}else{if(y(e,2,L.length,\"Base\"),10==e)return W(g=new H(t),C+g.e+1,I);if(d=String(t),p=\"number\"==typeof t){if(0*t!=0)return F(g,d,p,e);if(g.s=1/t<0?(d=d.slice(1),-1):1,H.DEBUG&&d.replace(/^0\\.0*|\\./,\"\").length>15)throw Error(a+t)}else g.s=45===d.charCodeAt(0)?(d=d.slice(1),-1):1;for(n=L.slice(0,e),c=h=0,f=d.length;h<f;h++)if(n.indexOf(o=d.charAt(h))<0){if(\".\"==o){if(h>c){c=f;continue}}else if(!s&&(d==d.toUpperCase()&&(d=d.toLowerCase())||d==d.toLowerCase()&&(d=d.toUpperCase()))){s=!0,h=-1,c=0;continue}return F(g,String(t),p,e)}p=!1,(c=(d=_(d,e,10,g.s)).indexOf(\".\"))>-1?d=d.replace(\".\",\"\"):c=d.length}for(h=0;48===d.charCodeAt(h);h++);for(f=d.length;48===d.charCodeAt(--f););if(d=d.slice(h,++f)){if(f-=h,p&&H.DEBUG&&f>15&&(t>l||t!==i(t)))throw Error(a+g.s*t);if((c=c-h-1)>j)g.c=g.e=null;else if(c<R)g.c=[g.e=0];else{if(g.e=c,g.c=[],h=(c+1)%u,c<0&&(h+=u),h<f){for(h&&g.c.push(+d.slice(0,h)),f-=u;h<f;)g.c.push(+d.slice(h,h+=u));h=u-(d=d.slice(h)).length}else h-=f;for(;h--;d+=\"0\");g.c.push(+d)}}else g.c=[g.e=0]}function G(t,e,n,r){var o,i,s,a,c;if(null==n?n=I:y(n,0,8),!t.c)return t.toString();if(o=t.c[0],s=t.e,null==e)c=g(t.c),c=1==r||2==r&&(s<=P||s>=M)?v(c,s):b(c,s,\"0\");else if(i=(t=W(new H(t),e,n)).e,a=(c=g(t.c)).length,1==r||2==r&&(e<=i||i<=P)){for(;a<e;c+=\"0\",a++);c=v(c,i)}else if(e-=s,c=b(c,i,\"0\"),i+1>a){if(--e>0)for(c+=\".\";e--;c+=\"0\");}else if((e+=i-a)>0)for(i+1==a&&(c+=\".\");e--;c+=\"0\");return t.s<0&&o?\"-\"+c:c}function z(t,e){for(var n,r=1,o=new H(t[0]);r<t.length;r++){if(!(n=new H(t[r])).s){o=n;break}e.call(o,n)&&(o=n)}return o}function J(t,e,n){for(var r=1,o=e.length;!e[--o];e.pop());for(o=e[0];o>=10;o/=10,r++);return(n=r+n*u-1)>j?t.c=t.e=null:n<R?t.c=[t.e=0]:(t.e=n,t.c=e),t}function W(t,e,n,r){var s,a,l,p,f,d,g,m=t.c,y=h;if(m){t:{for(s=1,p=m[0];p>=10;p/=10,s++);if((a=e-s)<0)a+=u,l=e,g=(f=m[d=0])/y[s-l-1]%10|0;else if((d=o((a+1)/u))>=m.length){if(!r)break t;for(;m.length<=d;m.push(0));f=g=0,s=1,l=(a%=u)-u+1}else{for(f=p=m[d],s=1;p>=10;p/=10,s++);g=(l=(a%=u)-u+s)<0?0:f/y[s-l-1]%10|0}if(r=r||e<0||null!=m[d+1]||(l<0?f:f%y[s-l-1]),r=n<4?(g||r)&&(0==n||n==(t.s<0?3:2)):g>5||5==g&&(4==n||r||6==n&&(a>0?l>0?f/y[s-l]:0:m[d-1])%10&1||n==(t.s<0?8:7)),e<1||!m[0])return m.length=0,r?(e-=t.e+1,m[0]=y[(u-e%u)%u],t.e=-e||0):m[0]=t.e=0,t;if(0==a?(m.length=d,p=1,d--):(m.length=d+1,p=y[u-a],m[d]=l>0?i(f/y[s-l]%y[l])*p:0),r)for(;;){if(0==d){for(a=1,l=m[0];l>=10;l/=10,a++);for(l=m[0]+=p,p=1;l>=10;l/=10,p++);a!=p&&(t.e++,m[0]==c&&(m[0]=1));break}if(m[d]+=p,m[d]!=c)break;m[d--]=0,p=1}for(a=m.length;0===m[--a];m.pop());}t.e>j?t.c=t.e=null:t.e<R&&(t.c=[t.e=0])}return t}function V(t){var e,n=t.e;return null===n?t.toString():(e=g(t.c),e=n<=P||n>=M?v(e,n):b(e,n,\"0\"),t.s<0?\"-\"+e:e)}return H.clone=t,H.ROUND_UP=0,H.ROUND_DOWN=1,H.ROUND_CEIL=2,H.ROUND_FLOOR=3,H.ROUND_HALF_UP=4,H.ROUND_HALF_DOWN=5,H.ROUND_HALF_EVEN=6,H.ROUND_HALF_CEIL=7,H.ROUND_HALF_FLOOR=8,H.EUCLID=9,H.config=H.set=function(t){var e,n;if(null!=t){if(\"object\"!=typeof t)throw Error(s+\"Object expected: \"+t);if(t.hasOwnProperty(e=\"DECIMAL_PLACES\")&&(y(n=t[e],0,f,e),C=n),t.hasOwnProperty(e=\"ROUNDING_MODE\")&&(y(n=t[e],0,8,e),I=n),t.hasOwnProperty(e=\"EXPONENTIAL_AT\")&&((n=t[e])&&n.pop?(y(n[0],-f,0,e),y(n[1],0,f,e),P=n[0],M=n[1]):(y(n,-f,f,e),P=-(M=n<0?-n:n))),t.hasOwnProperty(e=\"RANGE\"))if((n=t[e])&&n.pop)y(n[0],-f,-1,e),y(n[1],1,f,e),R=n[0],j=n[1];else{if(y(n,-f,f,e),!n)throw Error(s+e+\" cannot be zero: \"+n);R=-(j=n<0?-n:n)}if(t.hasOwnProperty(e=\"CRYPTO\")){if((n=t[e])!==!!n)throw Error(s+e+\" not true or false: \"+n);if(n){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw U=!n,Error(s+\"crypto unavailable\");U=n}else U=n}if(t.hasOwnProperty(e=\"MODULO_MODE\")&&(y(n=t[e],0,9,e),D=n),t.hasOwnProperty(e=\"POW_PRECISION\")&&(y(n=t[e],0,f,e),q=n),t.hasOwnProperty(e=\"FORMAT\")){if(\"object\"!=typeof(n=t[e]))throw Error(s+e+\" not an object: \"+n);$=n}if(t.hasOwnProperty(e=\"ALPHABET\")){if(\"string\"!=typeof(n=t[e])||/^.?$|[+\\-.\\s]|(.).*\\1/.test(n))throw Error(s+e+\" invalid: \"+n);L=n}}return{DECIMAL_PLACES:C,ROUNDING_MODE:I,EXPONENTIAL_AT:[P,M],RANGE:[R,j],CRYPTO:U,MODULO_MODE:D,POW_PRECISION:q,FORMAT:$,ALPHABET:L}},H.isBigNumber=function(t){if(!t||!0!==t._isBigNumber)return!1;if(!H.DEBUG)return!0;var e,n,r=t.c,o=t.e,a=t.s;t:if(\"[object Array]\"=={}.toString.call(r)){if((1===a||-1===a)&&o>=-f&&o<=f&&o===i(o)){if(0===r[0]){if(0===o&&1===r.length)return!0;break t}if((e=(o+1)%u)<1&&(e+=u),String(r[0]).length==e){for(e=0;e<r.length;e++)if((n=r[e])<0||n>=c||n!==i(n))break t;if(0!==n)return!0}}}else if(null===r&&null===o&&(null===a||1===a||-1===a))return!0;throw Error(s+\"Invalid BigNumber: \"+t)},H.maximum=H.max=function(){return z(arguments,O.lt)},H.minimum=H.min=function(){return z(arguments,O.gt)},H.random=(N=9007199254740992,x=Math.random()*N&2097151?function(){return i(Math.random()*N)}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(t){var e,n,r,a,c,l=0,p=[],d=new H(S);if(null==t?t=C:y(t,0,f),a=o(t/u),U)if(crypto.getRandomValues){for(e=crypto.getRandomValues(new Uint32Array(a*=2));l<a;)(c=131072*e[l]+(e[l+1]>>>11))>=9e15?(n=crypto.getRandomValues(new Uint32Array(2)),e[l]=n[0],e[l+1]=n[1]):(p.push(c%1e14),l+=2);l=a/2}else{if(!crypto.randomBytes)throw U=!1,Error(s+\"crypto unavailable\");for(e=crypto.randomBytes(a*=7);l<a;)(c=281474976710656*(31&e[l])+1099511627776*e[l+1]+4294967296*e[l+2]+16777216*e[l+3]+(e[l+4]<<16)+(e[l+5]<<8)+e[l+6])>=9e15?crypto.randomBytes(7).copy(e,l):(p.push(c%1e14),l+=7);l=a/7}if(!U)for(;l<a;)(c=x())<9e15&&(p[l++]=c%1e14);for(a=p[--l],t%=u,a&&t&&(c=h[u-t],p[l]=i(a/c)*c);0===p[l];p.pop(),l--);if(l<0)p=[r=0];else{for(r=-1;0===p[0];p.splice(0,1),r-=u);for(l=1,c=p[0];c>=10;c/=10,l++);l<u&&(r-=u-l)}return d.e=r,d.c=p,d}),H.sum=function(){for(var t=1,e=arguments,n=new H(e[0]);t<e.length;)n=n.plus(e[t++]);return n},_=function(){var t=\"0123456789\";function e(t,e,n,r){for(var o,i,s=[0],a=0,c=t.length;a<c;){for(i=s.length;i--;s[i]*=e);for(s[0]+=r.indexOf(t.charAt(a++)),o=0;o<s.length;o++)s[o]>n-1&&(null==s[o+1]&&(s[o+1]=0),s[o+1]+=s[o]/n|0,s[o]%=n)}return s.reverse()}return function(r,o,i,s,a){var c,u,l,h,p,f,d,m,y=r.indexOf(\".\"),w=C,v=I;for(y>=0&&(h=q,q=0,r=r.replace(\".\",\"\"),f=(m=new H(o)).pow(r.length-y),q=h,m.c=e(b(g(f.c),f.e,\"0\"),10,i,t),m.e=m.c.length),l=h=(d=e(r,o,i,a?(c=L,t):(c=t,L))).length;0==d[--h];d.pop());if(!d[0])return c.charAt(0);if(y<0?--l:(f.c=d,f.e=l,f.s=s,d=(f=n(f,m,w,v,i)).c,p=f.r,l=f.e),y=d[u=l+w+1],h=i/2,p=p||u<0||null!=d[u+1],p=v<4?(null!=y||p)&&(0==v||v==(f.s<0?3:2)):y>h||y==h&&(4==v||p||6==v&&1&d[u-1]||v==(f.s<0?8:7)),u<1||!d[0])r=p?b(c.charAt(1),-w,c.charAt(0)):c.charAt(0);else{if(d.length=u,p)for(--i;++d[--u]>i;)d[u]=0,u||(++l,d=[1].concat(d));for(h=d.length;!d[--h];);for(y=0,r=\"\";y<=h;r+=c.charAt(d[y++]));r=b(r,l,c.charAt(0))}return r}}(),n=function(){function t(t,e,n){var r,o,i,s,a=0,c=t.length,u=e%p,l=e/p|0;for(t=t.slice();c--;)a=((o=u*(i=t[c]%p)+(r=l*i+(s=t[c]/p|0)*u)%p*p+a)/n|0)+(r/p|0)+l*s,t[c]=o%n;return a&&(t=[a].concat(t)),t}function e(t,e,n,r){var o,i;if(n!=r)i=n>r?1:-1;else for(o=i=0;o<n;o++)if(t[o]!=e[o]){i=t[o]>e[o]?1:-1;break}return i}function n(t,e,n,r){for(var o=0;n--;)t[n]-=o,o=t[n]<e[n]?1:0,t[n]=o*r+t[n]-e[n];for(;!t[0]&&t.length>1;t.splice(0,1));}return function(r,o,s,a,l){var h,p,f,g,m,y,w,v,b,_,F,N,x,k,T,A,E,B=r.s==o.s?1:-1,O=r.c,S=o.c;if(!(O&&O[0]&&S&&S[0]))return new H(r.s&&o.s&&(O?!S||O[0]!=S[0]:S)?O&&0==O[0]||!S?0*B:B/0:NaN);for(b=(v=new H(B)).c=[],B=s+(p=r.e-o.e)+1,l||(l=c,p=d(r.e/u)-d(o.e/u),B=B/u|0),f=0;S[f]==(O[f]||0);f++);if(S[f]>(O[f]||0)&&p--,B<0)b.push(1),g=!0;else{for(k=O.length,A=S.length,f=0,B+=2,(m=i(l/(S[0]+1)))>1&&(S=t(S,m,l),O=t(O,m,l),A=S.length,k=O.length),x=A,F=(_=O.slice(0,A)).length;F<A;_[F++]=0);E=S.slice(),E=[0].concat(E),T=S[0],S[1]>=l/2&&T++;do{if(m=0,(h=e(S,_,A,F))<0){if(N=_[0],A!=F&&(N=N*l+(_[1]||0)),(m=i(N/T))>1)for(m>=l&&(m=l-1),w=(y=t(S,m,l)).length,F=_.length;1==e(y,_,w,F);)m--,n(y,A<w?E:S,w,l),w=y.length,h=1;else 0==m&&(h=m=1),w=(y=S.slice()).length;if(w<F&&(y=[0].concat(y)),n(_,y,F,l),F=_.length,-1==h)for(;e(S,_,A,F)<1;)m++,n(_,A<F?E:S,F,l),F=_.length}else 0===h&&(m++,_=[0]);b[f++]=m,_[0]?_[F++]=O[x]||0:(_=[O[x]],F=1)}while((x++<k||null!=_[0])&&B--);g=null!=_[0],b[0]||b.splice(0,1)}if(l==c){for(f=1,B=b[0];B>=10;B/=10,f++);W(v,s+(v.e=f+p*u-1)+1,a,g)}else v.e=p,v.r=+g;return v}}(),k=/^(-?)0([xbo])(?=\\w[\\w.]*$)/i,T=/^([^.]+)\\.$/,A=/^\\.([^.]+)$/,E=/^-?(Infinity|NaN)$/,B=/^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g,F=function(t,e,n,r){var o,i=n?e:e.replace(B,\"\");if(E.test(i))t.s=isNaN(i)?null:i<0?-1:1;else{if(!n&&(i=i.replace(k,(function(t,e,n){return o=\"x\"==(n=n.toLowerCase())?16:\"b\"==n?2:8,r&&r!=o?t:e})),r&&(o=r,i=i.replace(T,\"$1\").replace(A,\"0.$1\")),e!=i))return new H(i,o);if(H.DEBUG)throw Error(s+\"Not a\"+(r?\" base \"+r:\"\")+\" number: \"+e);t.s=null}t.c=t.e=null},O.absoluteValue=O.abs=function(){var t=new H(this);return t.s<0&&(t.s=1),t},O.comparedTo=function(t,e){return m(this,new H(t,e))},O.decimalPlaces=O.dp=function(t,e){var n,r,o,i=this;if(null!=t)return y(t,0,f),null==e?e=I:y(e,0,8),W(new H(i),t+i.e+1,e);if(!(n=i.c))return null;if(r=((o=n.length-1)-d(this.e/u))*u,o=n[o])for(;o%10==0;o/=10,r--);return r<0&&(r=0),r},O.dividedBy=O.div=function(t,e){return n(this,new H(t,e),C,I)},O.dividedToIntegerBy=O.idiv=function(t,e){return n(this,new H(t,e),0,1)},O.exponentiatedBy=O.pow=function(t,e){var n,r,a,c,l,h,p,f,d=this;if((t=new H(t)).c&&!t.isInteger())throw Error(s+\"Exponent not an integer: \"+V(t));if(null!=e&&(e=new H(e)),l=t.e>14,!d.c||!d.c[0]||1==d.c[0]&&!d.e&&1==d.c.length||!t.c||!t.c[0])return f=new H(Math.pow(+V(d),l?2-w(t):+V(t))),e?f.mod(e):f;if(h=t.s<0,e){if(e.c?!e.c[0]:!e.s)return new H(NaN);(r=!h&&d.isInteger()&&e.isInteger())&&(d=d.mod(e))}else{if(t.e>9&&(d.e>0||d.e<-1||(0==d.e?d.c[0]>1||l&&d.c[1]>=24e7:d.c[0]<8e13||l&&d.c[0]<=9999975e7)))return c=d.s<0&&w(t)?-0:0,d.e>-1&&(c=1/c),new H(h?1/c:c);q&&(c=o(q/u+2))}for(l?(n=new H(.5),h&&(t.s=1),p=w(t)):p=(a=Math.abs(+V(t)))%2,f=new H(S);;){if(p){if(!(f=f.times(d)).c)break;c?f.c.length>c&&(f.c.length=c):r&&(f=f.mod(e))}if(a){if(0===(a=i(a/2)))break;p=a%2}else if(W(t=t.times(n),t.e+1,1),t.e>14)p=w(t);else{if(0===(a=+V(t)))break;p=a%2}d=d.times(d),c?d.c&&d.c.length>c&&(d.c.length=c):r&&(d=d.mod(e))}return r?f:(h&&(f=S.div(f)),e?f.mod(e):c?W(f,q,I,undefined):f)},O.integerValue=function(t){var e=new H(this);return null==t?t=I:y(t,0,8),W(e,e.e+1,t)},O.isEqualTo=O.eq=function(t,e){return 0===m(this,new H(t,e))},O.isFinite=function(){return!!this.c},O.isGreaterThan=O.gt=function(t,e){return m(this,new H(t,e))>0},O.isGreaterThanOrEqualTo=O.gte=function(t,e){return 1===(e=m(this,new H(t,e)))||0===e},O.isInteger=function(){return!!this.c&&d(this.e/u)>this.c.length-2},O.isLessThan=O.lt=function(t,e){return m(this,new H(t,e))<0},O.isLessThanOrEqualTo=O.lte=function(t,e){return-1===(e=m(this,new H(t,e)))||0===e},O.isNaN=function(){return!this.s},O.isNegative=function(){return this.s<0},O.isPositive=function(){return this.s>0},O.isZero=function(){return!!this.c&&0==this.c[0]},O.minus=function(t,e){var n,r,o,i,s=this,a=s.s;if(e=(t=new H(t,e)).s,!a||!e)return new H(NaN);if(a!=e)return t.s=-e,s.plus(t);var l=s.e/u,h=t.e/u,p=s.c,f=t.c;if(!l||!h){if(!p||!f)return p?(t.s=-e,t):new H(f?s:NaN);if(!p[0]||!f[0])return f[0]?(t.s=-e,t):new H(p[0]?s:3==I?-0:0)}if(l=d(l),h=d(h),p=p.slice(),a=l-h){for((i=a<0)?(a=-a,o=p):(h=l,o=f),o.reverse(),e=a;e--;o.push(0));o.reverse()}else for(r=(i=(a=p.length)<(e=f.length))?a:e,a=e=0;e<r;e++)if(p[e]!=f[e]){i=p[e]<f[e];break}if(i&&(o=p,p=f,f=o,t.s=-t.s),(e=(r=f.length)-(n=p.length))>0)for(;e--;p[n++]=0);for(e=c-1;r>a;){if(p[--r]<f[r]){for(n=r;n&&!p[--n];p[n]=e);--p[n],p[r]+=c}p[r]-=f[r]}for(;0==p[0];p.splice(0,1),--h);return p[0]?J(t,p,h):(t.s=3==I?-1:1,t.c=[t.e=0],t)},O.modulo=O.mod=function(t,e){var r,o,i=this;return t=new H(t,e),!i.c||!t.s||t.c&&!t.c[0]?new H(NaN):!t.c||i.c&&!i.c[0]?new H(i):(9==D?(o=t.s,t.s=1,r=n(i,t,0,3),t.s=o,r.s*=o):r=n(i,t,0,D),(t=i.minus(r.times(t))).c[0]||1!=D||(t.s=i.s),t)},O.multipliedBy=O.times=function(t,e){var n,r,o,i,s,a,l,h,f,g,m,y,w,v,b,_=this,F=_.c,N=(t=new H(t,e)).c;if(!(F&&N&&F[0]&&N[0]))return!_.s||!t.s||F&&!F[0]&&!N||N&&!N[0]&&!F?t.c=t.e=t.s=null:(t.s*=_.s,F&&N?(t.c=[0],t.e=0):t.c=t.e=null),t;for(r=d(_.e/u)+d(t.e/u),t.s*=_.s,(l=F.length)<(g=N.length)&&(w=F,F=N,N=w,o=l,l=g,g=o),o=l+g,w=[];o--;w.push(0));for(v=c,b=p,o=g;--o>=0;){for(n=0,m=N[o]%b,y=N[o]/b|0,i=o+(s=l);i>o;)n=((h=m*(h=F[--s]%b)+(a=y*h+(f=F[s]/b|0)*m)%b*b+w[i]+n)/v|0)+(a/b|0)+y*f,w[i--]=h%v;w[i]=n}return n?++r:w.splice(0,1),J(t,w,r)},O.negated=function(){var t=new H(this);return t.s=-t.s||null,t},O.plus=function(t,e){var n,r=this,o=r.s;if(e=(t=new H(t,e)).s,!o||!e)return new H(NaN);if(o!=e)return t.s=-e,r.minus(t);var i=r.e/u,s=t.e/u,a=r.c,l=t.c;if(!i||!s){if(!a||!l)return new H(o/0);if(!a[0]||!l[0])return l[0]?t:new H(a[0]?r:0*o)}if(i=d(i),s=d(s),a=a.slice(),o=i-s){for(o>0?(s=i,n=l):(o=-o,n=a),n.reverse();o--;n.push(0));n.reverse()}for((o=a.length)-(e=l.length)<0&&(n=l,l=a,a=n,e=o),o=0;e;)o=(a[--e]=a[e]+l[e]+o)/c|0,a[e]=c===a[e]?0:a[e]%c;return o&&(a=[o].concat(a),++s),J(t,a,s)},O.precision=O.sd=function(t,e){var n,r,o,i=this;if(null!=t&&t!==!!t)return y(t,1,f),null==e?e=I:y(e,0,8),W(new H(i),t,e);if(!(n=i.c))return null;if(r=(o=n.length-1)*u+1,o=n[o]){for(;o%10==0;o/=10,r--);for(o=n[0];o>=10;o/=10,r++);}return t&&i.e+1>r&&(r=i.e+1),r},O.shiftedBy=function(t){return y(t,-9007199254740991,l),this.times(\"1e\"+t)},O.squareRoot=O.sqrt=function(){var t,e,r,o,i,s=this,a=s.c,c=s.s,u=s.e,l=C+4,h=new H(\"0.5\");if(1!==c||!a||!a[0])return new H(!c||c<0&&(!a||a[0])?NaN:a?s:1/0);if(0==(c=Math.sqrt(+V(s)))||c==1/0?(((e=g(a)).length+u)%2==0&&(e+=\"0\"),c=Math.sqrt(+e),u=d((u+1)/2)-(u<0||u%2),r=new H(e=c==1/0?\"5e\"+u:(e=c.toExponential()).slice(0,e.indexOf(\"e\")+1)+u)):r=new H(c+\"\"),r.c[0])for((c=(u=r.e)+l)<3&&(c=0);;)if(i=r,r=h.times(i.plus(n(s,i,l,1))),g(i.c).slice(0,c)===(e=g(r.c)).slice(0,c)){if(r.e<u&&--c,\"9999\"!=(e=e.slice(c-3,c+1))&&(o||\"4999\"!=e)){+e&&(+e.slice(1)||\"5\"!=e.charAt(0))||(W(r,r.e+C+2,1),t=!r.times(r).eq(s));break}if(!o&&(W(i,i.e+C+2,0),i.times(i).eq(s))){r=i;break}l+=4,c+=4,o=1}return W(r,r.e+C+1,I,t)},O.toExponential=function(t,e){return null!=t&&(y(t,0,f),t++),G(this,t,e,1)},O.toFixed=function(t,e){return null!=t&&(y(t,0,f),t=t+this.e+1),G(this,t,e)},O.toFormat=function(t,e,n){var r,o=this;if(null==n)null!=t&&e&&\"object\"==typeof e?(n=e,e=null):t&&\"object\"==typeof t?(n=t,t=e=null):n=$;else if(\"object\"!=typeof n)throw Error(s+\"Argument not an object: \"+n);if(r=o.toFixed(t,e),o.c){var i,a=r.split(\".\"),c=+n.groupSize,u=+n.secondaryGroupSize,l=n.groupSeparator||\"\",h=a[0],p=a[1],f=o.s<0,d=f?h.slice(1):h,g=d.length;if(u&&(i=c,c=u,u=i,g-=i),c>0&&g>0){for(i=g%c||c,h=d.substr(0,i);i<g;i+=c)h+=l+d.substr(i,c);u>0&&(h+=l+d.slice(i)),f&&(h=\"-\"+h)}r=p?h+(n.decimalSeparator||\"\")+((u=+n.fractionGroupSize)?p.replace(new RegExp(\"\\\\d{\"+u+\"}\\\\B\",\"g\"),\"$&\"+(n.fractionGroupSeparator||\"\")):p):h}return(n.prefix||\"\")+r+(n.suffix||\"\")},O.toFraction=function(t){var e,r,o,i,a,c,l,p,f,d,m,y,w=this,v=w.c;if(null!=t&&(!(l=new H(t)).isInteger()&&(l.c||1!==l.s)||l.lt(S)))throw Error(s+\"Argument \"+(l.isInteger()?\"out of range: \":\"not an integer: \")+V(l));if(!v)return new H(w);for(e=new H(S),f=r=new H(S),o=p=new H(S),y=g(v),a=e.e=y.length-w.e-1,e.c[0]=h[(c=a%u)<0?u+c:c],t=!t||l.comparedTo(e)>0?a>0?e:f:l,c=j,j=1/0,l=new H(y),p.c[0]=0;d=n(l,e,0,1),1!=(i=r.plus(d.times(o))).comparedTo(t);)r=o,o=i,f=p.plus(d.times(i=f)),p=i,e=l.minus(d.times(i=e)),l=i;return i=n(t.minus(r),o,0,1),p=p.plus(i.times(f)),r=r.plus(i.times(o)),p.s=f.s=w.s,m=n(f,o,a*=2,I).minus(w).abs().comparedTo(n(p,r,a,I).minus(w).abs())<1?[f,o]:[p,r],j=c,m},O.toNumber=function(){return+V(this)},O.toPrecision=function(t,e){return null!=t&&y(t,1,f),G(this,t,e,2)},O.toString=function(t){var e,n=this,r=n.s,o=n.e;return null===o?r?(e=\"Infinity\",r<0&&(e=\"-\"+e)):e=\"NaN\":(null==t?e=o<=P||o>=M?v(g(n.c),o):b(g(n.c),o,\"0\"):10===t?e=b(g((n=W(new H(n),C+o+1,I)).c),n.e,\"0\"):(y(t,2,L.length,\"Base\"),e=_(b(g(n.c),o,\"0\"),10,t,r,!0)),r<0&&n.c[0]&&(e=\"-\"+e)),e},O.valueOf=O.toJSON=function(){return V(this)},O._isBigNumber=!0,null!=e&&H.set(e),H}()).default=n.BigNumber=n,t.exports?t.exports=n:(e||(e=\"undefined\"!=typeof self&&self?self:window),e.BigNumber=n)}(this)})).BigNumber;const P={ROUNDING_MODE:I.ROUND_DOWN};function M(t){return(new TextEncoder).encode(t)}function R(t){return\"string\"==typeof t?R(D(t)):(new TextDecoder).decode(t)}I.config(P);const j=\"INVALID_ARGUMENT\";function U(t,e=\"UNKNOWN_ERROR\",n={}){let r=[];Object.keys(n).forEach((t=>{try{r.push(t+\"=\"+JSON.stringify(n[t]))}catch(e){r.push(t+\"=\"+JSON.stringify(n[t].toString()))}}));let o=t;r.length&&(t+=\" (\"+r.join(\", \")+\")\");let i=new Error(t);return i.reason=o,i.code=e,Object.keys(n).forEach((function(t){i[t]=n[t]})),i}function D(t){if(\"string\"!=typeof t)throw new Error(\"hexToBytes only accept strings, got: \"+typeof t);if(\"0x\"===t.substr(0,2))return D(t.substr(2));const e=new Uint8Array(Math.ceil(t.length/2));let n=0;for(let r=0;r<t.length;r+=2){const o=parseInt(t.substr(r,2),16);if(isNaN(o))throw new Error(\"Cannot read hex string:\"+JSON.stringify(t));e[n]=o,n++}return e}function q(t){return Array.from(t).map((t=>t.toString(16).padStart(2,\"0\"))).join(\"\")}function $(t,e){if(\"string\"==typeof t){if(e&&\"hex\"===e.encoding&&\"string\"==typeof t){let e=t;e.length>2&&\"0x\"===e.substr(0,2)&&(e=e.substr(2));const n=D(e);return C(n)}return C(M(t))}return C(t)}let L={noether:\"0\",wei:\"1\",kwei:\"1000\",Kwei:\"1000\",babbage:\"1000\",femtoether:\"1000\",mwei:\"1000000\",Mwei:\"1000000\",lovelace:\"1000000\",picoether:\"1000000\",gwei:\"1000000000\",Gwei:\"1000000000\",shannon:\"1000000000\",nanoether:\"1000000000\",nano:\"1000000000\",szabo:\"1000000000000\",microether:\"1000000000000\",micro:\"1000000000000\",finney:\"1000000000000000\",milliether:\"1000000000000000\",milli:\"1000000000000000\",ether:\"1000000000000000000\",kether:\"1000000000000000000000\",grand:\"1000000000000000000000\",mether:\"1000000000000000000000000\",gether:\"1000000000000000000000000000\",tether:\"1000000000000000000000000000000\"};function H(t,e,n){return new Array(e-t.length+1).join(n||\"0\")+t}function G(t){return wt(t)&&t.name&&-1!==t.name.indexOf(\"(\")?t.name:t.name+\"(\"+J(!1,t.inputs||[]).join(\",\")+\")\"}function z(...t){const e=t.reduce(((t,e)=>t+e.length),0);var n=new Uint8Array(e);let r=0;for(let e of t)n.set(e,r),r+=e.length;return n}function J(t,e){const n=[];return e.forEach((function(e){if(\"object\"==typeof e.components){if(\"tuple\"!==e.type.substring(0,5))throw new Error(\"components found but type is not tuple; report on GitHub\");var r=\"\",o=e.type.indexOf(\"[\");o>=0&&(r=e.type.substring(o));var i=J(t,e.components);bt(i)&&t?n.push(\"tuple(\"+i.join(\",\")+\")\"+r):t?n.push(\"(\"+i+\")\"):n.push(\"(\"+i.join(\",\")+\")\"+r)}else n.push(e.type)})),n}function W(t){let e=t.indexOf(\"(\"),n=t.indexOf(\")\");return-1!==e&&-1!==n?t.substr(0,e):t}function V(t){let e=t.indexOf(\"(\"),n=t.indexOf(\")\");return-1!==e&&-1!==n?t.substr(e+1,n-e-1).replace(\" \",\"\"):\"\"}function K(t){return null==t?t:ot(t).toNumber()}function Z(t){return ot(t).toNumber()}function Y(t){return mt(t)?t.toString(10):\"\"+t}function X(t){return\"string\"==typeof t&&!t.startsWith(\"0x\")&&/^[A-Za-z0-9]+$/.test(t)?\"0x\"+t:nt(t)}function Q(t){if(\"string\"==typeof t)return t.startsWith(\"0x\")&&/^[A-Za-z0-9]+$/.test(t)?nt(t):\"0x\"+q(M(t));if(t instanceof Uint8Array)return\"0x\"+q(t);throw new Error(`toStringData: Error trying to convert ${t} (${typeof t}) to a hex string.`)}function tt(t){return\"boolean\"==typeof t?t:0!==ot(t).toNumber()}function et(t){let e=ot(t),n=e.toString(16);return e.isLessThan(0)?\"-0x\"+n.substr(1):\"0x\"+n}function nt(t){if(vt(t))return et(+t);if(mt(t))return et(t);if(yt(t)){const e=t;if(0===e.indexOf(\"-0x\"))return et(e);if(0===e.indexOf(\"0x\"))return e;if(!isFinite(e))return q(M(e))}if(t instanceof Uint8Array)return\"0x\"+q(t);if(bt(t)||wt(t))throw new Error(\"toHex can only be called with scalar values, not objects or arrays\");return et(t)}function rt(t){let e=t?t.toLowerCase():\"ether\",n=L[e];if(void 0===n)throw new Error(\"This unit doesn't exists, please use the one of the following units\"+JSON.stringify(L,null,2));return new I(n,10)}function ot(t){let e=t||0;return mt(e)?e:(\"string\"==typeof e&&(e=e.trim()),\"string\"!=typeof e||0!==e.indexOf(\"0x\")&&0!==e.indexOf(\"-0x\")?e instanceof Uint8Array?new I(q(e),16):new I(e,10):new I(e.replace(\"0x\",\"\").toLowerCase(),16))}function it(t){return new I(new Array(t).fill(\"1\").join(\"\"),2)}function st(t,e=256){let n=ot(t).integerValue();if(n.isLessThan(0)){return it(e).plus(n).plus(1)}return n}function at(t,e){return\"1\"==H(t.toString(2),e,\"0\")[0]}function ct(t){if(\"string\"!=typeof t)throw U(\"invalid address\",j,{arg:\"address\",value:t});if(t.trim().match(/^(0x)?[0-9a-fA-F]{40}$/))return\"0x\"!==t.trim().substring(0,2)&&(t=\"0x\"+t),ft(t);throw U(\"invalid address\",j,{arg:\"address\",value:t})}function ut(t,e=256){if(at(t,e)){const n=it(e);return t.minus(n).minus(1)}return t}function lt(t){return/^0x[0-9a-f]{40}$/i.test(t)}function ht(t){return!!/^(0x)?[0-9a-f]{40}$/i.test(t)&&(!(!/^(0x)?[0-9a-f]{40}$/.test(t)&&!/^(0x)?[0-9A-F]{40}$/.test(t))||pt(t))}function pt(t){const e=t.replace(\"0x\",\"\");let n=$(e.toLowerCase());for(let t=0;t<40;t++)if(parseInt(n[t],16)>7&&e[t].toUpperCase()!==e[t]||parseInt(n[t],16)<=7&&e[t].toLowerCase()!==e[t])return!1;return!0}function ft(t){if(void 0===t)return\"\";const e=t.toLowerCase().replace(\"0x\",\"\"),n=$(e);let r=\"0x\";for(let t=0;t<e.length;t++)parseInt(n[t],16)>7?r+=e[t].toUpperCase():r+=e[t];return r}function dt(t){if(!Array.isArray(t))throw new Error(`Value was not an array: ${JSON.stringify(t)}`);return t}function gt(t){return lt(t)?t:/^[0-9a-f]{40}$/.test(t)?\"0x\"+t:\"0x\"+H(nt(t).substr(2),40)}function mt(t){return t instanceof I}function yt(t){return\"string\"==typeof t||t&&t.constructor&&\"String\"===t.constructor.name}function wt(t){return null!==t&&!Array.isArray(t)&&\"object\"==typeof t}function vt(t){return\"boolean\"==typeof t}function bt(t){return Array.isArray(t)}var _t,Ft;function Nt(e,n){if(!e)throw new Error(\"jsonrpc method should be specified!\");if(\"string\"!=typeof e)throw new Error(`jsonrpc must be a string, got ${typeof e}!`);return t.messageId++,{jsonrpc:\"2.0\",id:t.messageId,method:e,params:n||[]}}function xt(t){return Array.isArray(t)?t.every(e):e(t);function e(t){return!(!t||\"error\"in t||\"2.0\"!==t.jsonrpc||\"number\"!=typeof t.id||null==t.result&&void 0===t.result)}}\n/*! *****************************************************************************\n  Copyright (c) Microsoft Corporation.\n\n  Permission to use, copy, modify, and/or distribute this software for any\n  purpose with or without fee is hereby granted.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n  PERFORMANCE OF THIS SOFTWARE.\n  ***************************************************************************** */\nfunction kt(t,e,n,r){var o,i=arguments.length,s=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,r);else for(var a=t.length-1;a>=0;a--)(o=t[a])&&(s=(i<3?o(s):i>3?o(e,n,s):o(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s}function Tt(t,e){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(t,e)}t.TransactionStatus=void 0,(_t=t.TransactionStatus||(t.TransactionStatus={})).pending=\"pending\",_t.confirmed=\"confirmed\",_t.failed=\"failed\",t.TransactionType=void 0,(Ft=t.TransactionType||(t.TransactionType={})).queued=\"queued\",Ft.dropped=\"dropped\",Ft.replaced=\"replaced\",Ft.pending=\"pending\",Ft.reverted=\"reverted\",Ft.confirmed=\"confirmed\",t.messageId=0;function At(t){return ot(t)}function Et(t){return void 0===t?\"latest\":Bt(t)}function Bt(t){return void 0===t||null==t?null:function(t){return\"latest\"===t||\"pending\"===t||\"earliest\"===t}(t)?t:nt(t)}function Ot(t){return t.from=t.from,t.from&&(t.from=jt(t.from)),t.to&&(t.to=jt(t.to)),void 0!==t.gasPrice&&(t.gasPrice=et(t.gasPrice)),void 0!==t.gas&&(t.gas=et(t.gas)),void 0!==t.value&&(t.value=et(t.value)),void 0!==t.nonce&&(t.nonce=et(t.nonce)),t.data&&!t.data.startsWith(\"0x\")&&/^[A-Za-z0-9]+$/.test(t.data)&&(t.data=\"0x\"+t.data),t}function St(t){if(\"string\"!=typeof t)throw new Error(\"The provided input for transactionId is not a string, got: \"+JSON.stringify(t));if(0!==t.indexOf(\"0x\"))throw new Error(\"TransactionID must start with 0x, got: \"+JSON.stringify(t));if(66!==t.length)throw new Error(\"TransactionID must be a 32 byte hex, got: \"+JSON.stringify(t));return t}function Ct(t){if(\"object\"!=typeof t)throw new Error(\"Did not provide transaction options\");if(!t.from)throw new Error('Missing \"from\" in transaction options');return t.from=jt(t.from),t.to&&(t.to=jt(t.to)),void 0!==t.gasPrice&&(t.gasPrice=et(t.gasPrice)),void 0!==t.gas&&(t.gas=et(t.gas)),void 0!==t.value&&(t.value=et(t.value)),void 0!==t.nonce&&(t.nonce=et(t.nonce)),t.data&&!t.data.startsWith(\"0x\")&&/^[A-Za-z0-9]+$/.test(t.data)&&(t.data=\"0x\"+t.data),t}function It(t){return t?(null!==t.blockNumber&&(t.blockNumber=Z(t.blockNumber)),null!==t.transactionIndex&&(t.transactionIndex=Z(t.transactionIndex)),t.nonce=Z(t.nonce),t.gas=Z(t.gas),t.gasPrice=ot(t.gasPrice),t.value=ot(t.value),t):null}function Pt(t){return t?(null!==t.blockNumber&&(t.blockNumber=Z(t.blockNumber)),null!==t.transactionIndex&&(t.transactionIndex=Z(t.transactionIndex)),t.cumulativeGasUsed=Z(t.cumulativeGasUsed),t.gasUsed=Z(t.gasUsed),t.logs&&bt(t.logs)&&(t.logs=t.logs.map((function(t){return Rt(t)}))),t.status=Z(t.status||\"\"),t):null}function Mt(t){return t?(t.gasLimit=Z(t.gasLimit),t.gasUsed=Z(t.gasUsed),t.size=Z(t.size),t.timestamp=Z(t.timestamp),null!==t.number&&(t.number=Z(t.number)),t.difficulty=ot(t.difficulty),t.totalDifficulty=ot(t.totalDifficulty),bt(t.transactions)&&t.transactions.forEach((function(e,n){yt(e)||(t.transactions[n]=It(e)||t.transactions[n])})),t):null}function Rt(t){return t?(t.blockNumber&&(t.blockNumber=Z(t.blockNumber)),t.transactionIndex&&(t.transactionIndex=Z(t.transactionIndex)),t.logIndex&&(t.logIndex=Z(t.logIndex)),t):t}function jt(t){if(lt(t))return t;if(ht(t))return\"0x\"+t;throw new Error(`Invalid address: ${JSON.stringify(t)}`)}function Ut(t){return t}function Dt(t){return t?(t.startingBlock=Z(t.startingBlock),t.currentBlock=Z(t.currentBlock),t.highestBlock=Z(t.highestBlock),t.knownStates&&(t.knownStates=Z(t.knownStates),t.pulledStates=Z(t.pulledStates)),t):t}class qt{constructor(t){this.callName=t.callName,this.params=t.params||0,this.inputFormatter=t.inputFormatter||null,this.outputFormatter=t.outputFormatter}validateArgs(t){if(t.length!==this.params)throw e=this.callName,n=t.length,r=this.params,new Error(`Invalid number of input parameters to RPC method \"${e}\" given: ${n}, expected: ${r}`);var e,n,r}formatInput(t){return this.inputFormatter?this.inputFormatter.map((function(e,n){return e?e(t[n]):t[n]})):t}formatOutput(t){return null!==t?this.outputFormatter(t):null}toPayload(t){let e=this.formatInput(t);return this.validateArgs(e),{method:this.callName,params:e}}async execute(t,...e){let n=this.toPayload(e);if(!t)throw new Error(\"Missing RequestManager in method#exec\");const r=await t.sendAsync(n);return this.formatOutput(r)}}class $t{constructor(t){this.getter=t.getter,this.outputFormatter=t.outputFormatter}formatOutput(t){return this.outputFormatter(t)}async execute(t,...e){const n=await t.sendAsync({method:this.getter,params:[]});return this.formatOutput(n)}}var Lt;function Ht(t){return new Promise((e=>setTimeout(e,t)))}t.eth=void 0,(Lt=t.eth||(t.eth={})).eth_getBalance=new qt({callName:\"eth_getBalance\",params:2,inputFormatter:[jt,Et],outputFormatter:At}),Lt.eth_getStorageAt=new qt({callName:\"eth_getStorageAt\",params:3,inputFormatter:[jt,nt,Et],outputFormatter:X}),Lt.eth_getCode=new qt({callName:\"eth_getCode\",params:2,inputFormatter:[jt,Et],outputFormatter:X}),Lt.eth_getBlockByHash=new qt({callName:\"eth_getBlockByHash\",params:2,inputFormatter:[Bt,function(t){return!!t}],outputFormatter:Mt}),Lt.eth_getBlockByNumber=new qt({callName:\"eth_getBlockByNumber\",params:2,inputFormatter:[Bt,function(t){return!!t}],outputFormatter:Mt}),Lt.eth_getUncleByBlockHashAndIndex=new qt({callName:\"eth_getUncleByBlockHashAndIndex\",params:2,inputFormatter:[Bt,nt],outputFormatter:Mt}),Lt.eth_getUncleByBlockNumberAndIndex=new qt({callName:\"eth_getUncleByBlockNumberAndIndex\",params:2,inputFormatter:[Bt,nt],outputFormatter:Mt}),Lt.eth_getBlockTransactionCountByHash=new qt({callName:\"eth_getBlockTransactionCountByHash\",params:1,inputFormatter:[Bt],outputFormatter:Z}),Lt.eth_getBlockTransactionCountByNumber=new qt({callName:\"eth_getBlockTransactionCountByNumber\",params:1,inputFormatter:[Bt],outputFormatter:Z}),Lt.eth_getUncleCountByBlockHash=new qt({callName:\"eth_getUncleCountByBlockHash\",params:1,inputFormatter:[Bt],outputFormatter:Z}),Lt.eth_getUncleCountByBlockNumber=new qt({callName:\"eth_getUncleCountByBlockNumber\",params:1,inputFormatter:[Bt],outputFormatter:Z}),Lt.eth_getTransactionByHash=new qt({callName:\"eth_getTransactionByHash\",params:1,inputFormatter:[St],outputFormatter:It}),Lt.eth_getTransactionByBlockHashAndIndex=new qt({callName:\"eth_getTransactionByBlockHashAndIndex\",params:2,inputFormatter:[Bt,nt],outputFormatter:It}),Lt.eth_getTransactionByBlockNumberAndIndex=new qt({callName:\"eth_getTransactionByBlockNumberAndIndex\",params:2,inputFormatter:[Bt,nt],outputFormatter:It}),Lt.eth_getTransactionReceipt=new qt({callName:\"eth_getTransactionReceipt\",params:1,inputFormatter:[St],outputFormatter:Pt}),Lt.eth_getTransactionCount=new qt({callName:\"eth_getTransactionCount\",params:2,inputFormatter:[jt,Et],outputFormatter:Z}),Lt.eth_sendRawTransaction=new qt({callName:\"eth_sendRawTransaction\",params:1,inputFormatter:[null],outputFormatter:X}),Lt.web3_sha3=new qt({callName:\"web3_sha3\",params:1,inputFormatter:[null],outputFormatter:X}),Lt.eth_sendTransaction=new qt({callName:\"eth_sendTransaction\",params:1,inputFormatter:[Ct],outputFormatter:X}),Lt.eth_sign=new qt({callName:\"eth_sign\",params:2,inputFormatter:[jt,null],outputFormatter:X}),Lt.eth_call=new qt({callName:\"eth_call\",params:2,inputFormatter:[Ot,Et],outputFormatter:X}),Lt.eth_estimateGas=new qt({callName:\"eth_estimateGas\",params:1,inputFormatter:[Ot],outputFormatter:Z}),Lt.eth_submitWork=new qt({callName:\"eth_submitWork\",params:3,inputFormatter:[null,null,null],outputFormatter:tt}),Lt.eth_getWork=new qt({callName:\"eth_getWork\",params:0,inputFormatter:[],outputFormatter:dt}),Lt.eth_coinbase=new $t({getter:\"eth_coinbase\",outputFormatter:gt}),Lt.eth_mining=new $t({getter:\"eth_mining\",outputFormatter:tt}),Lt.eth_hashrate=new $t({getter:\"eth_hashrate\",outputFormatter:Z}),Lt.eth_syncing=new $t({getter:\"eth_syncing\",outputFormatter:Dt}),Lt.eth_gasPrice=new $t({getter:\"eth_gasPrice\",outputFormatter:At}),Lt.eth_accounts=new $t({getter:\"eth_accounts\",outputFormatter:dt}),Lt.eth_blockNumber=new $t({getter:\"eth_blockNumber\",outputFormatter:Z}),Lt.eth_protocolVersion=new $t({getter:\"eth_protocolVersion\",outputFormatter:Z}),Lt.web3_clientVersion=new $t({getter:\"web3_clientVersion\",outputFormatter:Y}),Lt.net_version=new $t({getter:\"net_version\",outputFormatter:Y}),Lt.shh_version=new qt({callName:\"shh_version\",params:0,inputFormatter:[],outputFormatter:Z}),Lt.shh_post=new qt({callName:\"shh_post\",params:1,inputFormatter:[null],outputFormatter:tt}),Lt.personal_newAccount=new qt({callName:\"personal_newAccount\",params:1,inputFormatter:[null],outputFormatter:gt}),Lt.personal_importRawKey=new qt({callName:\"personal_importRawKey\",params:2,inputFormatter:[null,null],outputFormatter:gt}),Lt.personal_sign=new qt({callName:\"personal_sign\",params:3,inputFormatter:[Q,jt,null],outputFormatter:X}),Lt.personal_ecRecover=new qt({callName:\"personal_ecRecover\",params:2,inputFormatter:[Q,null],outputFormatter:gt}),Lt.personal_unlockAccount=new qt({callName:\"personal_unlockAccount\",params:3,inputFormatter:[jt,null,K],outputFormatter:tt}),Lt.personal_sendTransaction=new qt({callName:\"personal_sendTransaction\",params:2,inputFormatter:[Ct,null],outputFormatter:X}),Lt.personal_lockAccount=new qt({callName:\"personal_lockAccount\",params:1,inputFormatter:[jt],outputFormatter:tt}),Lt.personal_listAccounts=new $t({getter:\"personal_listAccounts\",outputFormatter:dt}),Lt.net_listening=new $t({getter:\"net_listening\",outputFormatter:tt}),Lt.net_peerCount=new $t({getter:\"net_peerCount\",outputFormatter:Z}),Lt.eth_newFilter=new qt({callName:\"eth_newFilter\",params:1,inputFormatter:[Ut],outputFormatter:nt}),Lt.eth_getLogs=new qt({callName:\"eth_getLogs\",params:1,inputFormatter:[nt],outputFormatter:dt}),Lt.eth_newBlockFilter=new qt({callName:\"eth_newBlockFilter\",params:0,inputFormatter:[],outputFormatter:nt}),Lt.eth_newPendingTransactionFilter=new qt({callName:\"eth_newPendingTransactionFilter\",params:0,inputFormatter:[],outputFormatter:nt}),Lt.eth_uninstallFilter=new qt({callName:\"eth_uninstallFilter\",params:1,inputFormatter:[nt],outputFormatter:tt}),Lt.eth_getFilterLogs=new qt({callName:\"eth_getFilterLogs\",params:1,inputFormatter:[nt],outputFormatter:dt}),Lt.eth_getFilterChanges=new qt({callName:\"eth_getFilterChanges\",params:1,inputFormatter:[nt],outputFormatter:dt}),Lt.eth_submitHashrate=new qt({callName:\"eth_submitHashrate\",params:2,inputFormatter:[null,null],outputFormatter:tt}),Lt.shh_newIdentity=new qt({callName:\"shh_newIdentity\",params:0,inputFormatter:[],outputFormatter:X}),Lt.shh_hasIdentity=new qt({callName:\"shh_hasIdentity\",params:1,inputFormatter:[null],outputFormatter:tt}),Lt.shh_newGroup=new qt({callName:\"shh_newGroup\",params:0,inputFormatter:[],outputFormatter:X}),Lt.shh_addToGroup=new qt({callName:\"shh_addToGroup\",params:1,inputFormatter:[null],outputFormatter:tt}),Lt.shh_newFilter=new qt({callName:\"shh_newFilter\",params:1,inputFormatter:[null],outputFormatter:nt}),Lt.shh_uninstallFilter=new qt({callName:\"shh_uninstallFilter\",params:1,inputFormatter:[null],outputFormatter:tt}),Lt.shh_getLogs=new qt({callName:\"shh_getLogs\",params:1,inputFormatter:[null],outputFormatter:dt}),Lt.shh_getFilterMessages=new qt({callName:\"shh_getFilterMessages\",params:1,inputFormatter:[null],outputFormatter:dt}),Lt.shh_getFilterChanges=new qt({callName:\"shh_getFilterChanges\",params:1,inputFormatter:[null],outputFormatter:dt}),Lt.shh_getMessages=new qt({callName:\"shh_getMessages\",params:1,inputFormatter:[null],outputFormatter:dt});function Gt(e,n){const r=t.eth[n];if(!r)throw new Error(`Could not find the method/property named ${n.toString()}`);Object.defineProperty(e,n,{value:function(){return r.execute(this,...arguments)}})}class zt{constructor(t){this.provider=t,this.requests=new Map}async sendAsync(t){const e=await this.provider;if(!e)throw new Error(\"Provider not set or invalid\");let n=Nt(t.method,t.params);const r=i();return this.requests.set(n.id,r),e.sendAsync(n,((t,e)=>{this.requests.delete(n.id),t?r.reject(t):xt(e)?r.resolve(e.result):r.reject(function(t){let e=t&&t.error&&t.error.message?t.error.message:\"Invalid JSON RPC response: \"+JSON.stringify(t);return new Error(e)}(e))})),r}setProvider(t){this.provider=t}async getConfirmedTransaction(t){const e=await this.waitForCompletion(t);if(this.isFailure(e))throw new Error(`Transaction \"${t}\" failed`);return e}async waitForCompletion(e,n){const r=St(e);if(await this.isTxDropped(r,n)){const e=await this.getTransactionAndReceipt(r);return Object.assign(Object.assign({},e),{status:t.TransactionStatus.failed})}for(;;){const e=await this.getTransactionAndReceipt(r);if(!this.isPending(e)&&e.receipt)return Object.assign(Object.assign({},e),{status:this.isFailure(e)?t.TransactionStatus.failed:t.TransactionStatus.confirmed});await Ht(2e3)}}async getTransaction(e){let n,r=null;const o=St(e);try{const t=(await this.eth_accounts())[0];t&&(r=await this.eth_getTransactionCount(t,\"latest\"))}catch(t){r=null}try{if(n=await this.eth_getTransactionByHash(o),null==n)return null}catch(t){return null}if(null==n.blockNumber){if(null!=r){if(n.nonce<r){return{hash:o,type:t.TransactionType.replaced,nonce:n.nonce}}if(n.nonce>r){return{hash:o,type:t.TransactionType.queued,nonce:n.nonce}}}return Object.assign({type:t.TransactionType.pending},n)}let i;try{if(i=await this.eth_getTransactionReceipt(o),null==i||0===i.status){return Object.assign({type:t.TransactionType.reverted},n)}}catch(t){return null}return Object.assign(Object.assign({type:t.TransactionType.confirmed},n),{receipt:i})}async isTxDropped(t,e=15){let n=e;for(;n>0;){if(null!==await this.getTransactionAndReceipt(t))return!1;n-=1,await Ht(2e3)}return!0}async getTransactionAndReceipt(t){t=St(t);const[e,n]=await Promise.all([this.eth_getTransactionByHash(t),this.eth_getTransactionReceipt(t)]);return Object.assign(Object.assign({},e),{receipt:n})}isPending(t){return t&&null===t.blockNumber}isFailure(t){return t&&(!t.receipt||0===t.receipt.status)}}function Jt(t){return\"slice\"in t&&t.slice||(t.slice=function(){var e=Array.prototype.slice.call(arguments);return new Uint8Array(Array.prototype.slice.apply(t,e))}),t}function Wt(t){if(null==t)throw U(\"cannot convert null value to array\",j,{arg:\"value\",value:t});if(t instanceof Uint8Array)return Jt(new Uint8Array(t));if(\"string\"==typeof t){let r=t.match(/^(0x)?[0-9a-fA-F]*$/);if(!r)throw U(\"invalid hexidecimal string\",j,{arg:\"value\",value:t});if(\"0x\"!==r[1])throw U(\"hex string must have 0x prefix\",j,{arg:\"value\",value:t});(t=t.substring(2)).length%2&&(t=\"0\"+t);for(var e=[],n=0;n<t.length;n+=2)e.push(parseInt(t.substr(n,2),16));return Jt(new Uint8Array(e))}if(function(t){if(!t||parseInt(String(t.length))!=t.length||\"string\"==typeof t)return!1;for(var e=0;e<t.length;e++){var n=t[e];if(n<0||n>=256||parseInt(String(n))!=n)return!1}return!0}(t))return Jt(new Uint8Array(t));throw U(\"invalid arrayify value\",void 0,{arg:\"value\",value:t,type:typeof t})}function Vt(t,e,n){Object.defineProperty(t,e,{enumerable:!0,value:n,writable:!1})}kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"web3_clientVersion\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"web3_sha3\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"net_version\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"net_peerCount\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"net_listening\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_protocolVersion\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_syncing\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_coinbase\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_mining\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_hashrate\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_gasPrice\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_accounts\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_blockNumber\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getBalance\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getStorageAt\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getTransactionCount\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getBlockTransactionCountByHash\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getBlockTransactionCountByNumber\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getUncleCountByBlockHash\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getUncleCountByBlockNumber\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getCode\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_sign\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_sendTransaction\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_sendRawTransaction\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_call\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_estimateGas\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getBlockByHash\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getBlockByNumber\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getTransactionByHash\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getTransactionByBlockHashAndIndex\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getTransactionByBlockNumberAndIndex\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getTransactionReceipt\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getUncleByBlockHashAndIndex\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getUncleByBlockNumberAndIndex\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_newFilter\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_newBlockFilter\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_newPendingTransactionFilter\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_uninstallFilter\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getFilterChanges\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getFilterLogs\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getLogs\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_getWork\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_submitWork\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"eth_submitHashrate\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"shh_post\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"shh_version\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"shh_newIdentity\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"shh_hasIdentity\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"shh_newGroup\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"shh_addToGroup\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"shh_newFilter\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"shh_uninstallFilter\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"shh_getFilterChanges\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"shh_getMessages\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"personal_unlockAccount\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"personal_newAccount\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"personal_listAccounts\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"personal_lockAccount\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"personal_importRawKey\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"personal_sendTransaction\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"personal_sign\",void 0),kt([Gt,Tt(\"design:type\",Function)],zt.prototype,\"personal_ecRecover\",void 0);const Kt=new I(-1),Zt=new I(0),Yt=new I(1),Xt=new I(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");function Qt(t){return function(t,e){function n(e){return new Error('unexpected character \"'+t[e]+'\" at position '+e+' in \"'+t+'\"')}for(var r={type:\"\",name:\"\",state:{allowType:!0}},o=r,i=0;i<t.length;i++){var s=t[i];switch(s){case\"(\":if(!o.state.allowParams)throw n(i);o.state.allowType=!1,o.type=te(o.type),o.components=[{type:\"\",name:\"\",parent:o,state:{allowType:!0}}],o=o.components[0];break;case\")\":delete o.state,e&&\"indexed\"===o.name&&(o.indexed=!0,o.name=\"\"),o.type=te(o.type);var a=o;if(!(o=o.parent))throw n(i);delete a.parent,o.state.allowParams=!1,o.state.allowName=!0,o.state.allowArray=!0;break;case\",\":delete o.state,e&&\"indexed\"===o.name&&(o.indexed=!0,o.name=\"\"),o.type=te(o.type);var c={type:\"\",name:\"\",parent:o.parent,state:{allowType:!0}};o.parent.components.push(c),delete o.parent,o=c;break;case\" \":o.state.allowType&&\"\"!==o.type&&(o.type=te(o.type),delete o.state.allowType,o.state.allowName=!0,o.state.allowParams=!0),o.state.allowName&&\"\"!==o.name&&(e&&\"indexed\"===o.name?(o.indexed=!0,o.name=\"\"):o.state.allowName=!1);break;case\"[\":if(!o.state.allowArray)throw n(i);o.type+=s,o.state.allowArray=!1,o.state.allowName=!1,o.state.readArray=!0;break;case\"]\":if(!o.state.readArray)throw n(i);o.type+=s,o.state.readArray=!1,o.state.allowArray=!0,o.state.allowName=!0;break;default:if(o.state.allowType)o.type+=s,o.state.allowParams=!0,o.state.allowArray=!0;else if(o.state.allowName)o.name+=s,delete o.state.allowArray;else{if(!o.state.readArray)throw n(i);o.type+=s}}}if(o.parent)throw new Error(\"unexpected eof\");delete r.state,e&&\"indexed\"===o.name&&(o.indexed=!0,o.name=\"\");return r.type=te(r.type),r}(t,!0)}function te(t){return t.match(/^uint($|[^1-9])/)?t=\"uint256\"+t.substring(4):t.match(/^int($|[^1-9])/)&&(t=\"int256\"+t.substring(3)),t}const ee=new RegExp(/^bytes([0-9]*)$/),ne=new RegExp(/^(u?int)([0-9]*)$/),re=new RegExp(/^(.*)\\[([0-9]*)\\]$/),oe=function(t,e){var n=t.match(ne);return n&&parseInt(n[2])<=48?e.toNumber():e};class ie{constructor(t,e,n,r=\"\",o){this.coerceFunc=t,this.name=e,this.type=n,this.localName=r,this.dynamic=o}}class se extends ie{constructor(t){super(t.coerceFunc,t.name,t.type,void 0,t.dynamic),Vt(this,\"coder\",t)}encode(t){return this.coder.encode(t)}decode(t,e){return this.coder.decode(t,e)}}class ae extends ie{constructor(t,e){super(t,\"null\",\"\",e,!1)}encode(t){return Wt([])}decode(t,e){if(e>t.length)throw new Error(\"invalid null\");return{consumed:0,value:this.coerceFunc(\"null\",void 0)}}}function ce(t,e){return new I(t.toString(2).substr(-e),2)}class ue extends ie{constructor(t,e,n,r){const o=(n?\"int\":\"uint\")+8*e;super(t,o,o,r,!1),this.size=e,this.signed=n}encode(t){try{let e=ot(t);if(this.signed){let t=ce(Xt,8*this.size-1);if(e.gt(t))throw new Error(\"out-of-bounds\");if(t=t.plus(Yt).multipliedBy(Kt),e.lt(t))throw new Error(\"out-of-bounds\")}else if(e.lt(Zt)||e.gt(ce(Xt,8*this.size)))throw new Error(\"out-of-bounds\");e=ce(st(e,8*this.size),8*this.size),this.signed&&(e=st(ut(e,8*this.size),256));let n=H(st(e).toString(16),64);if(-1!=n.indexOf(\"NaN\"))throw U(\"invalid number value, NaN\",j,{arg:this.localName,coderType:this.name,value:t,v:e,twosComplement:st(e),twosComplement16:st(e).toString(16),pad:H(st(e).toString(16),64),size:this.size});return D(n)}catch(e){throw U(\"invalid number value\",j,{arg:this.localName,coderType:this.name,value:t,message:e.toString()})}}decode(t,e){if(t.length<e+32)throw U(\"insufficient data for \"+this.name+\" type\",j,{arg:this.localName,coderType:this.name,value:nt(t.slice(e,e+32))});var n=32-this.size,r=new I(q(t.slice(e+n,e+32)),16);return r=this.signed?ut(r,8*this.size):ce(r,8*this.size),{consumed:32,value:this.coerceFunc(this.name,r)}}}var le=new ue((function(t,e){return e}),32,!1,\"none\");class he extends ie{constructor(t,e,n){const r=\"bytes\"+e;super(t,r,r,n,!1),this.length=e}encode(t){var e=new Uint8Array(32);try{if(\"string\"==typeof t&&t.length%2!=0)throw new Error(\"hex string cannot be odd-length\");let n=Wt(t);if(n.length>this.length)throw new Error(\"incorrect data length\");e.set(n)}catch(e){throw U(\"invalid \"+this.name+\" value. Use hex strings or Uint8Array\",j,{arg:this.localName,coderType:this.name,value:e.value||t,details:e.message})}return e}decode(t,e){if(t.length<e+32)throw U(\"insufficient data for \"+this.name+\" type\",j,{arg:this.localName,coderType:this.name,value:nt(t.slice(e,e+32))});return{consumed:32,value:this.coerceFunc(this.name,t.slice(e,e+this.length))}}}function pe(t){var e=32*Math.ceil(t.length/32),n=new Uint8Array(e-t.length);return z(le.encode(t.length),t,n)}function fe(t,e,n){if(t.length<e+32)throw U(\"insufficient data for dynamicBytes length\",j,{arg:n,coderType:\"dynamicBytes\",value:nt(t.slice(e,e+32))});var r=le.decode(t,e).value;try{r=r.toNumber()}catch(t){throw t(\"dynamic bytes count too large\",j,{arg:n,coderType:\"dynamicBytes\",value:r.toString()})}if(t.length<e+32+r)throw U(\"insufficient data for dynamicBytes type\",j,{arg:n,coderType:\"dynamicBytes\",value:nt(t.slice(e,e+32+r))});return{consumed:32+32*Math.ceil(r/32),value:t.slice(e+32,e+32+r)}}function de(t){return 32*Math.ceil(t/32)}function ge(t,e){if(Array.isArray(e));else{if(!e||\"object\"!=typeof e)throw U(\"invalid tuple value\",j,{coderType:\"tuple\",value:e});var n=[];t.forEach((function(t){n.push(e[t.localName])})),e=n}if(t.length!==e.length)throw U(\"types/value length mismatch\",j,{coderType:\"tuple\",value:e});var r=[];t.forEach((function(t,n){r.push({dynamic:t.dynamic,value:t.encode(e[n])})}));var o=0,i=0;r.forEach((function(t){t.dynamic?(o+=32,i+=de(t.value.length)):o+=de(t.value.length)}));var s=0,a=o,c=new Uint8Array(o+i);return r.forEach((function(t){t.dynamic?(c.set(le.encode(a),s),s+=32,c.set(t.value,a),a+=de(t.value.length)):(c.set(t.value,s),s+=de(t.value.length))})),c}class me extends Array{}class ye extends ie{constructor(t,e,n,r){super(t,\"array\",e.type+\"[\"+(n>=0?n:\"\")+\"]\",r,-1===n||e.dynamic),this.coder=e,this.length=n}encode(t){if(!Array.isArray(t))throw U(\"expected array value\",j,{arg:this.localName,coderType:\"array\",value:t});var e=this.length,n=new Uint8Array(0);-1===e&&(e=t.length,n=le.encode(e)),function(t,e,n){if(n||(n=\"\"),t<e)throw U(\"missing argument\"+n,\"MISSING_ARGUMENT\",{count:t,expectedCount:e});if(t>e)throw U(\"too many arguments\"+n,\"UNEXPECTED_ARGUMENT\",{count:t,expectedCount:e})}(e,t.length,\"in coder array\"+(this.localName?\" \"+this.localName:\"\"));for(var r=[],o=0;o<t.length;o++)r.push(this.coder);return z(n,ge(r,t))}decode(t,e){var n=0,r=this.length;if(-1===r){try{var o=le.decode(t,e)}catch(t){throw t(\"insufficient data for dynamic array length\",j,{arg:this.localName,coderType:\"array\",value:t.value})}try{r=o.value.toNumber()}catch(t){throw t(\"array count too large\",j,{arg:this.localName,coderType:\"array\",value:o.value.toString()})}n+=o.consumed,e+=o.consumed}for(var i=[],s=0;s<r;s++)i.push(new se(this.coder));var a=function(t,e,n){var r=n,o=0,i=[];return t.forEach((function(t){if(t.dynamic){var s=le.decode(e,n);(a=t.decode(e,r+s.value.toNumber())).consumed=s.consumed}else var a=t.decode(e,n);null!=a.value&&i.push(a.value),n+=a.consumed,o+=a.consumed})),{value:i,consumed:o}}(i,t,e);return a.consumed+=n,a.value=this.coerceFunc(this.type,a.value),a}}class we extends ie{constructor(t,e,n){var r=!1,o=[];e.forEach((function(t){t.dynamic&&(r=!0),o.push(t.type)})),super(t,\"tuple\",\"tuple(\"+o.join(\",\")+\")\",n,r),this.coders=e}encode(t){return ge(this.coders,t)}decode(t,e){var n=function(t,e,n){var r=n,o=0,i=new me;return t.forEach((function(t){if(t.dynamic){var s=le.decode(e,n);(a=t.decode(e,r+s.value.toNumber())).consumed=s.consumed}else var a=t.decode(e,n);null!=a.value&&i.push(a.value),n+=a.consumed,o+=a.consumed})),t.forEach((function(t,e){let n=t.localName;n&&(\"length\"===n&&(n=\"_length\"),null==i[n]&&(i[n]=i[e]))})),{value:i,consumed:o}}(this.coders,t,e);return n.value=this.coerceFunc(this.type,n.value),n}}const ve={address:class extends ie{constructor(t,e){super(t,\"address\",\"address\",e,!1)}encode(t){let e=new Uint8Array(32);const n=t.trim();if(!ht(n))throw U(\"invalid address format\",j,{arg:this.localName,coderType:\"address\",value:t});try{e.set(D(jt(n)),12)}catch(e){throw U(`invalid address (${e.message})`,j,{arg:this.localName,coderType:\"address\",value:t})}return e}decode(t,e){if(t.length<e+32)throw U(\"insufficuent data for address type\",j,{arg:this.localName,coderType:\"address\",value:nt(t.slice(e,e+32)),missingBytes:e+32-t.length});return{consumed:32,value:this.coerceFunc(\"address\",ct(nt(t.slice(e+12,e+32))))}}},bool:class extends ie{constructor(t,e){super(t,\"bool\",\"bool\",e,!1)}encode(t){return le.encode(t?1:0)}decode(t,e){try{var n=le.decode(t,e)}catch(t){if(\"insufficient data for uint256 type\"===t.reason)throw U(\"insufficient data for boolean type\",j,{arg:this.localName,coderType:\"boolean\",value:t.value});throw t}return{consumed:n.consumed,value:this.coerceFunc(\"bool\",!n.value.isZero())}}},string:class extends ie{constructor(t,e){super(t,\"string\",\"string\",e,!0)}encode(t){if(\"string\"!=typeof t)throw U(\"invalid string value\",j,{arg:this.localName,coderType:\"string\",value:t});return pe(M(t))}decode(t,e){var n=fe(t,e,this.localName);return n.value=this.coerceFunc(\"string\",R(n.value)),n}},bytes:class extends ie{constructor(t,e){super(t,\"bytes\",\"bytes\",e,!0)}encode(t){try{return pe(Wt(t))}catch(t){throw t(\"invalid bytes value\",j,{arg:this.localName,coderType:\"bytes\",value:t.value})}}decode(t,e){var n=fe(t,e,this.localName);return n.value=this.coerceFunc(\"bytes\",n.value),n}},function:class extends he{constructor(t,e){super(t,24,e)}}};function be(t,e){var n,r=ve[e.type];if(r)return new r(t,e.name);if(n=e.type.match(ne)){let r=parseInt(n[2]||\"256\");if(0===r||r>256||r%8!=0)throw U(\"invalid \"+n[1]+\" bit length\",j,{arg:\"param\",value:e});return new ue(t,r/8,\"int\"===n[1],e.name)}if(n=e.type.match(ee)){let r=parseInt(n[1]);if(0===r||r>32)throw U(\"invalid bytes length\",j,{arg:\"param\",value:e});return new he(t,r,e.name)}if(n=e.type.match(re)){const r=Object.assign({},e);let o=parseInt(n[2]||\"-1\");return r.type=n[1],new ye(t,be(t,r),o,e.name)}if(\"tuple\"===e.type.substring(0,5))return function(t,e,n){e||(e=[]);var r=e.map((e=>be(t,e)));return new we(t,r,n)}(t,e.components,e.name);if(\"\"===e.type)return new ae(t,e.name);throw U(\"invalid type\",j,{arg:\"type\",value:e.type,fullType:e})}class _e{constructor(t){!function(t,e){if(!(t instanceof e))throw U(\"missing new\",\"MISSING_NEW\",{name:e.name})}(this,_e),t||(t=oe),Vt(this,\"coerceFunc\",t)}encode(t,e){if(t.length!==e.length)throw U(\"types/values length mismatch\",j,{count:{types:t.length,values:e.length},value:{types:t,values:e}});const n=t.map((t=>\"string\"==typeof t?Qt(t):t)).map((t=>be(this.coerceFunc,t)));return new we(this.coerceFunc,n,\"_\").encode(e)}decode(t,e){const n=t.map((t=>\"string\"==typeof t?Qt(t):t)).map((t=>be(this.coerceFunc,t)));return new we(this.coerceFunc,n,\"_\").decode(e,0).value}}const Fe=new _e;var Ne;!function(t){t.encodeParams=function(t,e){return q(Fe.encode(t,e))},t.decodeParams=function(t,e){if(t.length>0&&(!e||\"0x\"===e||\"0X\"===e))throw new Error(\"Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.\");return Fe.decode(t,D(\"0x\"+e.replace(/0x/i,\"\")))}}(Ne||(Ne={}));class xe{constructor(t){this.json=t,this._inputTypes=t.inputs||[],this._outputTypes=t.outputs||[],this._constant=!!t.constant,this._payable=!!t.payable||\"payable\"===t.stateMutability,this.needsToBeTransaction=this._payable||\"constant\"in t&&!t.constant||\"nonpayable\"===t.stateMutability,this._name=G(t)}extractDefaultBlock(t){return t.length>this._inputTypes.length&&!wt(t[t.length-1])&&Et(t.pop())||\"latest\"}validateArgs(t){if(t.some((t=>void 0===t)))throw new Error(\"Invalid call, some arguments are undefined\");let e=t.filter((function(t){return!(!0===wt(t)&&!1===bt(t)&&!1===mt(t)&&!(t instanceof Uint8Array))}));if(e.length!==this._inputTypes.length)throw n=e.length,r=this._inputTypes.length,new Error(`Invalid number of arguments to Solidity function. given: ${n}, expected: ${r}`);var n,r}toPayload(t){let e={to:void 0,data:void 0,value:void 0,from:void 0};t.length>this._inputTypes.length&&wt(t[t.length-1])&&(e=t.pop()),this.validateArgs(t);const n=this.signature();let r=Ne.encodeParams(this._inputTypes,t);return 0==r.indexOf(\"0x\")&&(r=r.substr(2)),e.data=\"0x\"+n+r,e}signature(){return $(this._name).slice(0,8)}unpackOutput(t){if(!t)return;const e=t.length>=2?t.slice(2):t;let n=Ne.decodeParams(this._outputTypes,e);return 1===n.length?n[0]:n}async execute(t,e,...n){if(!t)throw new Error(`Cannot call function ${this.displayName()} because there is no requestManager`);if(this.needsToBeTransaction){const r=this.toPayload(n);if(r.to=e,r.value>0&&!this._payable)throw new Error(\"Cannot send value to non-payable function\");if(!r.from)throw new Error('Missing \"from\" in transaction options');return await t.eth_sendTransaction(r)}{const r=this.extractDefaultBlock(n),o=this.toPayload(n);o.to=e;const i=await t.eth_call(o,r);return this.unpackOutput(i)}}estimateGas(t,e,...n){if(!(t instanceof zt))throw new Error(\"estimateGas needs to receive a RequestManager as first argument\");let r=this.toPayload(n);return r.to=e,t.eth_estimateGas(r)}displayName(){return W(this._name)}typeName(){return V(this._name)||\"void\"}attachToContract(t){let e=this.displayName();const n=Object.assign(((...e)=>this.execute(t.requestManager,t.address,...e)),{estimateGas:this.estimateGas.bind(this,t.requestManager,t.address),toPayload:(...t)=>this.toPayload(t)});t[e]||(t[e]=n),t[e][this.typeName()]=n}}function ke(t){if(null==t)return null;const e=String(t).toString();return 0===e.indexOf(\"0x\")?e:q(M(e))}class Te{constructor(t){this.requestManager=t,this.isStarted=!1,this.isDisposed=!1,this.formatter=t=>t,this.filterId=i(),this.callbacks=[],this.stopSemaphore=i()}async watch(t){if(this.isDisposed)throw new Error(\"The filter was disposed\");t&&(this.callbacks.push(t),this.isStarted||await this.start())}async start(){if(this.isDisposed)throw new Error(\"The filter was disposed\");if(!this.isStarted){this.isStarted=!0;try{const t=await this.getNewFilter();if(!t)throw new Error(\"Could not create a filter, response: \"+JSON.stringify(t));this.filterId.resolve(t)}catch(t){throw t}this.stopSemaphore=i(),await this.poll()}}async stop(){if(!this.isStarted)return;if(this.isDisposed)return;this.isDisposed=!0;const t=await this.filterId;this.isStarted=!1,this.stopSemaphore&&await this.stopSemaphore;if(!0!==await this.uninstall())throw new Error(`Couldn't stop the eth filter: ${t}`)}async poll(){if(this.isStarted){if(this.callbacks.length){const t=await this.getChanges();this.callbacks.forEach((e=>{this.formatter?t.forEach((t=>{e(this.formatter(t))})):t.forEach((t=>e(t)))}))}this.stopSemaphore.resolve(1),this.isStarted&&(this.stopSemaphore=i(),setTimeout((t=()=>this.poll(),function(){t().catch((t=>console.error(t)))}),500))}else this.stopSemaphore.resolve(1);var t}}class Ae extends Te{constructor(t,e,n=(t=>t)){super(t),this.requestManager=t,this.options=e,this.formatter=n,this.options=this.options||{},this.options.topics=this.options.topics||[],this.options.topics=this.options.topics.map((function(t){return ke(t)})),this.options={topics:this.options.topics,address:this.options.address?this.options.address:void 0,fromBlock:\"number\"==typeof this.options.fromBlock||\"string\"==typeof this.options.fromBlock?Bt(this.options.fromBlock)||void 0:\"latest\",toBlock:\"number\"==typeof this.options.toBlock||\"string\"==typeof this.options.toBlock?Bt(this.options.toBlock)||void 0:\"latest\"}}async getLogs(){this.isStarted||await this.start();const t=await this.filterId;return this.requestManager.eth_getFilterLogs(t)}async getNewFilter(){return this.requestManager.eth_newFilter(this.options)}async getChanges(){const t=await this.filterId;return this.requestManager.eth_getFilterChanges(t)}async uninstall(){const t=await this.filterId;return this.requestManager.eth_uninstallFilter(t)}}class Ee{constructor(t,e,n){this.requestManager=t,this.address=n,this._anonymous=!1,this._params=e.inputs||[],this._name=G(e),this._anonymous=e.anonymous||!1}types(t){return this._params.filter((function(e){return e.indexed===t}))}displayName(){return W(this._name)}typeName(){return V(this._name)||\"void\"}signature(){return $(this._name)}encode(t={},e={}){let n={topics:[],address:this.address};void 0!==e.fromBlock&&(n.fromBlock=Bt(e.fromBlock)||void 0),void 0!==e.toBlock&&(n.toBlock=Bt(e.toBlock)||void 0),n.topics=n.topics||[],this._anonymous||n.topics.push(\"0x\"+this.signature());let r=this._params.filter((function(t){return!0===t.indexed})).map((function(e){let n=t[e.name];return null==n?null:bt(n)?n.map((function(t){return\"0x\"+Ne.encodeParams([e],[t])})):\"0x\"+Ne.encodeParams([e],[n])}));return n.topics=n.topics.concat(r),n}decode(t){t.data=t.data||\"\",t.topics=t.topics||[];let e=(this._anonymous?t.topics:t.topics.slice(1)).map((function(t){return t.slice(2)})).join(\"\"),n=Ne.decodeParams(this.types(!0),e),r=t.data.slice(2),o=Ne.decodeParams(this.types(!1),r);const i=this._params.reduce((function(t,e){return t[e.name]=e.indexed?n.shift():o.shift(),t}),{});return Object.assign(Object.assign({},Rt(t)),{event:this.displayName(),address:t.address,args:i})}async execute(t,e){let n=this.encode(t,e),r=this.decode.bind(this);return new Ae(this.requestManager,n,r)}attachToContract(t){let e=this.execute.bind(this),n=this.displayName();t.events[n]||(t.events[n]=e),t.events[n][this.typeName()]=this.execute.bind(this,t)}}class Be{constructor(t,e,n){this._requestManager=t,this._json=e,this._address=n}encode(t={}){let e={address:this._address};return void 0!==t.fromBlock&&(e.fromBlock=Bt(t.fromBlock)||void 0),void 0!==t.toBlock&&(e.toBlock=Bt(t.toBlock)||void 0),e}decode(t){t.data=t.data||\"\";let e=bt(t.topics)&&yt(t.topics[0])?t.topics[0].slice(2):\"\",n=this._json.filter((function(t){return e===$(G(t))}))[0];return n?new Ee(this._requestManager,n,this._address).decode(t):Rt(t)}async execute(t){let e=this.encode(t),n=this.decode.bind(this);return new Ae(this._requestManager,e,n)}getAllEventsFunction(){return this.execute.bind(this)}}class Oe{constructor(t,e,n){var r;this.requestManager=t,this.abi=e,this.address=n,this.events={},this.transactionHash=null,this.address=n,this.abi=e,(r=this).abi.filter((function(t){return\"function\"===t.type})).map((function(t){return new xe(t)})).forEach((function(t){t.attachToContract(r)})),this.allEvents=function(t){let e=t.abi.filter((function(t){return\"event\"===t.type})),n=new Be(t.requestManager,e,t.address);return e.map((function(e){return new Ee(t.requestManager,e,t.address)})).forEach((function(e){e.attachToContract(t)})),n.getAllEventsFunction()}(this)}}t.AbstractFilter=Te,t.BigNumber=I,t.Contract=Oe,t.ContractFactory=class{constructor(t,e){this.requestManager=t,this.abi=e}async deploy(...t){let e,n=t[t.length-1];if(wt(n)&&!bt(n)&&(e=t.pop()),!e)throw new Error(\"Missing options object\");if(!e.data||\"string\"!=typeof e.data)throw new Error(\"Invalid options.data\");if(Z(e.value)>0){if(!(this.abi.filter((function(e){return\"constructor\"===e.type&&e.inputs.length===t.length}))[0]||{}).payable)throw new Error(\"Cannot send value to non-payable constructor\")}let r=(o=this.abi,s=t,o.filter((function(t){return\"constructor\"===t.type&&t.inputs&&t.inputs.length===s.length})).map((function(t){return t.inputs||[]})).map((function(t){return Ne.encodeParams(t,s)}))[0]||\"\");var o,s;e.data+=r,e.gas||(e.gas=await this.requestManager.eth_estimateGas(e));const a=await this.requestManager.eth_sendTransaction(e);if(!a)throw new Error(\"Error while sending contract creation transaction. A TxHash was not retrieved\");const c=await async function(t,e){const n=i();let r=0;const o=()=>{r++,r>50?n.reject(new Error(\"Contract transaction couldn't be found after 50 blocks\")):t.eth_getTransactionReceipt(e).then((t=>{t&&t.blockHash?n.resolve(t):setTimeout(o,1e3)}),(t=>n.reject(t)))};o();const s=await n,a=await t.eth_getCode(s.contractAddress,\"latest\");if(a&&a.length>3)return s.contractAddress;throw Object.assign(new Error(\"The contract code couldn't be stored, please check your gas amount.\"),{response:a,receipt:s})}(this.requestManager,a),u=await this.at(c);return u.transactionHash=a,u}async at(t){if(!ht(t))throw new TypeError(`Invalid address ${JSON.stringify(t)}`);return new Oe(this.requestManager,this.abi,t)}},t.EthBlockFilter=class extends Ae{constructor(t){super(t,{})}async getNewFilter(){return this.requestManager.eth_newBlockFilter()}},t.EthFilter=Ae,t.EthPendingTransactionFilter=class extends Ae{constructor(t){super(t,{})}async getNewFilter(){return this.requestManager.eth_newPendingTransactionFilter()}},t.HTTPProvider=class{constructor(t,e={}){this.host=t,this.options=e,this.debug=!1,this.host=t||\"http://localhost:8545\"}send(){throw new Error(\"Sync requests are deprecated\")}sendAsync(t,n){try{let r=null;if(r=t instanceof Array?t.map((t=>e(t))):e(t),\"undefined\"==typeof fetch)throw new Error(\"There is no global fetch object. Please install and import isomorphic-fetch\");const o={body:JSON.stringify(r),method:\"POST\",headers:Object.assign(Object.assign({},this.options.headers),{\"Content-Type\":\"application/json\"})};this.debug&&console.log(\"SEND >> \"+o.body),fetch(this.host,o).then((async t=>{if(t.ok){const e=await t.json();this.debug&&console.log(\"RECV << \"+JSON.stringify(e)),e.error?n(Object.assign(new Error(e.error.json||e.error),e.error)):n(null,e)}else this.debug&&console.log(\"ERR << \"+JSON.stringify(t)),n(new Error(\"External error. response code: \"+t.status))}),(t=>{this.debug&&console.log(\"ERR << \"+JSON.stringify(t)),n(t)}))}catch(t){this.debug&&console.log(\"ERR << \"+JSON.stringify(t)),n(t)}}},t.Method=qt,t.Property=$t,t.RequestManager=zt,t.SHHFilter=class extends Te{constructor(t,e){super(t),this.requestManager=t,this.options=e,this.options=this.options||{topics:[]},this.options.topics=this.options.topics||[],this.options.topics=this.options.topics.map((function(t){return ke(t)})),this.options={topics:this.options.topics,to:this.options.to}}async getMessages(){const t=await this.filterId;return this.requestManager.shh_getMessages(t)}async getNewFilter(){return this.requestManager.shh_newFilter(this.options)}async getChanges(){const t=await this.filterId;return this.requestManager.shh_getFilterChanges(t)}async uninstall(){const t=await this.filterId;return this.requestManager.shh_uninstallFilter(t)}},t.SolidityEvent=Ee,t.SolidityFunction=xe,t.WebSocketProvider=class{constructor(t,e={}){this.url=t,this.options=e,this.isDisposed=!1,this.responseCallbacks=new Map,this.notificationCallbacks=new Set,this.debug=!1,this.lastChunk=\"\",this.connect()}dispose(){this.isDisposed=!0;const t=this.connection;this.timeout(new Error(\"Provider disposed.\")),t.then((t=>t.close()))}send(){throw new Error(\"Sync requests are deprecated\")}sendAsync(t,n){const r=[];let o;if(t instanceof Array)o=Promise.all(t.map((t=>{const n=i();try{const o=e(t);r.push(o),this.responseCallbacks.set(o.id,n)}catch(t){n.reject(t)}return n})));else{const n=i();try{const o=e(t);r.push(o),this.responseCallbacks.set(o.id,n)}catch(t){n.reject(t)}o=n}o.then((t=>n(null,t)),(t=>n(t))),this.connection.then((t=>{r.forEach((e=>{const n=JSON.stringify(e);this.debug&&console.log(\"SEND >> \"+n),t.send(n)}))}),(t=>{n(t)}))}parseResponse(t){let e=[];return t.replace(/\\}[\\n\\r]?\\{/g,\"}|--|{\").replace(/\\}\\][\\n\\r]?\\[\\{/g,\"}]|--|[{\").replace(/\\}[\\n\\r]?\\[\\{/g,\"}|--|[{\").replace(/\\}\\][\\n\\r]?\\{/g,\"}]|--|{\").split(\"|--|\").forEach((t=>{let n=t;this.lastChunk&&(n=this.lastChunk+n);let r=null;try{r=JSON.parse(n)}catch(t){return this.lastChunk=n,clearTimeout(this.lastChunkTimeout),void(this.lastChunkTimeout=setTimeout((()=>{this.timeout()}),15e3))}clearTimeout(this.lastChunkTimeout),this.lastChunk=\"\",r&&e.push(r)})),e}processMessage(t){if(\"id\"in t){const e=t.id,n=this.responseCallbacks.get(e);if(!n)return void console.error(\"Error: Received a response for an unknown request\",t);this.responseCallbacks.delete(e),\"error\"in t?n.reject(Object.assign(new Error(t.error.message||t.error),t.error)):\"result\"in t&&n.resolve(t)}else this.notificationCallbacks.forEach((e=>e(null,t)))}timeout(t){this.connection&&this.connection.isPending||(this.connection=i());const e=t||new Error(\"Connection timeout\");this.responseCallbacks.forEach((t=>t.reject(e))),this.responseCallbacks.clear(),this.isDisposed||this.connect()}connect(){this.connection&&!this.connection.isPending&&this.connection.then((t=>t.close())),this.connection&&this.connection.isPending||(this.connection=i()),this.lastChunk=\"\";let t=this.options.WebSocketConstructor||(\"undefined\"!=typeof WebSocket?WebSocket:void 0);if(!t)throw new Error(\"Please provide a WebSocketConstructor\");const e=new t(this.url,this.options.protocol);e.onopen=()=>{this.connection.resolve(e)},e.onerror=t=>{const e=new Error(\"Error in web socket\");e.data=t,this.timeout(e)},e.onclose=t=>{this.timeout(new Error(`Connection closed (${t&&t.reason||\"Unknown reason\"})`))},e.onmessage=t=>{let e=\"string\"==typeof t.data?t.data:\"\";this.debug&&console.log(\"RECV << \"+t.data),this.parseResponse(e).forEach((t=>{t instanceof Array?t.forEach((t=>this.processMessage(t))):this.processMessage(t)}))}}},t.bytesToHex=q,t.bytesToUtf8String=R,t.concatBytes=z,t.default=zt,t.extractDisplayName=W,t.extractTypeName=V,t.fromAscii=function(t,e=0){let n=\"\";for(let e=0;e<t.length;e++){let r=t.charCodeAt(e).toString(16);n+=r.length<2?\"0\"+r:r}return\"0x\"+n.padEnd(e,\"0\")},t.fromDecimal=et,t.fromTwosComplement=ut,t.fromWei=function(t,e){let n=ot(t).dividedBy(rt(e));return mt(t)?n:n.toString(10)},t.getAddress=ct,t.getValueOfUnit=rt,t.hexToBytes=D,t.isAddress=ht,t.isArray=bt,t.isBigNumber=mt,t.isBloom=function(t){return!!/^(0x)?[0-9a-f]{512}$/i.test(t)&&!!/^(0x)?[0-9a-f]{512}$/i.test(t)},t.isBoolean=vt,t.isChecksumAddress=pt,t.isFunction=function(t){return\"function\"==typeof t},t.isHex=function(t){return\"string\"==typeof t&&/^0x[0-9a-fA-F]+$/.test(t)},t.isJson=function(t){try{return!!JSON.parse(t)}catch(t){return!1}},t.isObject=wt,t.isStrictAddress=lt,t.isString=yt,t.isTopic=function(t){return!!/^(0x)?[0-9a-f]{64}$/i.test(t)&&!!/^(0x)?[0-9a-f]{64}$/i.test(t)},t.isValidResponse=xt,t.padLeft=H,t.padRight=function(t,e,n){return t+new Array(e-t.length+1).join(n||\"0\")},t.sha3=$,t.signedIsNegative=at,t.stringToUtf8Bytes=M,t.toAddress=gt,t.toArray=dt,t.toAscii=function(t){let e=\"\",n=0,r=t.length;for(\"0x\"===t.substring(0,2)&&(n=2);n<r;n+=2){let r=parseInt(t.substr(n,2),16);e+=String.fromCharCode(r)}return e},t.toBatchPayload=function(t){return t.map((function(t){return Nt(t.method,t.params)}))},t.toBigNumber=ot,t.toBoolean=tt,t.toChecksumAddress=ft,t.toData=X,t.toDecimal=Z,t.toHex=nt,t.toJsonRpcRequest=Nt,t.toNullDecimal=K,t.toString=Y,t.toStringData=Q,t.toTwosComplement=st,t.toWei=function(t,e){let n=ot(t).times(rt(e));return mt(t)?n:n.toString(10)},t.transformToFullName=G,Object.defineProperty(t,\"__esModule\",{value:!0})}));\n//# sourceMappingURL=eth-connect.js.map\n\n//# sourceURL=dcl://node_modules/eth-connect/eth-connect.js")
/*! "src/stool.ts" 58bab79d008c635cd70edd0782cee9f5f50bfb21160bfc32e116ac52518c7744 */ eval("var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine(\"brainAbi\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = [\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"userAddress\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"address payable\",\r\n                    \"name\": \"relayerAddress\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"functionSignature\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"MetaTransactionExecuted\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_contract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"scene\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"question\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"answer\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"QuestionAdded\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_contract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"scene\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"question\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"QuestionMuted\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_contract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"scene\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"question\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"questionId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"QuestionRemoved\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_contract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"scene\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"question\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"QuestionUnmuted\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"previousAdminRole\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"newAdminRole\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"name\": \"RoleAdminChanged\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"sender\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"RoleGranted\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"sender\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"RoleRevoked\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_contract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"name\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"nameSet\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"DEFAULT_ADMIN_ROLE\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"ERC712_VERSION\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_contract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"scene\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"question\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"answer\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"addQuestion\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"userAddress\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"functionSignature\",\r\n                    \"type\": \"bytes\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"sigR\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"sigS\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint8\",\r\n                    \"name\": \"sigV\",\r\n                    \"type\": \"uint8\"\r\n                }\r\n            ],\r\n            \"name\": \"executeMetaTransaction\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_contract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"scene\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"question\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"getAnswer\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"getChainId\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"getDomainSeperator\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_contract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getName\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"user\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"getNonce\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"nonce\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_contract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"scene\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"offset\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getQuestions\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string[]\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string[]\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_contract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"scene\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"getQuestionsCount\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"name\": \"getRoleAdmin\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"index\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getRoleMember\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"name\": \"getRoleMemberCount\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"grantRole\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"hasRole\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"domainSeparator\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"initialize\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_contract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"scene\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"question\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"isQuestionMuted\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_contract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"scene\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"question\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"muteQuestion\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_contract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"scene\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"question\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"questionId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"removeQuestion\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"renounceRole\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"revokeRole\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_contract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"name\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"setName\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes4\",\r\n                    \"name\": \"interfaceId\",\r\n                    \"type\": \"bytes4\"\r\n                }\r\n            ],\r\n            \"name\": \"supportsInterface\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_contract\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"scene\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"question\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"unmuteQuestion\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        }\r\n    ];\r\n});\r\ndefine(\"common\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.gravityToVelocity = exports.tiles = exports.getUniqueEntityByComponent = exports.planeRayIntersection = exports.getGlobalPosition = exports.dot = exports.isInsideSquare = exports.fetchRetry = exports.interpolateAnimation = exports.interpolateValue = exports.randomInt = exports.randomRange = exports.distance_is_less_than = exports.distance = void 0;\r\n    // Get distance\r\n    /*\r\n    Note:\r\n    This function really returns distance squared, as it's a lot more efficient to calculate.\r\n    The square root operation is expensive and isn't really necessary if we compare the result to squared values.\r\n    We also use {x,z} not {x,y}. The y-coordinate is how high up it is.\r\n    */\r\n    function distance(pos1, pos2) {\r\n        var a = pos1.x - pos2.x;\r\n        var b = pos1.y - pos2.y;\r\n        var c = pos1.z - pos2.z;\r\n        return a * a + b * b + c * c;\r\n    }\r\n    exports.distance = distance;\r\n    function distance_is_less_than(pos1, pos2, dist) {\r\n        return distance(pos1, pos2) < dist * dist * dist;\r\n    }\r\n    exports.distance_is_less_than = distance_is_less_than;\r\n    // Random number between 2 numbers\r\n    function randomRange(number1, number2) {\r\n        return (Math.random() * (number2 - number1)) + number1;\r\n    }\r\n    exports.randomRange = randomRange;\r\n    // Random number between 2 numbers\r\n    function randomInt(number1, number2) {\r\n        return Math.floor((Math.random() * (number2 - number1)) + number1);\r\n    }\r\n    exports.randomInt = randomInt;\r\n    //\r\n    function interpolateValue(initialTime, finalTime, initialValue, finalValue, currentTime) {\r\n        var sample = (currentTime - initialTime) / (finalTime - initialTime);\r\n        var res = ((finalValue - initialValue) * sample) + initialValue;\r\n        return res;\r\n    }\r\n    exports.interpolateValue = interpolateValue;\r\n    //\r\n    function interpolateAnimation(keyframes, currentTime) {\r\n        var initialKeyframe = 0;\r\n        var finalKeyframe = 0;\r\n        for (var k = 0; k < keyframes.length; k++) {\r\n            if (keyframes[k].time > currentTime) {\r\n                if (k > 0) {\r\n                    initialKeyframe = k - 1;\r\n                    finalKeyframe = k;\r\n                }\r\n                else {\r\n                    return keyframes[0].value;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        //\r\n        return interpolateValue(keyframes[initialKeyframe].time, keyframes[finalKeyframe].time, keyframes[initialKeyframe].value, keyframes[finalKeyframe].value, currentTime);\r\n    }\r\n    exports.interpolateAnimation = interpolateAnimation;\r\n    var fetchRetry = function (url, options, n) { return __awaiter(void 0, void 0, void 0, function () {\r\n        var i, err_1, isLastAttempt;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    i = 0;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!(i < n)) return [3 /*break*/, 6];\r\n                    _a.label = 2;\r\n                case 2:\r\n                    _a.trys.push([2, 4, , 5]);\r\n                    return [4 /*yield*/, fetch(url, options)];\r\n                case 3: return [2 /*return*/, _a.sent()];\r\n                case 4:\r\n                    err_1 = _a.sent();\r\n                    isLastAttempt = i + 1 === n;\r\n                    if (isLastAttempt)\r\n                        throw err_1;\r\n                    return [3 /*break*/, 5];\r\n                case 5:\r\n                    i++;\r\n                    return [3 /*break*/, 1];\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    exports.fetchRetry = fetchRetry;\r\n    function isInsideSquare(x, y, low_x, high_x, low_y, high_y) {\r\n        if (x < low_x || x > high_x || y < low_y || y > high_y) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    exports.isInsideSquare = isInsideSquare;\r\n    function dot(v1, v2) {\r\n        return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\r\n    }\r\n    exports.dot = dot;\r\n    function getGlobalPosition(entity) {\r\n        var entityPosition = entity.hasComponent(Transform) ? entity.getComponent(Transform).position.clone() : Vector3.Zero();\r\n        var parentEntity = entity.getParent();\r\n        if (parentEntity != null) {\r\n            var parentRotation = parentEntity.hasComponent(Transform) ? parentEntity.getComponent(Transform).rotation : Quaternion.Identity;\r\n            return getGlobalPosition(parentEntity).add(entityPosition.rotate(parentRotation));\r\n        }\r\n        return entityPosition;\r\n    }\r\n    exports.getGlobalPosition = getGlobalPosition;\r\n    function planeRayIntersection(rayVector, rayPoint, planePoint, planeNormal) {\r\n        var diff = rayPoint.subtract(planePoint);\r\n        var prod1 = dot(diff, planeNormal);\r\n        var prod2 = dot(rayVector, planeNormal);\r\n        var prod3 = prod1 / prod2;\r\n        var intersection = rayPoint.subtract(rayVector.scale(prod3));\r\n        return intersection;\r\n    }\r\n    exports.planeRayIntersection = planeRayIntersection;\r\n    function getUniqueEntityByComponent(component) {\r\n        var inputs = engine.getEntitiesWithComponent(component);\r\n        for (var key in inputs) {\r\n            if (inputs.hasOwnProperty(key)) {\r\n                return inputs[key].getComponent(component);\r\n            }\r\n        }\r\n    }\r\n    exports.getUniqueEntityByComponent = getUniqueEntityByComponent;\r\n    function tiles(x, y, nx, ny, mirror) {\r\n        if (mirror === void 0) { mirror = false; }\r\n        var height = 1 / x;\r\n        var width = 1 / y;\r\n        var uv;\r\n        if (!mirror) {\r\n            uv = [\r\n                height * (nx + 1), width * ny,\r\n                height * nx, width * ny,\r\n                height * nx, width * (ny + 1),\r\n                height * (nx + 1), width * (ny + 1),\r\n                //\r\n                height * (nx + 1), width * ny,\r\n                height * nx, width * ny,\r\n                height * nx, width * (ny + 1),\r\n                height * (nx + 1), width * (ny + 1),\r\n            ];\r\n        }\r\n        else {\r\n            uv = [\r\n                height * nx, width * ny,\r\n                height * (nx + 1), width * ny,\r\n                height * (nx + 1), width * (ny + 1),\r\n                height * nx, width * (ny + 1),\r\n                //\r\n                height * nx, width * ny,\r\n                height * (nx + 1), width * ny,\r\n                height * (nx + 1), width * (ny + 1),\r\n                height * nx, width * (ny + 1),\r\n            ];\r\n        }\r\n        //log(\"UV\", uv)\r\n        return uv;\r\n    }\r\n    exports.tiles = tiles;\r\n    function gravityToVelocity(force, inv_mass, gravity, dt) {\r\n        // Symplectic Euler\r\n        return force * inv_mass * dt;\r\n    }\r\n    exports.gravityToVelocity = gravityToVelocity;\r\n});\r\ndefine(\"compicactus\", [\"require\", \"exports\", \"common\"], function (require, exports, common_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Compicactus = void 0;\r\n    var elements = [\r\n        \"cigar\",\r\n        \"eye\",\r\n        \"hat\",\r\n        \"mustache\",\r\n        \"nose\",\r\n        \"pot\",\r\n        \"body\",\r\n        \"eyes\"\r\n    ];\r\n    var compi_actions = [\r\n        \"Action-01-Look R-L\",\r\n        \"Action-02-Look R\",\r\n        \"Action-03-Look L\",\r\n        \"Action-04-Look-Up\",\r\n        \"Action-05-Sleep\",\r\n        \"Action-06-Dancing\",\r\n        \"Action-07-Swinging\",\r\n        \"Action-08-LOL\",\r\n        \"Action-09-Pised Off\",\r\n        \"Action-10-Yawn\",\r\n        \"Action-11-Alert\",\r\n        \"Action-12 Sigh\",\r\n    ];\r\n    var variations = {\r\n        \"cigar\": [\r\n            \"Cigar-Brush\",\r\n            \"Cigar-Faso\",\r\n            \"Cigar-Palillo\",\r\n            \"Cigar-Pipa\",\r\n            \"Cigar-Simple\",\r\n            \"Cigar-Trumpet\",\r\n            \"Cigar-Two\"\r\n        ],\r\n        \"eye\": [\r\n            \"Eye-3dGlasses\",\r\n            \"Eye-Buttons\",\r\n            \"Eye-CircularGlasses\",\r\n            \"Eye-Cuberpunk\",\r\n            \"Eye-Monocule\",\r\n            \"Eye-SquareGlasses\",\r\n            \"Eye-VRheadset\"\r\n        ],\r\n        \"hat\": [\r\n            \"Hat-Ants\",\r\n            \"Hat-Banana\",\r\n            \"Hat-BunnyEars\",\r\n            \"Hat-CatEars\",\r\n            \"Hat-Curl\",\r\n            \"Hat-Dino\",\r\n            \"Hat-Emo\",\r\n            \"Hat-Galley\",\r\n            \"Hat-Headphones\",\r\n            \"Hat-HeadphonesWinter\",\r\n            \"Hat-Lemon\",\r\n            \"Hat-Llama\",\r\n            \"Hat-MotorcycleHelmet\",\r\n            \"Hat-PinkHair\",\r\n            \"Hat-PunkHair\",\r\n            \"Hat-Sleep\",\r\n            \"Hat-Unicorn\",\r\n            \"Hat-Viking\",\r\n            \"Hat-Worker\"\r\n        ],\r\n        \"mustache\": [\r\n            \"Mustache-Cat\",\r\n            \"Mustache-CepilloA\",\r\n            \"Mustache-CepilloB\",\r\n            \"Mustache-CosmeFulanitoA\",\r\n            \"Mustache-CosmeFulanitoB\",\r\n            \"Mustache-Dali\",\r\n            \"Mustache-Mexican\",\r\n            \"Mustache-Small\"\r\n        ],\r\n        \"nose\": [\r\n            \"Nose-Carrot\",\r\n            \"Nose-Clown\",\r\n            \"Nose-Prism\",\r\n            \"Nose-Screw\",\r\n            \"Nose-Triangle\"\r\n        ],\r\n        \"pot\": [\r\n            \"Pot-Basic\",\r\n            \"Pot-Broken\",\r\n            \"Pot-Censored\",\r\n            \"Pot-Cup\",\r\n            \"Pot-Cyber\",\r\n            \"Pot-Fishbowl\",\r\n            \"Pot-Hearth\",\r\n            \"Pot-IceCreamCone\",\r\n            \"Pot-Punk\",\r\n            \"Pot-Rainbow\",\r\n            \"Pot-Rings\",\r\n            \"Pot-Tuxedo\",\r\n            \"Pot-Yuppie\"\r\n        ],\r\n        \"body\": [\r\n            \"Body-Green\",\r\n            \"Body-Pink\",\r\n            \"Body-Violet\",\r\n            \"Body-Yellow\",\r\n        ],\r\n        \"eyes\": [\r\n            \"Eyes-Green-Simple\",\r\n            \"Eyes-Pink-Simple\",\r\n            \"Eyes-Violet-Simple\",\r\n            \"Eyes-Yellow-Simple\",\r\n            \"Eyes-Green-None\",\r\n            \"Eyes-Pink-None\",\r\n            \"Eyes-Violet-None\",\r\n            \"Eyes-Yellow-None\",\r\n        ]\r\n    };\r\n    var Compicactus = /** @class */ (function (_super) {\r\n        __extends(Compicactus, _super);\r\n        function Compicactus() {\r\n            var _this = _super.call(this) || this;\r\n            /*cigar_entity: Entity\r\n            eye_entity: Entity\r\n            hat_entity: Entity\r\n            mustache_entity: Entity\r\n            nose_entity: Entity\r\n            pot_entity: Entity*/\r\n            _this.element_entities = [];\r\n            _this.variation = {\r\n                \"body\": \"\",\r\n                \"cigar\": \"\",\r\n                \"eyes\": \"\",\r\n                \"glasses\": \"\",\r\n                \"hat\": \"\",\r\n                \"mustache\": \"\",\r\n                \"nose\": \"\",\r\n                \"pot\": \"\"\r\n            };\r\n            _this.set_body(0);\r\n            return _this;\r\n        }\r\n        Compicactus.prototype.play_random = function () {\r\n            var clip_name = compi_actions[Math.floor(Math.random() * compi_actions.length)];\r\n            log(\"clip_name\", clip_name);\r\n            for (var n = 0; n < this.element_entities.length; n++) {\r\n                var clip = this.element_entities[n].getComponent(Animator).getClip(clip_name);\r\n                clip.play();\r\n                clip.looping = false;\r\n            }\r\n        };\r\n        Compicactus.prototype.remove_elements = function () {\r\n            for (var n = 0; n < this.element_entities.length; n++) {\r\n                engine.removeEntity(this.element_entities[n]);\r\n            }\r\n        };\r\n        Compicactus.prototype.set_body = function (id) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var url, data, variations;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            log(\"set body\");\r\n                            this.remove_elements();\r\n                            url = \"https://ipfs.io/ipfs/QmVcN4A6EzBrrWcsovrKsRg5sTootZ9HmSuTadGQ2XrL9y\";\r\n                            data = {\r\n                                headers: {\r\n                                    'Accept': 'application/json'\r\n                                },\r\n                                method: \"GET\",\r\n                            };\r\n                            log(\"get variations\");\r\n                            return [4 /*yield*/, (0, common_1.fetchRetry)(url, data, 3).then(function (r) { return r.json(); }).catch(function (e) { return log(\"Error\"); })];\r\n                        case 1:\r\n                            variations = _a.sent();\r\n                            log(\"variations\", variations);\r\n                            this.variation = variations[id];\r\n                            this.add_element(\"body\");\r\n                            this.add_element(\"cigar\");\r\n                            this.add_element(\"eyes\");\r\n                            this.add_element(\"glasses\");\r\n                            this.add_element(\"hat\");\r\n                            this.add_element(\"mustache\");\r\n                            this.add_element(\"nose\");\r\n                            this.add_element(\"pot\");\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        Compicactus.prototype.add_element = function (name) {\r\n            if (this.variation[name] == \"\")\r\n                return;\r\n            this.element_entities.push(new Entity);\r\n            this.get_last_element().addComponent(new GLTFShape(\"compi_models/\" + this.variation[name] + \".glb\"));\r\n            this.get_last_element().addComponent(new Animator());\r\n            engine.addEntity(this.get_last_element());\r\n            this.get_last_element().setParent(this);\r\n            //return entity\r\n        };\r\n        Compicactus.prototype.get_last_element = function () {\r\n            return this.element_entities[this.element_entities.length - 1];\r\n        };\r\n        return Compicactus;\r\n    }(Entity));\r\n    exports.Compicactus = Compicactus;\r\n});\r\ndefine(\"erc20Abi\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = [\r\n        {\r\n            inputs: [\r\n                { internalType: 'string', name: 'name_', type: 'string' },\r\n                { internalType: 'string', name: 'symbol_', type: 'string' },\r\n            ],\r\n            stateMutability: 'nonpayable',\r\n            type: 'constructor',\r\n        },\r\n        {\r\n            anonymous: false,\r\n            inputs: [\r\n                {\r\n                    indexed: true,\r\n                    internalType: 'address',\r\n                    name: 'owner',\r\n                    type: 'address',\r\n                },\r\n                {\r\n                    indexed: true,\r\n                    internalType: 'address',\r\n                    name: 'spender',\r\n                    type: 'address',\r\n                },\r\n                {\r\n                    indexed: false,\r\n                    internalType: 'uint256',\r\n                    name: 'value',\r\n                    type: 'uint256',\r\n                },\r\n            ],\r\n            name: 'Approval',\r\n            type: 'event',\r\n        },\r\n        {\r\n            anonymous: false,\r\n            inputs: [\r\n                {\r\n                    indexed: false,\r\n                    internalType: 'address',\r\n                    name: 'userAddress',\r\n                    type: 'address',\r\n                },\r\n                {\r\n                    indexed: false,\r\n                    internalType: 'address payable',\r\n                    name: 'relayerAddress',\r\n                    type: 'address',\r\n                },\r\n                {\r\n                    indexed: false,\r\n                    internalType: 'bytes',\r\n                    name: 'functionSignature',\r\n                    type: 'bytes',\r\n                },\r\n            ],\r\n            name: 'MetaTransactionExecuted',\r\n            type: 'event',\r\n        },\r\n        {\r\n            anonymous: false,\r\n            inputs: [\r\n                {\r\n                    indexed: true,\r\n                    internalType: 'address',\r\n                    name: 'from',\r\n                    type: 'address',\r\n                },\r\n                { indexed: true, internalType: 'address', name: 'to', type: 'address' },\r\n                {\r\n                    indexed: false,\r\n                    internalType: 'uint256',\r\n                    name: 'value',\r\n                    type: 'uint256',\r\n                },\r\n            ],\r\n            name: 'Transfer',\r\n            type: 'event',\r\n        },\r\n        {\r\n            inputs: [],\r\n            name: 'CHILD_CHAIN_ID',\r\n            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n            stateMutability: 'view',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [],\r\n            name: 'CHILD_CHAIN_ID_BYTES',\r\n            outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],\r\n            stateMutability: 'view',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [],\r\n            name: 'ERC712_VERSION',\r\n            outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n            stateMutability: 'view',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [],\r\n            name: 'ROOT_CHAIN_ID',\r\n            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n            stateMutability: 'view',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [],\r\n            name: 'ROOT_CHAIN_ID_BYTES',\r\n            outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],\r\n            stateMutability: 'view',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [\r\n                { internalType: 'address', name: 'owner', type: 'address' },\r\n                { internalType: 'address', name: 'spender', type: 'address' },\r\n            ],\r\n            name: 'allowance',\r\n            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n            stateMutability: 'view',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [\r\n                { internalType: 'address', name: 'spender', type: 'address' },\r\n                { internalType: 'uint256', name: 'amount', type: 'uint256' },\r\n            ],\r\n            name: 'approve',\r\n            outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n            stateMutability: 'nonpayable',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\r\n            name: 'balanceOf',\r\n            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n            stateMutability: 'view',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [],\r\n            name: 'decimals',\r\n            outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],\r\n            stateMutability: 'view',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [\r\n                { internalType: 'address', name: 'spender', type: 'address' },\r\n                { internalType: 'uint256', name: 'subtractedValue', type: 'uint256' },\r\n            ],\r\n            name: 'decreaseAllowance',\r\n            outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n            stateMutability: 'nonpayable',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [\r\n                { internalType: 'address', name: 'userAddress', type: 'address' },\r\n                { internalType: 'bytes', name: 'functionSignature', type: 'bytes' },\r\n                { internalType: 'bytes32', name: 'sigR', type: 'bytes32' },\r\n                { internalType: 'bytes32', name: 'sigS', type: 'bytes32' },\r\n                { internalType: 'uint8', name: 'sigV', type: 'uint8' },\r\n            ],\r\n            name: 'executeMetaTransaction',\r\n            outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],\r\n            stateMutability: 'payable',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [{ internalType: 'address', name: 'user', type: 'address' }],\r\n            name: 'getNonce',\r\n            outputs: [{ internalType: 'uint256', name: 'nonce', type: 'uint256' }],\r\n            stateMutability: 'view',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [\r\n                { internalType: 'address', name: 'spender', type: 'address' },\r\n                { internalType: 'uint256', name: 'addedValue', type: 'uint256' },\r\n            ],\r\n            name: 'increaseAllowance',\r\n            outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n            stateMutability: 'nonpayable',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [],\r\n            name: 'name',\r\n            outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n            stateMutability: 'view',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [],\r\n            name: 'symbol',\r\n            outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n            stateMutability: 'view',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [],\r\n            name: 'totalSupply',\r\n            outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n            stateMutability: 'view',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [\r\n                { internalType: 'address', name: 'recipient', type: 'address' },\r\n                { internalType: 'uint256', name: 'amount', type: 'uint256' },\r\n            ],\r\n            name: 'transfer',\r\n            outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n            stateMutability: 'nonpayable',\r\n            type: 'function',\r\n        },\r\n        {\r\n            inputs: [\r\n                { internalType: 'address', name: 'sender', type: 'address' },\r\n                { internalType: 'address', name: 'recipient', type: 'address' },\r\n                { internalType: 'uint256', name: 'amount', type: 'uint256' },\r\n            ],\r\n            name: 'transferFrom',\r\n            outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n            stateMutability: 'nonpayable',\r\n            type: 'function',\r\n        },\r\n        { stateMutability: 'payable', type: 'receive' },\r\n        {\r\n            inputs: [{ internalType: 'uint256', name: 'amount', type: 'uint256' }],\r\n            name: 'mint',\r\n            outputs: [],\r\n            stateMutability: 'nonpayable',\r\n            type: 'function',\r\n        },\r\n    ];\r\n});\r\ndefine(\"minterAbi\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = [\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"contractURI\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"ContractURISet\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"address[]\",\r\n                    \"name\": \"discountTokens\",\r\n                    \"type\": \"address[]\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bool[]\",\r\n                    \"name\": \"discountTokensIsERC1155\",\r\n                    \"type\": \"bool[]\"\r\n                }\r\n            ],\r\n            \"name\": \"DiscountTokensSet\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"contract IERC20Upgradeable\",\r\n                    \"name\": \"tokenERC20\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"ERC20Set\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"contract IERC721Upgradeable\",\r\n                    \"name\": \"tokenERC721\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"ERC721Set\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"userAddress\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"address payable\",\r\n                    \"name\": \"relayerAddress\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"functionSignature\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"MetaTransactionExecuted\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"multPrice\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"PriceSet\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"previousAdminRole\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"newAdminRole\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"name\": \"RoleAdminChanged\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"sender\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"RoleGranted\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"sender\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"RoleRevoked\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"startTime\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"endTime\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"TimeWindowSet\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"balance\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Withdraw\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"DEFAULT_ADMIN_ROLE\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"ERC712_VERSION\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"userAddress\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"functionSignature\",\r\n                    \"type\": \"bytes\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"sigR\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"sigS\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint8\",\r\n                    \"name\": \"sigV\",\r\n                    \"type\": \"uint8\"\r\n                }\r\n            ],\r\n            \"name\": \"executeMetaTransaction\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"getChainId\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"getDomainSeperator\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"user\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"getNonce\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"nonce\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"for_account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"getPrice\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_price\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"use_discount\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"name\": \"getRoleAdmin\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"index\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getRoleMember\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"name\": \"getRoleMemberCount\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"grantRole\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"hasRole\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"domainSeparator\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"initialize\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"isWindowOpen\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"use_discount\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"maxPrice\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"mintCompi\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"renounceRole\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"revokeRole\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address[]\",\r\n                    \"name\": \"discountTokens\",\r\n                    \"type\": \"address[]\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool[]\",\r\n                    \"name\": \"discountTokensIsERC1155\",\r\n                    \"type\": \"bool[]\"\r\n                }\r\n            ],\r\n            \"name\": \"setDiscountTokens\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"contract IERC20Upgradeable\",\r\n                    \"name\": \"tokenERC20\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"setERC20\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"contract ERC721PresetMinterPauserAutoIdUpgradeable\",\r\n                    \"name\": \"tokenERC721\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"setERC721\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"multPrice\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"setPrice\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"startTime\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"endTime\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"setTimeWindow\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes4\",\r\n                    \"name\": \"interfaceId\",\r\n                    \"type\": \"bytes4\"\r\n                }\r\n            ],\r\n            \"name\": \"supportsInterface\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"withdrawBalance\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        }\r\n    ];\r\n});\r\ndefine(\"pfpAbi\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = [\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Approval\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"ApprovalForAll\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"contractURI\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"ContractURISet\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"userAddress\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"address payable\",\r\n                    \"name\": \"relayerAddress\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"functionSignature\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"MetaTransactionExecuted\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"Paused\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"previousAdminRole\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"newAdminRole\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"name\": \"RoleAdminChanged\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"sender\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"RoleGranted\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"sender\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"RoleRevoked\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Transfer\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"Unpaused\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"DEFAULT_ADMIN_ROLE\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"ERC712_VERSION\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"MINTER_ROLE\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"PAUSER_ROLE\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"approve\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"burn\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"contractURI\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"userAddress\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"functionSignature\",\r\n                    \"type\": \"bytes\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"sigR\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"sigS\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint8\",\r\n                    \"name\": \"sigV\",\r\n                    \"type\": \"uint8\"\r\n                }\r\n            ],\r\n            \"name\": \"executeMetaTransaction\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getApproved\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"getChainId\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"getDomainSeperator\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"user\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"getNonce\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"nonce\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"name\": \"getRoleAdmin\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"index\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getRoleMember\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                }\r\n            ],\r\n            \"name\": \"getRoleMemberCount\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"grantRole\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"hasRole\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"name\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"symbol\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"baseTokenURI\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"initialize\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"isApprovedForAll\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"mint\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"name\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"ownerOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"pause\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"paused\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"renounceRole\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes32\",\r\n                    \"name\": \"role\",\r\n                    \"type\": \"bytes32\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"account\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"revokeRole\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"_data\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"setApprovalForAll\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"__contractURI\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"setContractURI\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes4\",\r\n                    \"name\": \"interfaceId\",\r\n                    \"type\": \"bytes4\"\r\n                }\r\n            ],\r\n            \"name\": \"supportsInterface\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"symbol\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"index\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenByIndex\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"index\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenOfOwnerByIndex\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenURI\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"totalSupply\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"transferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"unpause\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        }\r\n    ];\r\n});\r\ndefine(\"contracts\", [\"require\", \"exports\", \"@decentraland/Identity\", \"@decentraland/web3-provider\", \"decentraland-transactions\", \"eth-connect\", \"erc20Abi\", \"minterAbi\", \"pfpAbi\", \"brainAbi\"], function (require, exports, Identity_1, web3_provider_1, decentraland_transactions_1, eth, erc20Abi_1, minterAbi_1, pfpAbi_1, brainAbi_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Blockchain = exports.contracts = void 0;\r\n    exports.contracts = {\r\n        mana: {\r\n            matic: {\r\n                version: '1',\r\n                abi: erc20Abi_1.default,\r\n                address: '0xA1c57f48F0Deb89f569dFbE6E2B7f46D33606fD4',\r\n                name: '(PoS) Decentraland MANA',\r\n                chainId: 137\r\n            },\r\n            mumbai: {\r\n                version: '1',\r\n                abi: erc20Abi_1.default,\r\n                //address: '0x882Da5967c435eA5cC6b09150d55E8304B838f45',\r\n                address: '0x4dA830330048be6380f102a83d3B94ea318bc598',\r\n                name: 'Decentraland MANA (PoS)',\r\n                chainId: 80001\r\n            }\r\n        },\r\n        minter: {\r\n            matic: {\r\n                version: '1',\r\n                abi: minterAbi_1.default,\r\n                address: '',\r\n                name: 'CompiMinter',\r\n                chainId: 137\r\n            },\r\n            mumbai: {\r\n                version: '1',\r\n                abi: minterAbi_1.default,\r\n                address: '0x0d7c91B526bA1334be837a82e92d6ca47ac6bCD7',\r\n                name: 'CompiMinter',\r\n                chainId: 80001\r\n            }\r\n        },\r\n        pfp: {\r\n            matic: {\r\n                version: '1',\r\n                abi: pfpAbi_1.default,\r\n                address: '',\r\n                name: 'CompiPFP',\r\n                chainId: 137\r\n            },\r\n            mumbai: {\r\n                version: '1',\r\n                abi: pfpAbi_1.default,\r\n                address: '0xcF904EeCa0dC1d99E6c4Be05f6C9a733041Ce093',\r\n                name: 'CompiPFP',\r\n                chainId: 80001\r\n            }\r\n        },\r\n        brain: {\r\n            matic: {\r\n                version: '1',\r\n                abi: brainAbi_1.default,\r\n                address: '',\r\n                name: 'CompiBrain',\r\n                chainId: 137\r\n            },\r\n            mumbai: {\r\n                version: '1',\r\n                abi: brainAbi_1.default,\r\n                address: '0x308aF74242aFb7bC598Ff1ced52De1D3E6cb02d7',\r\n                name: 'CompiBrain',\r\n                chainId: 80001\r\n            }\r\n        }\r\n    };\r\n    var Blockchain = /** @class */ (function () {\r\n        // functionSetGreeting = new eth.SolidityFunction(this.getFunction(\"setGreeting\", abiMinter));\r\n        function Blockchain(network) {\r\n            if (network === void 0) { network = \"mumbai\"; }\r\n            if (network != \"mumbai\" && network != \"matic\") {\r\n                throw new Error(\"Network not found: \" + network);\r\n            }\r\n            /*const publicKeyRequest = executeTask(async () => {\r\n              const publicKey = await getUserPublicKey()\r\n              log(publicKey)\r\n              return publicKey\r\n            })*/\r\n            this.network = network;\r\n            if (network == \"mumbai\") {\r\n                //this.provider = new eth.WebSocketProvider(\"wss://rpc-mainnet.maticvigil.com/ws/v1/\")\r\n                this.provider = new eth.HTTPProvider(\"https://rpc-mumbai.maticvigil.com\");\r\n                this.mana_contract = exports.contracts.mana.mumbai;\r\n                this.minter_contract = exports.contracts.minter.mumbai;\r\n                this.pfp_contract = exports.contracts.pfp.mumbai;\r\n                this.brain_contract = exports.contracts.brain.mumbai;\r\n            }\r\n            else {\r\n                this.provider = new eth.HTTPProvider(\"https://rpc-mainnet.maticvigil.com\");\r\n                this.mana_contract = exports.contracts.mana.matic;\r\n                this.minter_contract = exports.contracts.minter.matic;\r\n                this.pfp_contract = exports.contracts.pfp.matic;\r\n                this.brain_contract = exports.contracts.brain.matic;\r\n            }\r\n            this.metaRequestManager = new eth.RequestManager(this.provider);\r\n        }\r\n        Blockchain.prototype.getFunction = function (name, abi) {\r\n            for (var n = 0; n < abi.length; n++) {\r\n                if (abi[n].type == \"function\" && abi[n].name == name) {\r\n                    return abi[n];\r\n                }\r\n            }\r\n            //log(abi)\r\n            throw new Error(\"Function not found: \" + name);\r\n        };\r\n        Blockchain.prototype.prepareMetaTransaction = function (functionSignature, contractConfig) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var provider, requestManager;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, (0, web3_provider_1.getProvider)()];\r\n                        case 1:\r\n                            provider = _a.sent();\r\n                            requestManager = new eth.RequestManager(provider);\r\n                            return [2 /*return*/, (0, decentraland_transactions_1.sendMetaTransaction)(requestManager, this.metaRequestManager, functionSignature.data, contractConfig)];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        Blockchain.prototype.getFactory = function (contractConfig) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var requestManager, factory, contract;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            requestManager = new eth.RequestManager(this.provider);\r\n                            factory = new eth.ContractFactory(requestManager, contractConfig.abi);\r\n                            return [4 /*yield*/, factory.at(contractConfig.address)];\r\n                        case 1:\r\n                            contract = _a.sent();\r\n                            return [2 /*return*/, contract];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        // Functions\r\n        // Minter\r\n        Blockchain.prototype.getPrice = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var publicKeyRequest;\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, executeTask(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                var publicKey;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, (0, Identity_1.getUserPublicKey)()];\r\n                                        case 1:\r\n                                            publicKey = _a.sent();\r\n                                            return [2 /*return*/, publicKey];\r\n                                    }\r\n                                });\r\n                            }); })];\r\n                        case 1:\r\n                            publicKeyRequest = _a.sent();\r\n                            log(\"publicKeyRequest\", publicKeyRequest);\r\n                            return [2 /*return*/, this.getFactory(this.minter_contract).then(function (contract) { return __awaiter(_this, void 0, void 0, function () {\r\n                                    return __generator(this, function (_a) {\r\n                                        switch (_a.label) {\r\n                                            case 0: return [4 /*yield*/, contract.getPrice(publicKeyRequest)];\r\n                                            case 1: return [2 /*return*/, _a.sent()];\r\n                                        }\r\n                                    });\r\n                                }); })];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        Blockchain.prototype.isWindowOpen = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.getFactory(this.minter_contract).then(function (contract) { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, contract.isWindowOpen()];\r\n                                    case 1: return [2 /*return*/, _a.sent()];\r\n                                }\r\n                            });\r\n                        }); })];\r\n                });\r\n            });\r\n        };\r\n        Blockchain.prototype.mintCompi = function (maxPrice) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var functionMintCompi, functionSignature;\r\n                return __generator(this, function (_a) {\r\n                    functionMintCompi = new eth.SolidityFunction(this.getFunction(\"mintCompi\", minterAbi_1.default));\r\n                    functionSignature = functionMintCompi.toPayload([maxPrice]);\r\n                    log(functionSignature);\r\n                    return [2 /*return*/, this.prepareMetaTransaction(functionSignature, this.minter_contract).then().catch()];\r\n                });\r\n            });\r\n        };\r\n        // Mana\r\n        Blockchain.prototype.balance = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var publicKeyRequest;\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, executeTask(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                var publicKey;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, (0, Identity_1.getUserPublicKey)()];\r\n                                        case 1:\r\n                                            publicKey = _a.sent();\r\n                                            return [2 /*return*/, publicKey];\r\n                                    }\r\n                                });\r\n                            }); })];\r\n                        case 1:\r\n                            publicKeyRequest = _a.sent();\r\n                            return [2 /*return*/, this.getFactory(this.mana_contract).then(function (contract) { return __awaiter(_this, void 0, void 0, function () {\r\n                                    return __generator(this, function (_a) {\r\n                                        switch (_a.label) {\r\n                                            case 0: return [4 /*yield*/, contract.balanceOf(publicKeyRequest)];\r\n                                            case 1: return [2 /*return*/, _a.sent()];\r\n                                        }\r\n                                    });\r\n                                }); })];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        Blockchain.prototype.increaseAllowance = function (amount) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var functionApprove, functionSignature;\r\n                return __generator(this, function (_a) {\r\n                    functionApprove = new eth.SolidityFunction(this.getFunction(\"increaseAllowance\", erc20Abi_1.default));\r\n                    functionSignature = functionApprove.toPayload([this.minter_contract.address, amount]);\r\n                    log(functionSignature);\r\n                    return [2 /*return*/, this.prepareMetaTransaction(functionSignature, this.mana_contract).then().catch()];\r\n                });\r\n            });\r\n        };\r\n        // PFP\r\n        Blockchain.prototype.balanceOf = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var publicKeyRequest;\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, executeTask(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                var publicKey;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, (0, Identity_1.getUserPublicKey)()];\r\n                                        case 1:\r\n                                            publicKey = _a.sent();\r\n                                            return [2 /*return*/, publicKey];\r\n                                    }\r\n                                });\r\n                            }); })];\r\n                        case 1:\r\n                            publicKeyRequest = _a.sent();\r\n                            log(\"publicKeyRequest\", publicKeyRequest);\r\n                            return [2 /*return*/, this.getFactory(this.pfp_contract).then(function (contract) { return __awaiter(_this, void 0, void 0, function () {\r\n                                    return __generator(this, function (_a) {\r\n                                        switch (_a.label) {\r\n                                            case 0: return [4 /*yield*/, contract.balanceOf(publicKeyRequest)];\r\n                                            case 1: return [2 /*return*/, _a.sent()];\r\n                                        }\r\n                                    });\r\n                                }); })];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        Blockchain.prototype.tokenOfOwnerByIndex = function (tokenId) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var publicKeyRequest;\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, executeTask(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                var publicKey;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, (0, Identity_1.getUserPublicKey)()];\r\n                                        case 1:\r\n                                            publicKey = _a.sent();\r\n                                            return [2 /*return*/, publicKey];\r\n                                    }\r\n                                });\r\n                            }); })];\r\n                        case 1:\r\n                            publicKeyRequest = _a.sent();\r\n                            log(\"publicKeyRequest\", publicKeyRequest);\r\n                            return [2 /*return*/, this.getFactory(this.pfp_contract).then(function (contract) { return __awaiter(_this, void 0, void 0, function () {\r\n                                    return __generator(this, function (_a) {\r\n                                        switch (_a.label) {\r\n                                            case 0: return [4 /*yield*/, contract.tokenOfOwnerByIndex(publicKeyRequest, tokenId)];\r\n                                            case 1: return [2 /*return*/, _a.sent()];\r\n                                        }\r\n                                    });\r\n                                }); })];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        // Brain\r\n        Blockchain.prototype.getName = function (tokenId) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.getFactory(this.brain_contract).then(function (contract) { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, contract.getName(this.pfp_contract.address, tokenId)];\r\n                                    case 1: return [2 /*return*/, _a.sent()];\r\n                                }\r\n                            });\r\n                        }); })];\r\n                });\r\n            });\r\n        };\r\n        Blockchain.prototype.getQuestionsCount = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.getFactory(this.brain_contract).then(function (contract) { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, contract.getQuestionsCount()];\r\n                                    case 1: return [2 /*return*/, _a.sent()];\r\n                                }\r\n                            });\r\n                        }); })];\r\n                });\r\n            });\r\n        };\r\n        Blockchain.prototype.setName = function (id, name) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var functionSetName, functionSignature;\r\n                return __generator(this, function (_a) {\r\n                    functionSetName = new eth.SolidityFunction(this.getFunction(\"setName\", brainAbi_1.default));\r\n                    functionSignature = functionSetName.toPayload([this.pfp_contract.address, id, name]);\r\n                    log(functionSignature);\r\n                    return [2 /*return*/, this.prepareMetaTransaction(functionSignature, this.brain_contract).then().catch()];\r\n                });\r\n            });\r\n        };\r\n        Blockchain.prototype.addQuestion = function (id, question, answer) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var scene, functionSsetQuestion, functionSignature;\r\n                return __generator(this, function (_a) {\r\n                    scene = \"default\";\r\n                    functionSsetQuestion = new eth.SolidityFunction(this.getFunction(\"addQuestion\", brainAbi_1.default));\r\n                    functionSignature = functionSsetQuestion.toPayload([this.pfp_contract.address, id, scene, question, answer]);\r\n                    log(functionSignature);\r\n                    return [2 /*return*/, this.prepareMetaTransaction(functionSignature, this.brain_contract).then().catch()];\r\n                });\r\n            });\r\n        };\r\n        Blockchain.prototype.getAnswer = function (id, question) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var scene;\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    scene = \"default\";\r\n                    return [2 /*return*/, this.getFactory(this.brain_contract).then(function (contract) { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, contract.getAnswer(this.pfp_contract.address, id, scene, question)];\r\n                                    case 1: return [2 /*return*/, _a.sent()];\r\n                                }\r\n                            });\r\n                        }); })];\r\n                });\r\n            });\r\n        };\r\n        Blockchain.prototype.getQuestions = function (id, offset) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var scene;\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    scene = \"default\";\r\n                    return [2 /*return*/, this.getFactory(this.brain_contract).then(function (contract) { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, contract.getQuestions(this.pfp_contract.address, id, scene, offset)];\r\n                                    case 1: return [2 /*return*/, _a.sent()];\r\n                                }\r\n                            });\r\n                        }); })];\r\n                });\r\n            });\r\n        };\r\n        return Blockchain;\r\n    }());\r\n    exports.Blockchain = Blockchain;\r\n});\r\ndefine(\"mint\", [\"require\", \"exports\", \"contracts\", \"eth-connect\"], function (require, exports, contracts_1, eth) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Mint = void 0;\r\n    var mint_mint_shape = new GLTFShape(\"models/mint_mint.gltf\");\r\n    var mint_price_shape = new GLTFShape(\"models/mint_price.gltf\");\r\n    var mint_getpmana_shape = new GLTFShape(\"models/mint_getpmana.gltf\");\r\n    var mint_50off_shape = new GLTFShape(\"models/mint_50off.gltf\");\r\n    var price_shape = new TextShape();\r\n    var blockchain = new contracts_1.Blockchain(\"mumbai\");\r\n    var Mint = /** @class */ (function () {\r\n        function Mint(parent) {\r\n            var _this = this;\r\n            this.mint_mint_entity = new Entity;\r\n            this.mint_price_entity = new Entity;\r\n            this.mint_getpmana_entity = new Entity;\r\n            this.mint_50off_entity = new Entity;\r\n            this.price_entity = new Entity;\r\n            this.current_price = [\"0\", false];\r\n            this.with_discount = false;\r\n            mint_mint_shape.visible = false;\r\n            this.mint_mint_entity.addComponent(mint_mint_shape);\r\n            this.mint_mint_entity.addComponent(new Transform());\r\n            this.mint_mint_entity.setParent(parent);\r\n            engine.addEntity(this.mint_mint_entity);\r\n            this.mint_mint_entity.addComponent(new OnPointerDown(function () { _this.mint(_this); }, {\r\n                hoverText: \"Mint Compi\",\r\n            }));\r\n            mint_50off_shape.visible = false;\r\n            this.mint_50off_entity.addComponent(mint_50off_shape);\r\n            this.mint_50off_entity.addComponent(new Transform());\r\n            this.mint_50off_entity.setParent(parent);\r\n            engine.addEntity(this.mint_50off_entity);\r\n            mint_price_shape.visible = false;\r\n            this.mint_price_entity.addComponent(mint_price_shape);\r\n            this.mint_price_entity.addComponent(new Transform());\r\n            this.mint_price_entity.setParent(parent);\r\n            engine.addEntity(this.mint_price_entity);\r\n            mint_getpmana_shape.visible = false;\r\n            this.mint_getpmana_entity.addComponent(mint_getpmana_shape);\r\n            this.mint_getpmana_entity.addComponent(new Transform());\r\n            this.mint_getpmana_entity.setParent(parent);\r\n            engine.addEntity(this.mint_getpmana_entity);\r\n            this.mint_getpmana_entity.addComponent(new OnPointerDown(function () {\r\n                openExternalURL(\"https://account.decentraland.org/\");\r\n            }, {\r\n                hoverText: \"Get Polygon Mana\",\r\n            }));\r\n            price_shape.fontSize = 2;\r\n            price_shape.visible = false;\r\n            this.price_entity.addComponent(price_shape);\r\n            this.price_entity.addComponent(new Transform({\r\n                position: new Vector3(-.82, 1.76, 0.01),\r\n                rotation: Quaternion.Euler(0, 180, 0)\r\n            }));\r\n            this.price_entity.setParent(parent);\r\n            engine.addEntity(this.price_entity);\r\n        }\r\n        Mint.prototype.mint = function (self) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            log(\"Minting\");\r\n                            log(\"price\", self.current_price);\r\n                            return [4 /*yield*/, blockchain.increaseAllowance(self.current_price[0]).then(function (tx) {\r\n                                    log(\"IncreaseAllowance Ok \", tx);\r\n                                    blockchain.mintCompi(self.current_price[0]).then(function (tx) {\r\n                                        log(\"Mint Ok \", tx);\r\n                                    }).catch(function (e) {\r\n                                        log(\"Error on mint\", e);\r\n                                    });\r\n                                }).catch(function (e) {\r\n                                    log(\"Error on IncreaseAllowance\", e);\r\n                                })];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        Mint.prototype.updatePrice = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var isWindowOpen, price, price_human, balance, balance_human;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, blockchain.isWindowOpen()];\r\n                        case 1:\r\n                            isWindowOpen = _a.sent();\r\n                            if (!isWindowOpen)\r\n                                return [2 /*return*/];\r\n                            mint_50off_shape.visible = false;\r\n                            this.price_entity.getComponent(TextShape).value = \"-\";\r\n                            log(\"Getting price\");\r\n                            return [4 /*yield*/, blockchain.getPrice()];\r\n                        case 2:\r\n                            price = _a.sent();\r\n                            this.current_price = price;\r\n                            log(\"this.current_price\", this.current_price);\r\n                            price_human = eth.fromWei(price[0].toString(), 'ether');\r\n                            log(\"price_human\", price_human);\r\n                            if (price[1]) {\r\n                                mint_50off_shape.visible = true;\r\n                            }\r\n                            return [4 /*yield*/, blockchain.balance()];\r\n                        case 3:\r\n                            balance = _a.sent();\r\n                            balance_human = eth.fromWei(balance.toString(), 'ether');\r\n                            log(\"balance\", balance_human);\r\n                            if (balance < price) {\r\n                                engine.removeEntity(this.mint_mint_entity);\r\n                                log(\"Not enough balance\");\r\n                            }\r\n                            else {\r\n                                engine.addEntity(this.mint_mint_entity);\r\n                                log(\"Enough balance\");\r\n                            }\r\n                            this.price_entity.getComponent(TextShape).value = price_human;\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        Mint.prototype.deactivate = function () {\r\n            mint_mint_shape.visible = false;\r\n            mint_price_shape.visible = false;\r\n            mint_getpmana_shape.visible = false;\r\n            mint_50off_shape.visible = false;\r\n            price_shape.visible = false;\r\n        };\r\n        Mint.prototype.activate = function () {\r\n            mint_mint_shape.visible = true;\r\n            mint_price_shape.visible = true;\r\n            mint_getpmana_shape.visible = true;\r\n            mint_50off_shape.visible = true;\r\n            price_shape.visible = true;\r\n        };\r\n        return Mint;\r\n    }());\r\n    exports.Mint = Mint;\r\n});\r\ndefine(\"teach\", [\"require\", \"exports\", \"contracts\"], function (require, exports, contracts_2) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Teach = void 0;\r\n    var setname_shape = new GLTFShape(\"models/setName.gltf\");\r\n    var button_add_shape = new GLTFShape(\"models/button_add.gltf\");\r\n    var canvas = new UICanvas();\r\n    var textInput = new UIInputText(canvas);\r\n    var blockchain = new contracts_2.Blockchain(\"mumbai\");\r\n    var Teach = /** @class */ (function () {\r\n        function Teach(parent) {\r\n            var _this = this;\r\n            this.setname_entity = new Entity;\r\n            this.addquestion_entity = new Entity;\r\n            this.adding_question = \"\";\r\n            this.adding_answer = \"\";\r\n            this.question_list_entity = [];\r\n            this.play_list_entity = [];\r\n            this.edit_list_entity = [];\r\n            this.delete_list_entity = [];\r\n            this.question_list = [];\r\n            this.activated = false;\r\n            this.parent = parent;\r\n            setname_shape.visible = false;\r\n            this.setname_entity.addComponent(setname_shape);\r\n            this.setname_entity.addComponent(new Transform());\r\n            this.setname_entity.setParent(parent);\r\n            engine.addEntity(this.setname_entity);\r\n            this.setname_entity.addComponent(new OnPointerDown(function () { _this.setName(_this); }, {\r\n                hoverText: \"Set Name\",\r\n            }));\r\n            button_add_shape.visible = false;\r\n            this.addquestion_entity.addComponent(button_add_shape);\r\n            this.addquestion_entity.addComponent(new Transform({\r\n                position: new Vector3(-.82, 1.8, 0.01)\r\n            }));\r\n            this.addquestion_entity.setParent(parent);\r\n            engine.addEntity(this.addquestion_entity);\r\n            this.addquestion_entity.addComponent(new OnPointerDown(function () { _this.addQuestion(_this); }, {\r\n                hoverText: \"Add question\",\r\n            }));\r\n            // Input Text\r\n            textInput.width = \"50%\";\r\n            textInput.height = \"50px\";\r\n            textInput.vAlign = \"bottom\";\r\n            textInput.hAlign = \"center\";\r\n            textInput.fontSize = 30;\r\n            textInput.placeholder = \"Write name here\";\r\n            textInput.placeholderColor = Color4.Gray();\r\n            textInput.positionY = \"200px\";\r\n            textInput.isPointerBlocker = true;\r\n            textInput.visible = false;\r\n            var _loop_1 = function (n) {\r\n                var starting_pos = -.4;\r\n                this_1.question_list_entity.push(new Entity());\r\n                var text_shape = new TextShape();\r\n                this_1.question_list_entity[n].addComponent(text_shape);\r\n                text_shape.fontSize = 1;\r\n                text_shape.hTextAlign = \"left\";\r\n                text_shape.color = Color3.Black();\r\n                text_shape.outlineColor = Color3.White();\r\n                text_shape.outlineWidth = .1;\r\n                this_1.question_list_entity[n].addComponent(new Transform({\r\n                    position: new Vector3(starting_pos - 0.3, 1.66 - (n * 0.1), 0.01),\r\n                    rotation: Quaternion.Euler(0, 180, 0)\r\n                }));\r\n                this_1.question_list_entity[n].setParent(parent);\r\n                engine.addEntity(this_1.question_list_entity[n]);\r\n                this_1.play_list_entity.push(new Entity());\r\n                var button_play_shape = new GLTFShape(\"models/button_play.gltf\");\r\n                button_play_shape.visible = false;\r\n                this_1.play_list_entity[n].addComponent(button_play_shape);\r\n                this_1.play_list_entity[n].addComponent(new Transform({\r\n                    position: new Vector3(starting_pos, 1.66 - (n * 0.1), 0.01),\r\n                    scale: new Vector3(.5, .5, .5)\r\n                }));\r\n                this_1.play_list_entity[n].setParent(parent);\r\n                this_1.play_list_entity[n].addComponent(new OnPointerDown(function () { _this.askQuestion(_this, n); }, {\r\n                    hoverText: \"Ask question\",\r\n                }));\r\n                engine.addEntity(this_1.play_list_entity[n]);\r\n                this_1.edit_list_entity.push(new Entity());\r\n                var button_edit_shape = new GLTFShape(\"models/button_edit.gltf\");\r\n                button_edit_shape.visible = false;\r\n                this_1.edit_list_entity[n].addComponent(button_edit_shape);\r\n                this_1.edit_list_entity[n].addComponent(new Transform({\r\n                    position: new Vector3(starting_pos - .1, 1.66 - (n * 0.1), 0.01),\r\n                    scale: new Vector3(.5, .5, .5)\r\n                }));\r\n                this_1.edit_list_entity[n].setParent(parent);\r\n                this_1.edit_list_entity[n].addComponent(new OnPointerDown(function () { _this.editQuestion(_this, n); }, {\r\n                    hoverText: \"Edit question\",\r\n                }));\r\n                engine.addEntity(this_1.edit_list_entity[n]);\r\n                this_1.delete_list_entity.push(new Entity());\r\n                var button_delete_shape = new GLTFShape(\"models/button_delete.gltf\");\r\n                button_delete_shape.visible = false;\r\n                this_1.delete_list_entity[n].addComponent(button_delete_shape);\r\n                this_1.delete_list_entity[n].addComponent(new Transform({\r\n                    position: new Vector3(starting_pos - .2, 1.66 - (n * 0.1), 0.01),\r\n                    scale: new Vector3(.5, .5, .5)\r\n                }));\r\n                this_1.delete_list_entity[n].setParent(parent);\r\n                this_1.delete_list_entity[n].addComponent(new OnPointerDown(function () { _this.removeQuestion(_this, n); }, {\r\n                    hoverText: \"Remove question\",\r\n                }));\r\n                engine.addEntity(this_1.delete_list_entity[n]);\r\n            };\r\n            var this_1 = this;\r\n            //\r\n            for (var n = 0; n < 3; n++) {\r\n                _loop_1(n);\r\n            }\r\n        }\r\n        Teach.prototype.setName = function (self) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    log(\"Set Name\");\r\n                    if (self.parent.current_compi < 0)\r\n                        return [2 /*return*/];\r\n                    log(\"this.current_token\", self.parent.current_token);\r\n                    textInput.visible = true;\r\n                    textInput.placeholder = \"Write name here\";\r\n                    textInput.onTextSubmit = new OnTextSubmit(function (x) { return __awaiter(_this, void 0, void 0, function () {\r\n                        return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0:\r\n                                    textInput.visible = false;\r\n                                    return [4 /*yield*/, blockchain.setName(this.parent.current_token, x.text).then(function (tx) {\r\n                                            log(\"setName Ok \", tx);\r\n                                        }).catch(function (e) {\r\n                                            log(\"Error on setName\", e);\r\n                                        })];\r\n                                case 1:\r\n                                    _a.sent();\r\n                                    return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    }); });\r\n                    return [2 /*return*/];\r\n                });\r\n            });\r\n        };\r\n        Teach.prototype.addQuestion = function (self) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    log(\"Add Questions\");\r\n                    if (self.parent.current_compi < 0)\r\n                        return [2 /*return*/];\r\n                    log(\"this.current_token\", self.parent.current_token);\r\n                    textInput.visible = true;\r\n                    textInput.placeholder = \"Write question\";\r\n                    textInput.onTextSubmit = new OnTextSubmit(function (x) { return __awaiter(_this, void 0, void 0, function () {\r\n                        var _this = this;\r\n                        return __generator(this, function (_a) {\r\n                            this.adding_question = x.text;\r\n                            textInput.value = \"\";\r\n                            textInput.placeholder = \"Write answer\";\r\n                            textInput.onTextSubmit = new OnTextSubmit(function (x) { return __awaiter(_this, void 0, void 0, function () {\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0:\r\n                                            textInput.visible = false;\r\n                                            this.adding_answer = x.text;\r\n                                            return [4 /*yield*/, blockchain.addQuestion(this.parent.current_token, this.adding_question, this.adding_answer).then(function (tx) {\r\n                                                    log(\"addQuestion Ok \", tx);\r\n                                                }).catch(function (e) {\r\n                                                    log(\"Error on addQuestion\", e);\r\n                                                })];\r\n                                        case 1:\r\n                                            _a.sent();\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            }); });\r\n                            return [2 /*return*/];\r\n                        });\r\n                    }); });\r\n                    return [2 /*return*/];\r\n                });\r\n            });\r\n        };\r\n        Teach.prototype.editQuestion = function (self, n) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var text;\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            log(\"Add Questions\");\r\n                            if (self.parent.current_compi < 0)\r\n                                return [2 /*return*/];\r\n                            log(\"this.current_token\", self.parent.current_token);\r\n                            return [4 /*yield*/, blockchain.getAnswer(this.parent.current_token, this.question_list[n].value)];\r\n                        case 1:\r\n                            text = _a.sent();\r\n                            textInput.visible = true;\r\n                            textInput.placeholder = text;\r\n                            textInput.value = text;\r\n                            textInput.onTextSubmit = new OnTextSubmit(function (x) { return __awaiter(_this, void 0, void 0, function () {\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0:\r\n                                            textInput.visible = false;\r\n                                            return [4 /*yield*/, blockchain.addQuestion(this.parent.current_token, this.question_list[n].value, x.text).then(function (tx) {\r\n                                                    log(\"addQuestion Ok \", tx);\r\n                                                }).catch(function (e) {\r\n                                                    log(\"Error on addQuestion\", e);\r\n                                                })];\r\n                                        case 1:\r\n                                            _a.sent();\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            }); });\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        Teach.prototype.askQuestion = function (self, n) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var answer;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, blockchain.getAnswer(this.parent.current_token, this.question_list[n].value)];\r\n                        case 1:\r\n                            answer = _a.sent();\r\n                            this.parent.answer_entity.getComponent(TextShape).value = answer;\r\n                            this.parent.compi_entity.play_random();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        Teach.prototype.getQuestions = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var offset, questions, n;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (!this.activated)\r\n                                return [2 /*return*/];\r\n                            offset = 0;\r\n                            return [4 /*yield*/, blockchain.getQuestions(this.parent.current_token, offset)];\r\n                        case 1:\r\n                            questions = _a.sent();\r\n                            log(questions);\r\n                            this.hideList();\r\n                            this.question_list = [];\r\n                            for (n = 0; n < 3; n++) {\r\n                                this.question_list_entity[n].getComponent(TextShape).value = questions[n];\r\n                                if (questions[n] != \"\") {\r\n                                    this.play_list_entity[n].getComponent(GLTFShape).visible = true;\r\n                                    this.edit_list_entity[n].getComponent(GLTFShape).visible = true;\r\n                                    this.delete_list_entity[n].getComponent(GLTFShape).visible = true;\r\n                                    this.question_list[n] = {\r\n                                        id: n + offset,\r\n                                        value: questions[n]\r\n                                    };\r\n                                }\r\n                            }\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        Teach.prototype.hideList = function () {\r\n            for (var n = 0; n < 3; n++) {\r\n                this.question_list_entity[n].getComponent(TextShape).value = \"\";\r\n                this.play_list_entity[n].getComponent(GLTFShape).visible = false;\r\n                this.edit_list_entity[n].getComponent(GLTFShape).visible = false;\r\n                this.delete_list_entity[n].getComponent(GLTFShape).visible = false;\r\n            }\r\n        };\r\n        Teach.prototype.deactivate = function () {\r\n            setname_shape.visible = false;\r\n            textInput.visible = false;\r\n            button_add_shape.visible = false;\r\n            this.hideList();\r\n            this.activated = false;\r\n        };\r\n        Teach.prototype.activate = function () {\r\n            setname_shape.visible = true;\r\n            button_add_shape.visible = true;\r\n            this.activated = true;\r\n            this.getQuestions();\r\n        };\r\n        return Teach;\r\n    }());\r\n    exports.Teach = Teach;\r\n});\r\ndefine(\"stool\", [\"require\", \"exports\", \"contracts\", \"mint\", \"teach\", \"compicactus\"], function (require, exports, contracts_3, mint_1, teach_1, compicactus_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Stool = void 0;\r\n    //Menu Shapes\r\n    var menu_mint_shape = new GLTFShape(\"models/menu_mint.gltf\");\r\n    var menu_chat_shape = new GLTFShape(\"models/menu_chat.gltf\");\r\n    var menu_teach_shape = new GLTFShape(\"models/menu_teach.gltf\");\r\n    var menu_photo_shape = new GLTFShape(\"models/menu_photo.gltf\");\r\n    var menu_sell_shape = new GLTFShape(\"models/menu_sell.gltf\");\r\n    var stool_shape = new GLTFShape(\"models/stool.gltf\");\r\n    //const compicactus_shape = new GLTFShape(\"models/Compicactus.glb\")\r\n    var sell_cargo_shape = new GLTFShape(\"models/sell_cargo.gltf\");\r\n    var sell_opensea_shape = new GLTFShape(\"models/sell_opensea.gltf\");\r\n    var left_shape = new GLTFShape(\"models/left.gltf\");\r\n    var right_shape = new GLTFShape(\"models/right.gltf\");\r\n    var compidata_shape = new TextShape();\r\n    var answer_shape = new TextShape();\r\n    var blockchain = new contracts_3.Blockchain(\"mumbai\");\r\n    var Stool = /** @class */ (function (_super) {\r\n        __extends(Stool, _super);\r\n        //compi_actions: Array<string>\r\n        function Stool() {\r\n            var _this = _super.call(this) || this;\r\n            // Menu entities\r\n            _this.menu_mint_entity = new Entity;\r\n            _this.menu_chat_entity = new Entity;\r\n            _this.menu_teach_entity = new Entity;\r\n            _this.menu_photo_entity = new Entity;\r\n            _this.menu_sell_entity = new Entity;\r\n            _this.sell_cargo_entity = new Entity;\r\n            _this.sell_opensea_entity = new Entity;\r\n            _this.left_entity = new Entity;\r\n            _this.right_entity = new Entity;\r\n            _this.compidata_entity = new Entity;\r\n            _this.answer_entity = new Entity;\r\n            _this.current_compi = -1;\r\n            _this.current_token = -1;\r\n            _this.current_menu = 0;\r\n            _this.addComponent(stool_shape);\r\n            _this.addComponent(new Transform({\r\n                position: new Vector3(8, 0, 8)\r\n            }));\r\n            _this.addComponent(new Billboard(false, true, false));\r\n            engine.addEntity(_this);\r\n            _this.mint = new mint_1.Mint(_this);\r\n            _this.teach = new teach_1.Teach(_this);\r\n            _this.setupSell();\r\n            _this.left_entity.addComponent(left_shape);\r\n            _this.left_entity.addComponent(new Transform());\r\n            _this.left_entity.setParent(_this);\r\n            engine.addEntity(_this.left_entity);\r\n            _this.left_entity.addComponent(new OnPointerDown(function () { _this.previous(_this); }, {\r\n                hoverText: \"Previous\",\r\n            }));\r\n            _this.right_entity.addComponent(right_shape);\r\n            _this.right_entity.addComponent(new Transform());\r\n            _this.right_entity.setParent(_this);\r\n            engine.addEntity(_this.right_entity);\r\n            _this.right_entity.addComponent(new OnPointerDown(function () { _this.next(_this); }, {\r\n                hoverText: \"Next\",\r\n            }));\r\n            _this.compi_entity = new compicactus_1.Compicactus();\r\n            _this.compi_entity.addComponent(new Transform({\r\n                position: new Vector3(0, 1.05, -0.1),\r\n                scale: new Vector3(0.4, 0.4, 0.4)\r\n            }));\r\n            _this.compi_entity.setParent(_this);\r\n            compidata_shape.fontSize = 1;\r\n            compidata_shape.value = \"-\";\r\n            _this.compidata_entity.addComponent(compidata_shape);\r\n            _this.compidata_entity.addComponent(new Transform({\r\n                position: new Vector3(0, 1.1, 0),\r\n                rotation: Quaternion.Euler(0, 180, 0)\r\n            }));\r\n            _this.compidata_entity.setParent(_this);\r\n            engine.addEntity(_this.compidata_entity);\r\n            answer_shape.fontSize = 2;\r\n            answer_shape.value = \"-\";\r\n            answer_shape.color = Color3.Black();\r\n            answer_shape.outlineColor = Color3.White();\r\n            answer_shape.outlineWidth = .1;\r\n            _this.answer_entity.addComponent(answer_shape);\r\n            _this.answer_entity.addComponent(new Transform({\r\n                position: new Vector3(0, 1.9, 0),\r\n                rotation: Quaternion.Euler(0, 180, 0)\r\n            }));\r\n            _this.answer_entity.setParent(_this);\r\n            engine.addEntity(_this.answer_entity);\r\n            _this.setupMenu();\r\n            _this.ownsCompi();\r\n            return _this;\r\n        }\r\n        Stool.prototype.setupSell = function () {\r\n            sell_cargo_shape.visible = false;\r\n            this.sell_cargo_entity.addComponent(sell_cargo_shape);\r\n            this.sell_cargo_entity.addComponent(new Transform());\r\n            this.sell_cargo_entity.setParent(this);\r\n            engine.addEntity(this.sell_cargo_entity);\r\n            this.sell_cargo_entity.addComponent(new OnPointerDown(function () {\r\n                openExternalURL(\"https://app.cargo.build\");\r\n            }, {\r\n                hoverText: \"Go to Cargo\",\r\n            }));\r\n            sell_opensea_shape.visible = false;\r\n            this.sell_opensea_entity.addComponent(sell_opensea_shape);\r\n            this.sell_opensea_entity.addComponent(new Transform());\r\n            this.sell_opensea_entity.setParent(this);\r\n            engine.addEntity(this.sell_opensea_entity);\r\n            this.sell_opensea_entity.addComponent(new OnPointerDown(function () {\r\n                openExternalURL(\"https://opensea.io/\");\r\n            }, {\r\n                hoverText: \"Go to OpenSea\",\r\n            }));\r\n        };\r\n        Stool.prototype.setupMenu = function () {\r\n            var _this = this;\r\n            this.menu_mint_entity.addComponent(menu_mint_shape);\r\n            this.menu_mint_entity.addComponent(new Transform());\r\n            this.menu_mint_entity.setParent(this);\r\n            engine.addEntity(this.menu_mint_entity);\r\n            this.menu_mint_entity.addComponent(new OnPointerDown(function () {\r\n                _this.current_menu = 0;\r\n                _this.updateMenu();\r\n            }, {\r\n                hoverText: \"Mint new Compi\",\r\n            }));\r\n            this.menu_chat_entity.addComponent(menu_chat_shape);\r\n            this.menu_chat_entity.addComponent(new Transform());\r\n            this.menu_chat_entity.setParent(this);\r\n            engine.addEntity(this.menu_chat_entity);\r\n            this.menu_chat_entity.addComponent(new OnPointerDown(function () {\r\n                _this.current_menu = 1;\r\n                _this.updateMenu();\r\n            }, {\r\n                hoverText: \"Chat with Compi\",\r\n            }));\r\n            this.menu_teach_entity.addComponent(menu_teach_shape);\r\n            this.menu_teach_entity.addComponent(new Transform());\r\n            this.menu_teach_entity.setParent(this);\r\n            engine.addEntity(this.menu_teach_entity);\r\n            this.menu_teach_entity.addComponent(new OnPointerDown(function () {\r\n                _this.current_menu = 2;\r\n                _this.updateMenu();\r\n            }, {\r\n                hoverText: \"Teach your Compi\",\r\n            }));\r\n            this.menu_photo_entity.addComponent(menu_photo_shape);\r\n            this.menu_photo_entity.addComponent(new Transform());\r\n            this.menu_photo_entity.setParent(this);\r\n            engine.addEntity(this.menu_photo_entity);\r\n            this.menu_photo_entity.addComponent(new OnPointerDown(function () {\r\n                _this.current_menu = 3;\r\n                _this.updateMenu();\r\n            }, {\r\n                hoverText: \"Photo mode\",\r\n            }));\r\n            this.menu_sell_entity.addComponent(menu_sell_shape);\r\n            this.menu_sell_entity.addComponent(new Transform());\r\n            this.menu_sell_entity.setParent(this);\r\n            engine.addEntity(this.menu_sell_entity);\r\n            this.menu_sell_entity.addComponent(new OnPointerDown(function () {\r\n                _this.current_menu = 4;\r\n                _this.updateMenu();\r\n            }, {\r\n                hoverText: \"Sell Compi\",\r\n            }));\r\n        };\r\n        Stool.prototype.updateMenu = function () {\r\n            // Hide all\r\n            this.mint.deactivate();\r\n            sell_cargo_shape.visible = false;\r\n            sell_opensea_shape.visible = false;\r\n            this.teach.deactivate();\r\n            //Show all\r\n            menu_mint_shape.visible = true;\r\n            menu_chat_shape.visible = true;\r\n            menu_teach_shape.visible = true;\r\n            menu_photo_shape.visible = true;\r\n            menu_sell_shape.visible = true;\r\n            if (this.current_menu == 0) { // Mint\r\n                this.mint.activate();\r\n                this.mint.updatePrice();\r\n            }\r\n            else if (this.current_menu == 1) { // Chat\r\n                //\r\n            }\r\n            else if (this.current_menu == 2) { // Teach\r\n                this.teach.activate();\r\n            }\r\n            else if (this.current_menu == 3) { // Photo\r\n                //menu_mint_shape.visible = false\r\n                menu_chat_shape.visible = false;\r\n                menu_teach_shape.visible = false;\r\n                menu_photo_shape.visible = false;\r\n                menu_sell_shape.visible = false;\r\n            }\r\n            else if (this.current_menu == 4) { // Sell\r\n                sell_cargo_shape.visible = true;\r\n                sell_opensea_shape.visible = true;\r\n            }\r\n        };\r\n        Stool.prototype.previous = function (self) {\r\n            self.goto(false);\r\n        };\r\n        Stool.prototype.next = function (self) {\r\n            self.goto(true);\r\n        };\r\n        Stool.prototype.goto = function (next) {\r\n            if (next === void 0) { next = true; }\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var compisCount;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            log(\"Getting compis\");\r\n                            return [4 /*yield*/, blockchain.balanceOf()];\r\n                        case 1:\r\n                            compisCount = _a.sent();\r\n                            if (compisCount > 0) {\r\n                                if (next) {\r\n                                    this.current_compi += 1;\r\n                                }\r\n                                else {\r\n                                    this.current_compi -= 1;\r\n                                }\r\n                                if (this.current_compi < 0) {\r\n                                    this.current_compi = compisCount;\r\n                                }\r\n                                else if (this.current_compi >= compisCount) {\r\n                                    this.current_compi = 0;\r\n                                }\r\n                                this.updateCompi();\r\n                            }\r\n                            log(this.current_compi);\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        Stool.prototype.ownsCompi = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var compisCount;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, blockchain.balanceOf()];\r\n                        case 1:\r\n                            compisCount = _a.sent();\r\n                            if (compisCount > 0) {\r\n                                this.current_compi = 0;\r\n                                this.updateCompi();\r\n                            }\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        Stool.prototype.updateCompi = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var compiId, compiName;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            compidata_shape.value = \"-\";\r\n                            return [4 /*yield*/, blockchain.tokenOfOwnerByIndex(this.current_compi)];\r\n                        case 1:\r\n                            compiId = _a.sent();\r\n                            this.current_token = compiId;\r\n                            return [4 /*yield*/, blockchain.getName(compiId)];\r\n                        case 2:\r\n                            compiName = _a.sent();\r\n                            compidata_shape.value = compiId + \":\" + compiName;\r\n                            this.teach.getQuestions();\r\n                            this.compi_entity.set_body(this.current_compi);\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        return Stool;\r\n    }(Entity));\r\n    exports.Stool = Stool;\r\n});\r\ndefine(\"game\", [\"require\", \"exports\", \"stool\"], function (require, exports, stool_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    new stool_1.Stool();\r\n    var building = new Entity();\r\n    building.addComponent(new GLTFShape(\"models/Building.gltf\"));\r\n    building.addComponent(new Transform({\r\n        position: new Vector3(8, 0, -8),\r\n        rotation: Quaternion.Euler(0, 90, 0)\r\n    }));\r\n    engine.addEntity(building);\r\n});\r\n/*\r\nconst cubePrice = new Entity()\r\ncubePrice.addComponent(new Transform({ position: new Vector3(8, 2, 8) }))\r\ncubePrice.addComponent(new BoxShape())\r\ncubePrice.addComponent(\r\n    new OnPointerDown(async (e) => {\r\n        log(\"Getting price\");\r\n\n        const price = await blockchain.getPrice();\r\n\n        log(\"price\", price);\r\n    },\r\n    {\r\n        hoverText: \"Get price\",\r\n    })\r\n)\r\nengine.addEntity(cubePrice)\r\n\nconst cubeMint = new Entity()\r\ncubeMint.addComponent(new Transform({ position: new Vector3(10, 2, 8) }))\r\ncubeMint.addComponent(new BoxShape())\r\ncubeMint.addComponent(\r\n    new OnPointerDown(async (e) => {\r\n        log(\"Minting\");\r\n\n        const price = await blockchain.getPrice();\r\n\n        log(\"price\", price);\r\n\n        await blockchain.increaseAllowance(price[0]).then(tx => {\r\n            log(\"IncreaseAllowance Ok \", tx)\r\n            blockchain.mintCompi().then(tx => {\r\n                log(\"Mint Ok \", tx)\r\n            }).catch(e => {\r\n                log(\"Error on mint\", e)\r\n            })\r\n        }).catch(e => {\r\n            log(\"Error on IncreaseAllowance\", e)\r\n        })\r\n\n    },\r\n    {\r\n        hoverText: \"Mint Compi\",\r\n    })\r\n)\r\nengine.addEntity(cubeMint)\r\n\nconst cubeCompis = new Entity()\r\ncubeCompis.addComponent(new Transform({ position: new Vector3(10, 2, 10) }))\r\ncubeCompis.addComponent(new BoxShape())\r\ncubeCompis.addComponent(\r\n    new OnPointerDown(async (e) => {\r\n        log(\"Getting compis\");\r\n\n        const compisCount = await blockchain.balanceOf();\r\n\n        const compiId = await blockchain.tokenOfOwnerByIndex(0);\r\n\n        const compiName = await blockchain.getName(compiId);\r\n\n        log(\"compis\", compisCount, compiId, compiName);\r\n\n    },\r\n    {\r\n        hoverText: \"Get compis\",\r\n    })\r\n)\r\nengine.addEntity(cubeCompis)\r\n\nconst cubeCompiName = new Entity()\r\ncubeCompiName.addComponent(new Transform({ position: new Vector3(12, 2, 10) }))\r\ncubeCompiName.addComponent(new BoxShape())\r\ncubeCompiName.addComponent(\r\n    new OnPointerDown(async (e) => {\r\n        log(\"Setting compi name\");\r\n\n        await blockchain.setName(0, \"Pepe\").then(tx => {\r\n            log(\"setName Ok \", tx)\r\n        }).catch(e => {\r\n            log(\"Error on setName\", e)\r\n        })\r\n\n    },\r\n    {\r\n        hoverText: \"Set compi name\",\r\n    })\r\n)\r\nengine.addEntity(cubeCompiName)\r\n\nconst cubeCompiAddQuestion = new Entity()\r\ncubeCompiAddQuestion.addComponent(new Transform({ position: new Vector3(12, 2, 12) }))\r\ncubeCompiAddQuestion.addComponent(new BoxShape())\r\ncubeCompiAddQuestion.addComponent(\r\n    new OnPointerDown(async (e) => {\r\n        log(\"Setting compi name\");\r\n\n        await blockchain.addQuestion(0, \"default\", \"Hi compi!\", \"Hi there!\").then(tx => {\r\n            log(\"addQuestion Ok \", tx)\r\n        }).catch(e => {\r\n            log(\"Error on addQuestion\", e)\r\n        })\r\n\n    },\r\n    {\r\n        hoverText: \"Add compi question\",\r\n    })\r\n)\r\nengine.addEntity(cubeCompiAddQuestion)\r\n\nconst cubeCompigGetAnswer = new Entity()\r\ncubeCompigGetAnswer.addComponent(new Transform({ position: new Vector3(12, 0.5, 12) }))\r\ncubeCompigGetAnswer.addComponent(new BoxShape())\r\ncubeCompigGetAnswer.addComponent(\r\n    new OnPointerDown(async (e) => {\r\n        log(\"Setting compi name\");\r\n\n        const answer = await blockchain.getAnswer(0, \"default\", \"Hi compi!\")\r\n        log(\"answer\", answer)\r\n    },\r\n    {\r\n        hoverText: \"Get answer\",\r\n    })\r\n)\r\nengine.addEntity(cubeCompigGetAnswer)\r\n*/\r\n//# sourceMappingURL=data:application/json;base64,\n//# sourceURL=dcl://src/stool.ts")